(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    244408,       4913]
NotebookOptionsPosition[    239740,       4824]
NotebookOutlinePosition[    240346,       4845]
CellTagsIndexPosition[    240240,       4840]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Estrategias de trading basadas en medias m\[OAcute]viles", "Title",
 CellChangeTimes->{{3.777400212661525*^9, 
  3.7774002224712753`*^9}},ExpressionUUID->"43b831dd-9380-4570-8c05-\
05f3288b120c"],

Cell[CellGroupData[{

Cell["Inicializaci\[OAcute]n", "Chapter",
 CellChangeTimes->{{3.777400229667172*^9, 
  3.77740023163906*^9}},ExpressionUUID->"ae9a1b2b-8fcc-49c9-802c-\
32690bff9bdf"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Needs", "[", 
   RowBox[{"\"\<AdvancedMapping`\>\"", ",", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<Extra\>\"", ",", 
       "\"\<AdvancedMapping.wl\>\""}], "}"}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Needs", "[", 
    RowBox[{"\"\<EconomicComputations`\>\"", ",", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", 
        "\"\<EconomicComputations.wl\>\""}], "}"}], "]"}]}], "]"}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Opciones", " ", "de", " ", "estilo"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"smallFontSize", " ", "=", " ", "13"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bigFontSize", " ", "=", " ", "15"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotSize", " ", "=", " ", "500"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"colors", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"ColorData", "[", "\"\<Legacy\>\"", "]"}], "[", 
      "\"\<IndianRed\>\"", "]"}], ",", "Black", ",", "Blue", ",", 
     RowBox[{
      RowBox[{"ColorData", "[", "\"\<Legacy\>\"", "]"}], "[", "\"\<Olive\>\"",
       "]"}]}], "}"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.725813801477882*^9, 3.725813842354185*^9}, 
   3.7258145952114487`*^9, {3.725815029462809*^9, 3.725815050374353*^9}, {
   3.725822160813527*^9, 3.725822210293992*^9}, {3.725823753066257*^9, 
   3.725823758353553*^9}, {3.7258238497826433`*^9, 3.7258238546235313`*^9}, {
   3.725826159542289*^9, 3.725826159775069*^9}, {3.725886137582262*^9, 
   3.725886137825506*^9}, {3.7258912353102493`*^9, 3.725891240101152*^9}, {
   3.725908856840219*^9, 3.725908857152266*^9}, {3.7259089115580063`*^9, 
   3.725908972319603*^9}, {3.7259090027497673`*^9, 3.725909005775334*^9}, {
   3.725909180222677*^9, 3.7259091821578503`*^9}, {3.725909857689686*^9, 
   3.7259098579284143`*^9}, {3.725911306756922*^9, 3.725911361342228*^9}, {
   3.725912152652165*^9, 3.725912229638928*^9}, {3.726161944526227*^9, 
   3.726161945773011*^9}, {3.726162117625463*^9, 3.726162117919694*^9}, {
   3.7261623472179117`*^9, 3.726162354684567*^9}, {3.726240902388068*^9, 
   3.726240902728302*^9}, {3.7262409758805933`*^9, 3.7262410033188047`*^9}, {
   3.726241262768165*^9, 3.726241304212583*^9}, {3.726241408073407*^9, 
   3.7262414175265408`*^9}, 3.726323552579049*^9, {3.7263273579102097`*^9, 
   3.726327359364676*^9}, {3.726327490478724*^9, 3.726327492005521*^9}, {
   3.726328254122326*^9, 3.726328257125023*^9}, {3.726328292868544*^9, 
   3.726328302032453*^9}, {3.7263291584760113`*^9, 3.726329172180461*^9}, {
   3.726329598747867*^9, 3.7263296020649557`*^9}, {3.7263307200371113`*^9, 
   3.726330776967119*^9}, {3.726331621514995*^9, 3.726331622870336*^9}, {
   3.726347600616104*^9, 3.726347608614952*^9}, {3.7263521315766897`*^9, 
   3.726352137598084*^9}, {3.726410318377204*^9, 3.726410319653459*^9}, 
   3.7264104024623423`*^9, {3.738611169349203*^9, 3.7386111782316427`*^9}, {
   3.738611222933153*^9, 3.738611250476118*^9}, {3.7566544178947763`*^9, 
   3.75665441991775*^9}, {3.756654453745466*^9, 3.756654487319433*^9}, 
   3.7566547895902443`*^9, {3.75665485095689*^9, 3.7566548610389843`*^9}, {
   3.761332937165599*^9, 3.761332962440831*^9}, {3.761332995433766*^9, 
   3.7613330062208347`*^9}, 3.77547795015276*^9, {3.777400243950224*^9, 
   3.7774002501351957`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"9ce68d2d-e508-4460-8bed-94bb1ae32a6d"],

Cell[CellGroupData[{

Cell["Informaci\[OAcute]n de los paquetes cargados", "Subsection",
 CellChangeTimes->{{3.7380019972646837`*^9, 3.738002000538846*^9}, {
  3.777400269499103*^9, 
  3.777400277504736*^9}},ExpressionUUID->"12ca49e4-3935-4b83-8343-\
d0bb4e5649db"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "AdvancedMapping`*"}]], "Input",
 CellLabel->"In[25]:=",ExpressionUUID->"59beb081-dcf7-43c0-8846-e231cb53299b"],

Cell[BoxData[
 StyleBox[
  FrameBox[GridBox[{
     {
      DynamicModuleBox[{Typeset`open$$ = True}, 
       PaneSelectorBox[{False->
        ButtonBox[
         RowBox[{
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEBitmaps", "RightPointerOpener"]], " ", 
          StyleBox["AdvancedMapping`", "InformationGridGroupHeader"]}],
         Appearance->None,
         BaseStyle->"InformationGridLink",
         ButtonFunction:>FEPrivate`Set[Typeset`open$$, True],
         Evaluator->Automatic,
         Method->"Preemptive"], True->
        PaneBox[GridBox[{
           {
            ButtonBox[
             RowBox[{
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], " ", 
              StyleBox["AdvancedMapping`", "InformationGridGroupHeader"]}],
             Appearance->None,
             BaseStyle->"InformationGridLink",
             ButtonFunction:>FEPrivate`Set[Typeset`open$$, False],
             Evaluator->Automatic,
             Method->"Preemptive"]},
           {
            PaneBox[GridBox[{
               {
                ButtonBox[
                 StyleBox["EvaluateIfChanged", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-abcacb4d-3e57-44e7-95f8-e95d34d0d1db", {
                   "EvaluateIfChanged", "AdvancedMapping`"}, False},
                 ButtonNote->"AdvancedMapping`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["LinkParallelEvaluate", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-abcacb4d-3e57-44e7-95f8-e95d34d0d1db", {
                   "LinkParallelEvaluate", "AdvancedMapping`"}, False},
                 ButtonNote->"AdvancedMapping`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["NestApplyWhileList", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-abcacb4d-3e57-44e7-95f8-e95d34d0d1db", {
                   "NestApplyWhileList", "AdvancedMapping`"}, False},
                 ButtonNote->"AdvancedMapping`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["ProgressParallelMap", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-abcacb4d-3e57-44e7-95f8-e95d34d0d1db", {
                   "ProgressParallelMap", "AdvancedMapping`"}, False},
                 ButtonNote->"AdvancedMapping`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["EvaluateOnce", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-abcacb4d-3e57-44e7-95f8-e95d34d0d1db", {
                   "EvaluateOnce", "AdvancedMapping`"}, False},
                 ButtonNote->"AdvancedMapping`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["MapIf", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-abcacb4d-3e57-44e7-95f8-e95d34d0d1db", {
                   "MapIf", "AdvancedMapping`"}, False},
                 ButtonNote->"AdvancedMapping`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["NestListIndexed", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-abcacb4d-3e57-44e7-95f8-e95d34d0d1db", {
                   "NestListIndexed", "AdvancedMapping`"}, False},
                 ButtonNote->"AdvancedMapping`",
                 Evaluator->Automatic], 
                ButtonBox[
                 
                 StyleBox["ProgressParallelMapThread", 
                  "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-abcacb4d-3e57-44e7-95f8-e95d34d0d1db", {
                   "ProgressParallelMapThread", "AdvancedMapping`"}, False},
                 ButtonNote->"AdvancedMapping`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["FoldWhile", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-abcacb4d-3e57-44e7-95f8-e95d34d0d1db", {
                   "FoldWhile", "AdvancedMapping`"}, False},
                 ButtonNote->"AdvancedMapping`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["MapIfElse", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-abcacb4d-3e57-44e7-95f8-e95d34d0d1db", {
                   "MapIfElse", "AdvancedMapping`"}, False},
                 ButtonNote->"AdvancedMapping`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["ParallelMapThread", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-abcacb4d-3e57-44e7-95f8-e95d34d0d1db", {
                   "ParallelMapThread", "AdvancedMapping`"}, False},
                 ButtonNote->"AdvancedMapping`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["ProgressParallelTable", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-abcacb4d-3e57-44e7-95f8-e95d34d0d1db", {
                   "ProgressParallelTable", "AdvancedMapping`"}, False},
                 ButtonNote->"AdvancedMapping`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["FoldWhileList", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-abcacb4d-3e57-44e7-95f8-e95d34d0d1db", {
                   "FoldWhileList", "AdvancedMapping`"}, False},
                 ButtonNote->"AdvancedMapping`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["MapPattern", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-abcacb4d-3e57-44e7-95f8-e95d34d0d1db", {
                   "MapPattern", "AdvancedMapping`"}, False},
                 ButtonNote->"AdvancedMapping`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["ProgressMap", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-abcacb4d-3e57-44e7-95f8-e95d34d0d1db", {
                   "ProgressMap", "AdvancedMapping`"}, False},
                 ButtonNote->"AdvancedMapping`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["ProgressTable", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-abcacb4d-3e57-44e7-95f8-e95d34d0d1db", {
                   "ProgressTable", "AdvancedMapping`"}, False},
                 ButtonNote->"AdvancedMapping`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["LinkEvaluate", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-abcacb4d-3e57-44e7-95f8-e95d34d0d1db", {
                   "LinkEvaluate", "AdvancedMapping`"}, False},
                 ButtonNote->"AdvancedMapping`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["NestApplyList", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-abcacb4d-3e57-44e7-95f8-e95d34d0d1db", {
                   "NestApplyList", "AdvancedMapping`"}, False},
                 ButtonNote->"AdvancedMapping`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["ProgressMapThread", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-abcacb4d-3e57-44e7-95f8-e95d34d0d1db", {
                   "ProgressMapThread", "AdvancedMapping`"}, False},
                 ButtonNote->"AdvancedMapping`",
                 Evaluator->Automatic], ""}
              },
              DefaultBaseStyle->"Text",
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
              GridBoxItemSize->{"Columns" -> {{
                   Scaled[0.2375]}}}],
             ImageMargins->{{10, 0}, {0, 2}}]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
         FrameMargins->{{0, 0}, {8, 0}}]}, Dynamic[Typeset`open$$],
        ImageSize->Automatic]]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{"ColumnsIndexed" -> {{False}}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.8]}, 
        Offset[0.2]}}],
   BaseStyle->"InformationTitleFrame"], "InformationGridPlain"]], "Output",
 CellChangeTimes->{3.77740041189569*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"df75c713-92ee-47e0-90ef-f5f1154427da"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "EconomicComputations`*"}]], "Input",
 CellChangeTimes->{3.738002019236318*^9},
 CellLabel->"In[26]:=",ExpressionUUID->"cb496632-c25b-46cd-8244-e4e933bd96c3"],

Cell[BoxData[
 StyleBox[
  FrameBox[GridBox[{
     {
      DynamicModuleBox[{Typeset`open$$ = True}, 
       PaneSelectorBox[{False->
        ButtonBox[
         RowBox[{
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEBitmaps", "RightPointerOpener"]], " ", 
          StyleBox["EconomicComputations`", "InformationGridGroupHeader"]}],
         Appearance->None,
         BaseStyle->"InformationGridLink",
         ButtonFunction:>FEPrivate`Set[Typeset`open$$, True],
         Evaluator->Automatic,
         Method->"Preemptive"], True->
        PaneBox[GridBox[{
           {
            ButtonBox[
             RowBox[{
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], " ", 
              
              StyleBox["EconomicComputations`", 
               "InformationGridGroupHeader"]}],
             Appearance->None,
             BaseStyle->"InformationGridLink",
             ButtonFunction:>FEPrivate`Set[Typeset`open$$, False],
             Evaluator->Automatic,
             Method->"Preemptive"]},
           {
            PaneBox[GridBox[{
               {
                ButtonBox[
                 StyleBox["AddKeyToMarket", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-136c4867-2782-48d1-b6af-30079f2b3532", {
                   "AddKeyToMarket", "EconomicComputations`"}, False},
                 ButtonNote->"EconomicComputations`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["ExportDatabase", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-136c4867-2782-48d1-b6af-30079f2b3532", {
                   "ExportDatabase", "EconomicComputations`"}, False},
                 ButtonNote->"EconomicComputations`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["Returns", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-136c4867-2782-48d1-b6af-30079f2b3532", {
                   "Returns", "EconomicComputations`"}, False},
                 ButtonNote->"EconomicComputations`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["AddToDataset", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-136c4867-2782-48d1-b6af-30079f2b3532", {
                   "AddToDataset", "EconomicComputations`"}, False},
                 ButtonNote->"EconomicComputations`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["ExportMarket", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-136c4867-2782-48d1-b6af-30079f2b3532", {
                   "ExportMarket", "EconomicComputations`"}, False},
                 ButtonNote->"EconomicComputations`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["RightCutoff", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-136c4867-2782-48d1-b6af-30079f2b3532", {
                   "RightCutoff", "EconomicComputations`"}, False},
                 ButtonNote->"EconomicComputations`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["CalculateCutoff", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 ButtonData:>{
                  "Info-136c4867-2782-48d1-b6af-30079f2b3532", {
                   "CalculateCutoff", "EconomicComputations`"}, False},
                 ButtonNote->"EconomicComputations`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["ExtremeEventThreshold", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-136c4867-2782-48d1-b6af-30079f2b3532", {
                   "ExtremeEventThreshold", "EconomicComputations`"}, False},
                 ButtonNote->"EconomicComputations`",
                 Evaluator->Automatic], 
                ButtonBox[
                 
                 StyleBox["SelectDatedGaussianReturns", 
                  "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-136c4867-2782-48d1-b6af-30079f2b3532", {
                   "SelectDatedGaussianReturns", "EconomicComputations`"}, 
                   False},
                 ButtonNote->"EconomicComputations`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["DatasetBuilderDialog", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-136c4867-2782-48d1-b6af-30079f2b3532", {
                   "DatasetBuilderDialog", "EconomicComputations`"}, False},
                 ButtonNote->"EconomicComputations`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["FindImportantDates", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-136c4867-2782-48d1-b6af-30079f2b3532", {
                   "FindImportantDates", "EconomicComputations`"}, False},
                 ButtonNote->"EconomicComputations`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["SelectGaussianReturns", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-136c4867-2782-48d1-b6af-30079f2b3532", {
                   "SelectGaussianReturns", "EconomicComputations`"}, False},
                 ButtonNote->"EconomicComputations`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["DatedReturns", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-136c4867-2782-48d1-b6af-30079f2b3532", {
                   "DatedReturns", "EconomicComputations`"}, False},
                 ButtonNote->"EconomicComputations`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["GetExtremeEventDates", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-136c4867-2782-48d1-b6af-30079f2b3532", {
                   "GetExtremeEventDates", "EconomicComputations`"}, False},
                 ButtonNote->"EconomicComputations`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["SimpleReturns", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-136c4867-2782-48d1-b6af-30079f2b3532", {
                   "SimpleReturns", "EconomicComputations`"}, False},
                 ButtonNote->"EconomicComputations`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["DatedSimpleReturns", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-136c4867-2782-48d1-b6af-30079f2b3532", {
                   "DatedSimpleReturns", "EconomicComputations`"}, False},
                 ButtonNote->"EconomicComputations`",
                 Evaluator->Automatic], 
                ButtonBox[
                 
                 StyleBox["GetExtremeEventDateValues", 
                  "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-136c4867-2782-48d1-b6af-30079f2b3532", {
                   "GetExtremeEventDateValues", "EconomicComputations`"}, 
                   False},
                 ButtonNote->"EconomicComputations`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["TrendDuration", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-136c4867-2782-48d1-b6af-30079f2b3532", {
                   "TrendDuration", "EconomicComputations`"}, False},
                 ButtonNote->"EconomicComputations`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["DatedTrendDuration", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-136c4867-2782-48d1-b6af-30079f2b3532", {
                   "DatedTrendDuration", "EconomicComputations`"}, False},
                 ButtonNote->"EconomicComputations`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["KullbackLeibler", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-136c4867-2782-48d1-b6af-30079f2b3532", {
                   "KullbackLeibler", "EconomicComputations`"}, False},
                 ButtonNote->"EconomicComputations`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["TrendReturns", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-136c4867-2782-48d1-b6af-30079f2b3532", {
                   "TrendReturns", "EconomicComputations`"}, False},
                 ButtonNote->"EconomicComputations`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["DatedTrendReturns", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-136c4867-2782-48d1-b6af-30079f2b3532", {
                   "DatedTrendReturns", "EconomicComputations`"}, False},
                 ButtonNote->"EconomicComputations`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["KullbackLeiblerInTime", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-136c4867-2782-48d1-b6af-30079f2b3532", {
                   "KullbackLeiblerInTime", "EconomicComputations`"}, False},
                 ButtonNote->"EconomicComputations`",
                 Evaluator->Automatic], 
                ButtonBox[
                 
                 StyleBox["UncorrelatedMultiscaleReturns", 
                  "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-136c4867-2782-48d1-b6af-30079f2b3532", {
                   "UncorrelatedMultiscaleReturns", "EconomicComputations`"}, 
                   False},
                 ButtonNote->"EconomicComputations`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 
                 StyleBox["DatedVelocityTrendReturns", 
                  "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-136c4867-2782-48d1-b6af-30079f2b3532", {
                   "DatedVelocityTrendReturns", "EconomicComputations`"}, 
                   False},
                 ButtonNote->"EconomicComputations`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["LeftCutoff", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-136c4867-2782-48d1-b6af-30079f2b3532", {
                   "LeftCutoff", "EconomicComputations`"}, False},
                 ButtonNote->"EconomicComputations`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["UncorrelatedReturns", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-136c4867-2782-48d1-b6af-30079f2b3532", {
                   "UncorrelatedReturns", "EconomicComputations`"}, False},
                 ButtonNote->"EconomicComputations`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 
                 StyleBox["DetendedMultiscaleReturns", 
                  "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-136c4867-2782-48d1-b6af-30079f2b3532", {
                   "DetendedMultiscaleReturns", "EconomicComputations`"}, 
                   False},
                 ButtonNote->"EconomicComputations`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["MultiscaleReturns", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-136c4867-2782-48d1-b6af-30079f2b3532", {
                   "MultiscaleReturns", "EconomicComputations`"}, False},
                 ButtonNote->"EconomicComputations`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["UpwardTrendDuration", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-136c4867-2782-48d1-b6af-30079f2b3532", {
                   "UpwardTrendDuration", "EconomicComputations`"}, False},
                 ButtonNote->"EconomicComputations`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["DetrendedReturns", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-136c4867-2782-48d1-b6af-30079f2b3532", {
                   "DetrendedReturns", "EconomicComputations`"}, False},
                 ButtonNote->"EconomicComputations`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["PowerLawAndersonDarling", "InformationGridButton"],
                 
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-136c4867-2782-48d1-b6af-30079f2b3532", {
                   "PowerLawAndersonDarling", "EconomicComputations`"}, False},
                 ButtonNote->"EconomicComputations`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["VelocityTrendReturns", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-136c4867-2782-48d1-b6af-30079f2b3532", {
                   "VelocityTrendReturns", "EconomicComputations`"}, False},
                 ButtonNote->"EconomicComputations`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["DownwardTrendDuration", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-136c4867-2782-48d1-b6af-30079f2b3532", {
                   "DownwardTrendDuration", "EconomicComputations`"}, False},
                 ButtonNote->"EconomicComputations`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["PricesFromReturns", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-136c4867-2782-48d1-b6af-30079f2b3532", {
                   "PricesFromReturns", "EconomicComputations`"}, False},
                 ButtonNote->"EconomicComputations`",
                 Evaluator->Automatic], ""},
               {
                ButtonBox[
                 StyleBox["EventProbability", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-136c4867-2782-48d1-b6af-30079f2b3532", {
                   "EventProbability", "EconomicComputations`"}, False},
                 ButtonNote->"EconomicComputations`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["PricesFromSimpleReturns", "InformationGridButton"],
                 
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-136c4867-2782-48d1-b6af-30079f2b3532", {
                   "PricesFromSimpleReturns", "EconomicComputations`"}, False},
                 ButtonNote->"EconomicComputations`",
                 Evaluator->Automatic], ""}
              },
              DefaultBaseStyle->"Text",
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
              GridBoxItemSize->{"Columns" -> {{
                   Scaled[0.31666666666666665`]}}}],
             ImageMargins->{{10, 0}, {0, 2}}]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
         FrameMargins->{{0, 0}, {8, 0}}]}, Dynamic[Typeset`open$$],
        ImageSize->Automatic]]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{"ColumnsIndexed" -> {{False}}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.8]}, 
        Offset[0.2]}}],
   BaseStyle->"InformationTitleFrame"], "InformationGridPlain"]], "Output",
 CellChangeTimes->{3.7774004144927673`*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"b1dd4bfa-e889-40f3-aa1c-c0b19d889e35"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*\\nStyleBox[\\\"PricesFromReturns\\\",\\\
nFontWeight->\\\"Bold\\\"]\\)[\\!\\(\\*\\nStyleBox[\\\"returns\\\",\\\
nFontSlant->\\\"Italic\\\"]\\)] return prices from logarithmic returns with \
lag 1.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{
                    "PricesFromReturns", "[", 
                    "EconomicComputations`Private`returns_", "]"}], ":=", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", "EconomicComputations`Private`acc", "}"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"EconomicComputations`Private`acc", "=", 
                    RowBox[{
                    "Accumulate", "[", "EconomicComputations`Private`returns",
                     "]"}]}], ";", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Exp", "[", "#1", "]"}], "-", "1"}], "&"}], ")"}],
                     "/@", 
                    RowBox[{"(", 
                    RowBox[{"EconomicComputations`Private`acc", "-", 
                    RowBox[{
                    "Min", "[", "EconomicComputations`Private`acc", "]"}]}], 
                    ")"}]}]}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], \
"\<\"EconomicComputations`PricesFromReturns\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*\\nStyleBox[\\\"PricesFromReturns\\\",\\\
nFontWeight->\\\"Bold\\\"]\\)[\\!\\(\\*\\nStyleBox[\\\"returns\\\",\\\
nFontSlant->\\\"Italic\\\"]\\)] return prices from logarithmic returns with \
lag 1.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*\nStyleBox[\"PricesFromReturns\",\nFontWeight->\"Bold\"]\)[\!\(\*\n\
StyleBox[\"returns\",\nFontSlant->\"Italic\"]\)] return prices from \
logarithmic returns with lag 1.", "Documentation" -> None, "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, EconomicComputations`PricesFromReturns, {
      EconomicComputations`PricesFromReturns[
         Pattern[EconomicComputations`Private`returns, 
          Blank[]]] :> 
       Block[{EconomicComputations`Private`acc}, 
         EconomicComputations`Private`acc = 
          Accumulate[EconomicComputations`Private`returns]; 
         Map[Exp[#] - 1& , EconomicComputations`Private`acc - Min[
           EconomicComputations`Private`acc]]]}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "EconomicComputations`PricesFromReturns"], False]]], "Print",
 CellTags->
  "Info-136c4867-2782-48d1-b6af-30079f2b3532",ExpressionUUID->"0edb7e62-49c2-\
48c7-9543-54a490746bb3"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Cargar base de datos", "Chapter",
 CellChangeTimes->{{3.777400301087185*^9, 
  3.777400304329691*^9}},ExpressionUUID->"5cc92109-5078-4b33-9581-\
462906b374da"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"DatedPrices", "[", 
    RowBox[{"dates_", ",", "prices_"}], "]"}], ":=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"dates", ",", "prices"}], "}"}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.777400483822969*^9, 3.777400497442871*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"41a03ed3-cc44-4089-b0af-8fbfee8b287e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"path", " ", "=", " ", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", 
      "\"\<DJI_DAX_MXX_NIKKEI_dataset.mx\>\""}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"database", " ", "=", " ", 
   RowBox[{"Import", "[", "path", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"database", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "\"\<Name\>\""}], "]"}], "]"}], " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "\"\<DJIA\>\"", ",", "\"\<NASDAQ Composite\>\"", ",", "\"\<IPC\>\"", ",", 
     "\"\<Nikkei 225\>\""}], "}"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.725908928874539*^9, {3.7386112566008368`*^9, 3.7386112689098263`*^9}, {
   3.7564739455548563`*^9, 3.756473966482794*^9}, {3.756477138657824*^9, 
   3.7564771389575453`*^9}, {3.76133308942835*^9, 3.761333091876583*^9}, {
   3.771960534143981*^9, 3.771960545447304*^9}, {3.772036063276965*^9, 
   3.7720360665464077`*^9}, {3.772036241194306*^9, 3.77203625287162*^9}, {
   3.775477961165186*^9, 3.775477969288271*^9}, 3.7754780131425*^9, {
   3.777400341397171*^9, 3.777400351848933*^9}, {3.777400447901471*^9, 
   3.777400460342659*^9}, {3.777400507434965*^9, 3.777400507705071*^9}, {
   3.777400572427231*^9, 3.7774005725833693`*^9}, {3.777400609877466*^9, 
   3.777400611273203*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"857b1afa-f812-49ea-9b91-0ec6c50440ec"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definici\[OAcute]n de estrategias", "Chapter",
 CellChangeTimes->{{3.777400289004139*^9, 
  3.777400292992384*^9}},ExpressionUUID->"5eaae94e-1e68-48c4-8231-\
1a6f4f2cdf02"],

Cell["Funciones para pasar fecha a a\[NTilde]o porcentual y viceversa.", \
"Text",
 CellChangeTimes->{{3.777401012979505*^9, 
  3.777401030650228*^9}},ExpressionUUID->"e6879fdf-6bf8-4ea1-8fb6-\
31b0b864bb77"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DaysInYear", "[", "year_", "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"First", "[", 
      RowBox[{"DateDifference", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"year", ",", " ", "1", ",", " ", "1"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"year", ",", " ", "12", ",", " ", "31"}], "}"}]}], "]"}], 
      "]"}], " ", "+", " ", "1"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"YearPercentual", "[", "date_", "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"N", "[", 
      RowBox[{
       RowBox[{"QuantityMagnitude", "[", 
        RowBox[{"DateDifference", "[", 
         RowBox[{
          RowBox[{"DateObject", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"date", "[", "\"\<Year\>\"", "]"}], ",", " ", "1", ",", 
             " ", "1"}], "}"}], "]"}], ",", " ", "date"}], "]"}], "]"}], " ", 
       "/", " ", 
       RowBox[{"DaysInYear", "[", 
        RowBox[{"date", "[", "\"\<Year\>\"", "]"}], "]"}]}], "]"}], " ", "+", 
     " ", 
     RowBox[{"date", "[", "\"\<Year\>\"", "]"}]}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"DateFromYearPercentual", "[", "yearPercentual_", "]"}], " ", ":=",
    " ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"year", ",", " ", "daysEllapsed", ",", " ", "date"}], "}"}], 
     ",", "\n", "\t", 
     RowBox[{
      RowBox[{"year", " ", "=", " ", 
       RowBox[{"IntegerPart", "[", "yearPercentual", "]"}]}], ";", "\n", "\t", 
      RowBox[{"daysEllapsed", " ", "=", " ", 
       RowBox[{"IntegerPart", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"yearPercentual", " ", "-", " ", "year"}], ")"}], " ", "*", 
         " ", 
         RowBox[{"DaysInYear", "[", "year", "]"}]}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"date", " ", "=", " ", 
       RowBox[{"DatePlus", "[", 
        RowBox[{
         RowBox[{"DateObject", "[", 
          RowBox[{"{", 
           RowBox[{"year", ",", " ", "1", ",", " ", "1"}], "}"}], "]"}], ",", 
         " ", "daysEllapsed"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"Return", "[", "date", "]"}], ";"}]}], "\n", "]"}]}], 
  ";"}]}], "Code",
 CellLabel->"In[11]:=",ExpressionUUID->"e39654f6-1f97-45a1-bdd9-1aab9a194383"],

Cell["Calcula intersecciones entre medias m\[OAcute]viles", "Text",
 CellChangeTimes->{{3.777401036234069*^9, 
  3.777401050493348*^9}},ExpressionUUID->"b71f47ca-977c-4de9-9918-\
0073eefb754b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"RootsInRange", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"f1_", ",", " ", "f2_"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"t_", ",", " ", "tmin_", ",", " ", "tmax_"}], "}"}], ",", " ", 
      "opts___"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"p", ",", " ", "r", ",", " ", "pts", ",", " ", "x", ",", " ", 
        RowBox[{"f", " ", "=", " ", 
         RowBox[{"Function", "[", 
          RowBox[{"t", ",", " ", 
           RowBox[{"Evaluate", "[", 
            RowBox[{"f1", "-", "f2"}], "]"}]}], "]"}]}]}], "}"}], ",", "\n", 
      "\t", "\n", "\t", 
      RowBox[{
       RowBox[{"p", " ", "=", " ", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"f", "[", "t", "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"t", ",", " ", "tmin", ",", " ", "tmax"}], "}"}]}], 
         "]"}]}], ";", "\n", "\t", 
       RowBox[{"pts", " ", "=", " ", 
        RowBox[{"Cases", "[", 
         RowBox[{
          RowBox[{"First", "[", "p", "]"}], ",", " ", 
          RowBox[{
           RowBox[{"Line", "[", 
            RowBox[{"{", "x__", "}"}], "]"}], "->", "x"}], ",", " ", 
          "Infinity"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"r", " ", "=", " ", 
        RowBox[{"Abs", "[", 
         RowBox[{"Subtract", "@@", 
          RowBox[{"Last", "@", 
           RowBox[{"PlotRange", "[", "p", "]"}]}]}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"pts", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{"First", ",", " ", 
          RowBox[{"Select", "[", 
           RowBox[{
            RowBox[{"Split", "[", 
             RowBox[{"pts", ",", " ", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"Sign", "[", 
                  RowBox[{"Last", "[", "#2", "]"}], "]"}], " ", "==", " ", 
                 RowBox[{"-", 
                  RowBox[{"Sign", "[", 
                   RowBox[{"Last", "[", "#1", "]"}], "]"}]}]}], " ", "&&", 
                " ", 
                RowBox[{
                 RowBox[{"Abs", "[", 
                  RowBox[{
                   RowBox[{"Last", "[", "#2", "]"}], "-", 
                   RowBox[{"Last", "[", "#1", "]"}]}], "]"}], " ", "<", " ", 
                 RowBox[{"r", "/", "2"}]}]}], "&"}]}], "]"}], ",", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "#1", "]"}], " ", "==", " ", "2"}], 
             "&"}]}], "]"}], ",", " ", 
          RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"pts", " ", "=", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"FindRoot", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"f", "[", "t", "]"}], "==", "0"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"t", ",", " ", 
               RowBox[{"Sequence", "@@", "##"}]}], "}"}], ",", " ", 
             RowBox[{"Evaluate", "[", 
              RowBox[{"Sequence", "@@", 
               RowBox[{"FilterRules", "[", 
                RowBox[{
                 RowBox[{"{", "opts", "}"}], ",", " ", 
                 RowBox[{"Options", "@", "FindRoot"}]}], "]"}]}], "]"}]}], 
            "]"}], "&"}], ")"}], "/@", "pts"}]}], ";", "\n", "\t", "pts"}]}], 
     "\n", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"RootsInRange", "[", 
     RowBox[{
      RowBox[{"f1_", "==", "f2_"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"t_", ",", " ", "tmin_", ",", " ", "tmax_"}], "}"}], ",", " ", 
      "opts___"}], "]"}], " ", ":=", " ", 
    RowBox[{"RootsInRange", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"f1", ",", " ", "f2"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"t", ",", " ", "tmin", ",", " ", "tmax"}], "}"}], ",", " ", 
      "opts"}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Middle", "[", "l_List", "]"}], " ", ":=", " ", 
    RowBox[{"Part", "[", 
     RowBox[{"l", ",", " ", 
      RowBox[{"Floor", "[", 
       RowBox[{
        RowBox[{"Length", "[", "l", "]"}], "/", "2"}], "]"}]}], "]"}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"VariableMovingAverage", "[", 
     RowBox[{"l_List", ",", " ", "f_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"subLists", ",", " ", "windows"}], "}"}], ",", " ", "\n", "\t", 
      RowBox[{
       RowBox[{"windows", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Ceiling", "[", 
            RowBox[{"f", "[", "#", "]"}], "]"}], "&"}], ",", " ", 
          RowBox[{"l", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", " ", "2"}], "]"}], "]"}]}], "]"}]}], ";", 
       "\n", "\t", 
       RowBox[{"subLists", " ", "=", " ", 
        RowBox[{"DeleteCases", "[", 
         RowBox[{
          RowBox[{"TakeList", "[", 
           RowBox[{"l", ",", " ", 
            RowBox[{"Map", "[", 
             RowBox[{"UpTo", ",", " ", "windows"}], "]"}]}], "]"}], ",", " ", 
          
          RowBox[{"{", "}"}]}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Middle", "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", " ", "1"}], "]"}], "]"}], "]"}], ",", " ", 
            
            RowBox[{"Mean", "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], "]"}]}], "}"}], 
          "&"}], ",", " ", "subLists"}], "]"}]}]}], "\n", "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CrossoverTrading", "[", 
    RowBox[{"datedPrices_", ",", " ", "f1_", ",", " ", "f2_"}], "]"}], " ", ":=",
    " ", 
   RowBox[{"Module", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t", 
      RowBox[{
      "numericDatePrices", ",", " ", "avg1", ",", " ", "avg2", ",", " ", 
       "datesMin", ",", " ", "datesMax", ",", " ", "priceInterpolation", ",", 
       " ", "avg1Interpolation", ",", " ", "avg2Interpolation", ",", " ", 
       "\n", "\t\t", "intersectionDates", ",", " ", "x", ",", " ", "firstInt",
        ",", " ", "signals", ",", " ", "buySignals", ",", " ", "sellSignals", 
       ",", " ", "operations", ",", " ", "return", ",", " ", "result"}], "\n",
       "\t", "}"}], ",", " ", "\n", "\t", 
     RowBox[{
      RowBox[{"numericDatePrices", " ", "=", " ", 
       RowBox[{"MapAt", "[", 
        RowBox[{"YearPercentual", ",", " ", "datedPrices", ",", " ", 
         RowBox[{"{", 
          RowBox[{"All", ",", "1"}], "}"}]}], "]"}]}], ";", "\n", "\n", "\t", 
      
      RowBox[{"avg1", " ", "=", " ", 
       RowBox[{"f1", "[", "numericDatePrices", "]"}]}], ";", "\n", "\t", 
      RowBox[{"avg2", " ", "=", " ", 
       RowBox[{"f2", "[", "numericDatePrices", "]"}]}], ";", "\n", "\t", 
      RowBox[{"datesMin", " ", "=", " ", 
       RowBox[{"Max", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"avg1", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", " ", "1"}], "]"}], "]"}], ",", " ", 
          RowBox[{"avg2", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", " ", "1"}], "]"}], "]"}]}], "}"}], "]"}]}], ";",
       "\n", "\t", 
      RowBox[{"datesMax", " ", "=", " ", 
       RowBox[{"Min", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"avg1", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"-", "1"}], ",", " ", "1"}], "]"}], "]"}], ",", " ", 
          RowBox[{"avg2", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"-", "1"}], ",", " ", "1"}], "]"}], "]"}]}], "}"}], 
        "]"}]}], ";", "\n", "\n", "\t", 
      RowBox[{"priceInterpolation", " ", "=", " ", 
       RowBox[{"Interpolation", "[", "numericDatePrices", "]"}]}], ";", "\n", 
      "\t", 
      RowBox[{"avg1Interpolation", " ", "=", " ", 
       RowBox[{"Interpolation", "[", "avg1", "]"}]}], ";", "\n", "\t", 
      RowBox[{"avg2Interpolation", " ", "=", " ", 
       RowBox[{"Interpolation", "[", "avg2", "]"}]}], ";", "\n", "\t", "\n", 
      "\t", 
      RowBox[{"intersectionDates", " ", "=", " ", 
       RowBox[{"x", " ", "/.", 
        RowBox[{"RootsInRange", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"avg1Interpolation", "[", "x", "]"}], "==", 
           RowBox[{"avg2Interpolation", "[", "x", "]"}]}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"x", ",", " ", "datesMin", ",", " ", "datesMax"}], "}"}]}],
          "]"}]}]}], ";", "\n", "\t", "\n", "\t", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Verificar", " ", "que", " ", "la", " ", "primera", " ", 
        "intersecci\[OAcute]n", " ", "sea", " ", "una", " ", 
        "operaci\[OAcute]n", " ", "de", " ", "compra"}], " ", "*)"}], "\n", 
      "\t", 
      RowBox[{"firstInt", " ", "=", " ", 
       RowBox[{"First", "[", "intersectionDates", "]"}]}], ";", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"avg1Interpolation", "'"}], "[", "firstInt", "]"}], "-", 
          RowBox[{
           RowBox[{"avg2Interpolation", "'"}], "[", "firstInt", "]"}]}], "<", 
         "0"}], ",", " ", 
        RowBox[{"intersectionDates", " ", "=", " ", 
         RowBox[{"Drop", "[", 
          RowBox[{"intersectionDates", ",", " ", "1"}], "]"}]}]}], "]"}], ";",
       "\n", "\t", "\n", "\t", 
      RowBox[{"signals", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"DateFromYearPercentual", "[", "#", "]"}], ",", " ", 
            RowBox[{"priceInterpolation", "[", "#", "]"}]}], "}"}], "&"}], 
         ",", " ", "intersectionDates"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"buySignals", " ", "=", " ", 
       RowBox[{"signals", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", 
          RowBox[{"-", "1"}], ";;", "2"}], "]"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"sellSignals", " ", "=", " ", 
       RowBox[{"signals", "[", 
        RowBox[{"[", 
         RowBox[{"2", ";;", 
          RowBox[{"-", "1"}], ";;", "2"}], "]"}], "]"}]}], ";", "\n", "\n", 
      "\t", 
      RowBox[{"operations", " ", "=", " ", 
       RowBox[{"Partition", "[", 
        RowBox[{
         RowBox[{"priceInterpolation", "[", "intersectionDates", "]"}], ",", 
         " ", "2"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"return", " ", "=", " ", 
       RowBox[{"Total", "[", 
        RowBox[{
         RowBox[{"operations", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], "-", 
         RowBox[{"operations", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", " ", "1"}], "]"}], "]"}]}], "]"}]}], ";", "\n",
       "\n", "\t", 
      RowBox[{"result", " ", "=", " ", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<BuySignals\>\"", "->", "buySignals"}], ",", " ", 
         RowBox[{"\"\<SellSignals\>\"", "->", "sellSignals"}], ",", " ", 
         RowBox[{"\"\<Return\>\"", "->", "return"}]}], "|>"}]}], ";", "\n", 
      "\t", 
      RowBox[{"Return", "[", "result", "]"}], ";"}]}], "\n", "]"}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.777399842115972*^9, 3.777399911241643*^9}, 
   3.777401403821994*^9, {3.777401784883412*^9, 3.7774017916376543`*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"947ee5d7-ddea-4d5a-89c3-7a87d59871f2"],

Cell[CellGroupData[{

Cell["Idea del algoritmo", "Subsection",
 CellChangeTimes->{{3.777401109005251*^9, 
  3.777401111045497*^9}},ExpressionUUID->"d668494f-ebdd-400b-8f0a-\
5887330195a8"],

Cell["Tomamos 20 muestras de precios.", "Text",
 CellChangeTimes->{{3.777402003202306*^9, 
  3.777402016547943*^9}},ExpressionUUID->"9ea65954-9d69-4798-842c-\
832f62a933d9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"datos", " ", "=", " ", 
  RowBox[{"Take", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"First", "[", "database", "]"}], "[", "\"\<DatedPrices\>\"", 
     "]"}], ",", "20"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.777401124293899*^9, 3.777401159337607*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"8038292a-dc32-4d03-a7f9-bfcc8f8a5d7c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Fri 8 Nov 1991\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"1991", ",", "11", ",", "8"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "6.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "1606.199951171875`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Mon 11 Nov 1991\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"1991", ",", "11", ",", "11"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "6.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "1609"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Tue 12 Nov 1991\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"1991", ",", "11", ",", "12"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "6.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "1621.199951171875`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Wed 13 Nov 1991\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"1991", ",", "11", ",", "13"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "6.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "1623.199951171875`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Thu 14 Nov 1991\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"1991", ",", "11", ",", "14"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "6.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "1621"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Fri 15 Nov 1991\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"1991", ",", "11", ",", "15"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "6.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "1629.4000244140625`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Mon 18 Nov 1991\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"1991", ",", "11", ",", "18"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "6.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "1611.9000244140625`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Tue 19 Nov 1991\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"1991", ",", "11", ",", "19"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "6.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "1599.0999755859375`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Thu 21 Nov 1991\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"1991", ",", "11", ",", "21"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "6.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "1598.0999755859375`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Fri 22 Nov 1991\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"1991", ",", "11", ",", "22"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "6.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "1600.300048828125`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Mon 25 Nov 1991\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"1991", ",", "11", ",", "25"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "6.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "1589.199951171875`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Tue 26 Nov 1991\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"1991", ",", "11", ",", "26"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "6.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "1602.9000244140625`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Wed 27 Nov 1991\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"1991", ",", "11", ",", "27"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "6.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "1586.199951171875`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Thu 28 Nov 1991\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"1991", ",", "11", ",", "28"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "6.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "1588.199951171875`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Fri 29 Nov 1991\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"1991", ",", "11", ",", "29"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "6.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "1566.5999755859375`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Mon 2 Dec 1991\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"1991", ",", "12", ",", "2"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "6.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "1545.4000244140625`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Tue 3 Dec 1991\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"1991", ",", "12", ",", "3"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "6.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "1546.800048828125`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Wed 4 Dec 1991\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"1991", ",", "12", ",", "4"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "6.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "1561"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Thu 5 Dec 1991\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"1991", ",", "12", ",", "5"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "6.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "1553.4000244140625`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Fri 6 Dec 1991\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"1991", ",", "12", ",", "6"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "6.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "1558.199951171875`"}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{3.777401160038438*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"49abcbed-5c66-440e-ab9f-a30dc61c6d80"]
}, Open  ]],

Cell["\<\
Para poder computar una media m\[OAcute]vil es necesario pasar las fechas a \
fechas porcentuales.\
\>", "Text",
 CellChangeTimes->{{3.777402013180151*^9, 
  3.7774020350099154`*^9}},ExpressionUUID->"2b0bfd9f-f7f0-42e3-99f6-\
f5c8d8854c08"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"datosPorcentuales", " ", "=", " ", 
  RowBox[{"MapAt", "[", 
   RowBox[{"YearPercentual", ",", " ", "datos", ",", " ", 
    RowBox[{"{", 
     RowBox[{"All", ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.777401181696744*^9, 3.777401187667996*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"5112d94e-2773-4840-b40b-3096684e52d1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1991.8520547945207`", ",", "1606.199951171875`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1991.8602739726027`", ",", "1609"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1991.86301369863`", ",", "1621.199951171875`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1991.8657534246574`", ",", "1623.199951171875`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1991.868493150685`", ",", "1621"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1991.8712328767124`", ",", "1629.4000244140625`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1991.8794520547945`", ",", "1611.9000244140625`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1991.8821917808218`", ",", "1599.0999755859375`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1991.8876712328768`", ",", "1598.0999755859375`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1991.890410958904`", ",", "1600.300048828125`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1991.8986301369864`", ",", "1589.199951171875`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1991.9013698630138`", ",", "1602.9000244140625`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1991.9041095890411`", ",", "1586.199951171875`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1991.9068493150685`", ",", "1588.199951171875`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1991.9095890410958`", ",", "1566.5999755859375`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1991.9178082191781`", ",", "1545.4000244140625`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1991.9205479452055`", ",", "1546.800048828125`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1991.9232876712329`", ",", "1561"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1991.9260273972602`", ",", "1553.4000244140625`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1991.9287671232876`", ",", "1558.199951171875`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.777401188440371*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"104a3163-1638-4c82-a294-333b60ffcc45"]
}, Open  ]],

Cell["\<\
Con esto se puede calcular la media m\[OAcute]vil con diferentes ventanas\
\>", "Text",
 CellChangeTimes->{{3.7774020383813553`*^9, 
  3.7774020534938517`*^9}},ExpressionUUID->"01a23003-ab2c-4d03-98a9-\
b410a064dfa8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MovingAverage", "[", 
  RowBox[{"datosPorcentuales", ",", "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.7774019024156513`*^9, 3.777401912500985*^9}, 
   3.777401968464612*^9},
 CellLabel->"In[62]:=",ExpressionUUID->"0cb6c586-ed45-4c30-8db1-7bee9a4cb560"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1991.861917808219`", ",", "1616.119970703125`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1991.8657534246577`", ",", "1620.7599853515626`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1991.869589041096`", ",", "1621.3399902343751`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1991.8734246575343`", ",", "1616.9199951171877`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1991.8778082191782`", ",", "1611.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1991.8821917808218`", ",", "1607.760009765625`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1991.8876712328765`", ",", "1599.7199951171876`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1991.8920547945208`", ",", "1597.9199951171877`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1991.8964383561645`", ",", "1595.3399902343751`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1991.900273972603`", ",", "1593.3599853515625`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1991.9041095890411`", ",", "1586.619970703125`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1991.9079452054793`", ",", "1577.8599853515625`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1991.9117808219178`", ",", "1566.639990234375`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1991.915616438356`", ",", "1561.6000000000001`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1991.9194520547944`", ",", "1554.6400146484375`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1991.923287671233`", ",", "1552.960009765625`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.777401914935178*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"04f360cb-5526-4837-9a7d-29613da69f38"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MovingAverage", "[", 
  RowBox[{"datosPorcentuales", ",", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.7774019036143503`*^9, 3.777401913445908*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"faab589d-f5bd-436a-bf20-8789352159a4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1991.872054794521`", ",", "1611.939990234375`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1991.8767123287676`", ",", "1610.239990234375`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1991.8808219178086`", ",", "1609.6299926757813`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1991.8849315068496`", ",", "1606.1299926757813`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1991.8890410958907`", ",", "1602.6299926757813`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1991.8931506849317`", ",", "1597.189990234375`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1991.8978082191786`", ",", "1588.7899902343752`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1991.9019178082197`", ",", "1582.2799926757814`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1991.9060273972607`", ",", "1578.4699951171876`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1991.909863013699`", ",", "1574.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1991.9136986301373`", ",", "1569.7899902343752`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.777401916177293*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"579d3016-dfd6-4979-8fe1-922529fe30e2"]
}, Open  ]],

Cell["\<\
El usuario puede introducir la media m\[OAcute]vil deseada al algoritmo. Aqu\
\[IAcute] se utiliza la media m\[OAcute]vil st\[AAcute]ndard en la primera \
funci\[OAcute]n y una media m\[OAcute]vil exponencial en la segunda funci\
\[OAcute]n.\
\>", "Text",
 CellChangeTimes->{{3.77740205743147*^9, 
  3.7774021255936937`*^9}},ExpressionUUID->"29d0404d-2e1d-430d-a662-\
19cc5b160f0f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CrossoverTrading", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Take", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"First", "[", "database", "]"}], "[", "\"\<DatedPrices\>\"", 
      "]"}], ",", "100"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MovingAverage", "[", 
     RowBox[{"#", ",", "20"}], "]"}], "&"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ExponentialMovingAverage", "[", 
     RowBox[{"#", ",", "40"}], "]"}], "&"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.777401823360186*^9, 3.777401875564509*^9}, {
   3.777401931948845*^9, 3.777401945509267*^9}, {3.7774019871159573`*^9, 
   3.777401989550407*^9}, 3.777402107328148*^9},
 CellLabel->"In[68]:=",ExpressionUUID->"075664e4-f3b4-4b5b-98d6-add2b3eea66a"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"BuySignals\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       TemplateBox[{RowBox[{
           StyleBox[
           "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
           "\"Sat 15 Feb 1992\""}],RowBox[{"DateObject", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"1992", ",", "2", ",", "15"}], "}"}], ",", "\"Day\"", 
             ",", "\"Gregorian\"", ",", 
             RowBox[{"-", "5.`"}]}], "]"}]},
        "DateObject",
        Editable->False], ",", "1673.5648296555305`"}], "}"}], "}"}]}], ",", 
   RowBox[{"\<\"SellSignals\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       TemplateBox[{RowBox[{
           StyleBox[
           "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
           "\"Wed 18 Mar 1992\""}],RowBox[{"DateObject", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"1992", ",", "3", ",", "18"}], "}"}], ",", "\"Day\"", 
             ",", "\"Gregorian\"", ",", 
             RowBox[{"-", "5.`"}]}], "]"}]},
        "DateObject",
        Editable->False], ",", "1726.6042793046074`"}], "}"}], "}"}]}], ",", 
   RowBox[{"\<\"Return\"\>", "\[Rule]", "53.039449649076914`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.77740193645998*^9, 3.777401946281742*^9}, 
   3.777401990384317*^9, 3.7774021124673557`*^9},
 CellLabel->"Out[68]=",ExpressionUUID->"0d486f83-5c27-4d3c-99b9-71378c4c753b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Resultados", "Subsection",
 CellChangeTimes->{{3.7774011139762783`*^9, 
  3.777401115680675*^9}},ExpressionUUID->"45d17207-445e-4fde-85ac-\
7cf752276e06"],

Cell[BoxData[
 RowBox[{
  RowBox[{"market", " ", "=", " ", 
   RowBox[{"First", "[", "database", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.777400635408877*^9, 3.77740063924236*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"5e4bcf5d-9edd-4ed4-928c-e6dddd1d9061"],

Cell[BoxData[
 RowBox[{
  RowBox[{"strategyResults", " ", "=", " ", 
   RowBox[{"CrossoverTrading", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"market", "[", "\"\<DatedPrices\>\"", "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"MovingAverage", "[", 
       RowBox[{"#", ",", "20"}], "]"}], "&"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"MovingAverage", "[", 
       RowBox[{"#", ",", "40"}], "]"}], "&"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.777399303586039*^9, 3.77739935158218*^9}, {
   3.777399486096591*^9, 3.777399487167254*^9}, 3.7773995915752487`*^9, {
   3.7773999854483423`*^9, 3.777399989661806*^9}, {3.7774006427509947`*^9, 
   3.777400666676858*^9}, 3.777401879847102*^9},
 CellLabel->"In[60]:=",ExpressionUUID->"5ad18792-b430-4d39-a456-a44d2497712c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"market", "[", "\"\<DatedPrices\>\"", "]"}], ",", 
     RowBox[{"strategyResults", "[", "\"\<BuySignals\>\"", "]"}], ",", 
     RowBox[{"strategyResults", "[", "\"\<SellSignals\>\"", "]"}]}], "}"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"Joined", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "False", ",", "False"}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Monochrome\>\""}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Date\>\"", ",", "bigFontSize"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Price\>\"", ",", "bigFontSize"}], "]"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Price\>\"", ",", "\"\<Buy\>\"", ",", "\"\<Sell\>\""}], 
     "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "plotSize"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"FontSize", "\[Rule]", "smallFontSize"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"TicksStyle", "\[Rule]", "Large"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Black", ",", "Green", ",", "Red"}], "}"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.77740068357134*^9, 3.7774007666639433`*^9}, {
  3.7774008345591288`*^9, 3.7774009700246477`*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"63b0f450-60f5-4c21-9565-2380372c2f49"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], FontSize -> 13, 
         CapForm["Butt"], 
         AbsoluteThickness[1.6], 
         AbsoluteDashing[{}], 
         GrayLevel[0]], 
        LineBox[CompressedData["
1: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
14X1JdzU/xL6W7jZXw6pbx0NjvQKEnZsUPZvUt5Y9Av9917Y0vQL24c++8gv
rL9I7K61yt5XWHte1X8s82Fr9JWcKOwc9pXle0H/mq/Uuw76HV/pz6HQ/07V
/4r4GJJC/z9EfKxMYTz4Iz7OpNA/foiPNylszyzxZs/7jfU3CRusihtJefPJ
b/RHCcRH0jf2fxL6c39ne6nCmrrf2f9tYetx2oMQP47n39l+FmF3zh/UNwH6
a/1g/X6ix2j6ofIJ1l+CKl9X7NrsP1m+ptQ3VP9JPRmgv/dPlm8O/8/7yfaK
C+uzpNLfHvCvPpX6vkN/cKpav9A/W5Wn/gMs71UO8eH7i/OZT9je7RfL10F8
zKDdYwfiY98v6tmF9db5N8eThHiY/pvt30c87Fb23dB7l5zUAevxH8tHNMZ6
m/qH/p+OeN75h/2Nh17nH5ZvDr2//7C96tBb9i/7s8Gf2/6y/BX488ZfjjcI
+n+yfFJR6C/9j/ORG/5uo7iwsCNOcYDMp/vbP/Y3CftfSY9X4FPI163A/7s/
Qr4eq+wdhLVfFXsinoune8X9Hvm6eTrW14jdZlZ8Ffl6veJM2E+KaMje2E+a
aNheZWHHCLCHx3PshxGqfDL0n9NQz3Hsh4b05FuI56HgQP8siOfV6dX4oP+/
9OzvqLA5WdmvYj8ZkoH1P2E/XKE4n9hNpzOw/F5h6+sM1PsV+402o+of+WIZ
OCSpGOLjBHkA1of9pSp/V8q7PDOBoxsgnutkYn+9kS+OgSO9RiI+XIp7ID5y
Zhb2bpIf8V0zM/vrI+2b+mRmeyeQ755lZv9hyBfZssAeVAPxXS0L/YX1ZumV
heMxQP9clo/bh3yROSv8EY7xmqtmpb001lOVbPQX1qejazb2F47+7ivGfuLq
lJ3lG2L/Cs/O8WbB/rVL2b+ivzu0R5yHv/5mZ//YT/RTctBeFut9B9kL47Xe
ykF/VYW+XznoH+zP7jI5yRPgj605Wd8Bf1zPyf7uYb3/yEl/rMV8lspF+2Jc
P7TOxfamYj6v0h4E/2i+5WL78dDv7Ul7SRm/qaUn2w/G/jtGcXdh3RdPztdB
YWOx3OwPbGmWm+1twP47ivboxfD/utysfwzXB4Xz0H87hG2NFV8Xdg7Pw/4v
CWsi8tCfaF9/VvEuXB801Kr1iOubUC3tee2if5WWetILG2NZ3usl9L/Vcv5f
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
y/H3o6XeQs9DE54/b02OWI6/xx7/lvsn3m/h3vyW++0q/L21dzLX7yIpb2+Z
zP3IiL8HHgNO2PIX75/YlEx/d8Xfj15OZj67g78fbfaO++MS/P2oGRzofxP6
17/jeuuI54sv0F7yHJ4v/vSO620Ono8f8Z7tL8Hz/RHg8NAJ+PvLs++5PjLi
+cf37zm+4fB3wQ9sPw+eL131gfs1+rPFKtbi+c235Ful8fxm/o+cTzz/rG/w
kfl2M56PP/WR+Sg7nt989ZH7Df6+U6f9xPbw/Lux3ifOTyie3xzwifkCf9+h
fUl7t2qID8/PnP8ziI/anzmeG9DfV3FR6F8EDmmLv0c15XBzPS3H87E1wCHb
++L52BA35wPPZ7rnuxmP+PsV3WFynip4Ps7/C/0Bva6eXzjfRjxPNPcL/dMN
zxPZv3A/Xozn5eK/MJ7wfK2mx1eup4Z43mLWV+53eF7ZtJ/2zHj+yPoQHDgf
z4c40qew/+LIF5YU5hc8T2jZk8LxnIX+e+DAL3he1eXxjeu3OfRXBHu8mYLn
Y6O+MZ9NxvNQt1n+D5+P/cvysXheT1/+O9pvuRr5zvid+vE8qfvmd65f6Nf9
YvnRhaG/zA+MZwn8Y2kLjs0xAPon/mD8V4Z/f5D/XIV/dT/p3/3QH/ST62kC
9I+jvVRT6N/8k/sjnt/SbUxlPP1B/rqUyvnB85OGdb+4v/ji+ZTz5JZ8Xv7j
L+6HF+CP4b+5HvD3oKY1vxk/Y5BfHeTqOzGf734zXofCXwX+cH67If+vBHvc
vwx/nPnD/YDPa78h+2O82nx/mU9zQn/AX+6fGuT/k+DwU3jeU/OK5Y/h75H1
ef5x/vi8bl3ySD309wcHbubzPy/A3hnxPLExl8dr4VnxmM9a4EB/PL9nN9G+
ns/nLQSHeOLvk83Z071GfsJ4bNXBHrGIV2dv8mA+bz4fHLsRf7+tPwQO/PIc
612vQXmPIDw/GAyOvIjnq3VzyN2aYf4Pgr3PD4P+x7RHoH1t9/TC4Y7MiMeZ
4Ngc65Fv99FeH8+D2x6AE2LcyFeaDLCvmIfn4aeDA+f/Q77anYHjLYn99y5Y
/X2F+x/r50O86ypkpD/gP/tO8v0peD7MCQ7fjfjS/iEbtiE+ymXCeIdHIb7b
g2MX4nlWzc1MrI/nOfWp4JAb6xAfpTPD/gf9WduAY5+uR3xPAHsXxfN6xu/g
wGx6PB9bMgv764znY1uBA6O/Qv9YsPc+PO+tjaS95Desv+JZwX3wfKKzOdhj
dS5cn40me6C+fgPLt8yP579GZqM/zyB+12aj/zZj/Z3Lxnji9dcHcOSchfDf
sOyo37Ee/Lca7BGI9WL7D+wdvAz6ksGxKbz+KpAD/tyO5ymtK3JwvUyG/06T
E58hP7zOQX8h3+jy5qSdz0/Xz0n7VvjvRE6uJzyvrk0CR3o1h/7cuWAvhXxn
rpOL8XQa669fLvqXz78+J2fD31uYcnpS70HEax9wyJJ+iNcFnlxPWqynbLkZ
T7kRr9Vysz+8X8HVi7x6K/LZvNzUj/3AEJ2b8YH156yah/YRyGfBeTifx6F3
Nu19b0LvAXDg6KPYXx/lYf97sJ66aRnPs5EPZmiZr5CPLHvBHuE1of++Yvy9
jitdXsZnKeSzcPL8PvDnrrxc/zWg/w44Ni4P9P8jp+DvDfU++cBBTuSzHfkY
j/j7Vvct8hVc7+l+g0Pa5sb1V9n8zMdVcf3VjlwF7+vQ3sjPfPAef1/5E+xR
8C+uv0oVQLz4bcT1V+sCjJdx+PvW8bQ/vIHr829kr0m4vvUuSDv+PtbREpxw
S4P3j4wpyPW9Eu972gQOGTAX73cpVgjjr473d7magUN+DMH7Xcy050iP6/P1
hZjPtuDvWy+w/JLi+PvQJl7MX7lwfTvCi/7E+85MEbSXrYD7i7Ne3F9s+PvW
9+DIzDNwfT60MNc/3v9iWUV24P7GHluY+RvvR3O9Lcx4KQD9+Ytw/nV4f85y
sHfGZfj721NFWD4v3k/2Gpyw5SfeR6Utyv0iA/TXK8r+B+J9VDFg7/h7eJ/T
S5aPGo/3MXoWQ3vt++D9h7XB4cnheH9k32LMn3h/o8FVjP4sh/c55SjO/NMa
76OqAY5s9lrac4aAQ5IqCWsWgBNS10h71qwlGN9Z8f5N/xKsn4j3SfYswfWc
F++7nFuC8Xxa2jPawSHH+uB9VH7ejOepeD9jD3LoBbxPcpY383t2YfN+b+aP
LXi/5ENv5ju8H1LftSTKd/mF92lZSnJ+RuF9WnuUvRbeR3WvJON/FvzvoaPe
17j/nEbetwTvZ4xSXEDKu24rPg/9f3X0XwT0ly9Ff6fD+762l+J60sO/t8ip
i/D+2F+lGF9n8T7RMqXpj+p4/2nb0tyf6sK/18GRI/F+V+OP0vRHa7FbdGXI
6fA+sCBw+KkTeP/puDKMDwPez5pShv74IO9ftZUoy/mxCztblOV8DMb7e8eA
Iz9NlfcV6zeCY8d+wfuRi5bjejiH9zs3LcfxmPG+61G0e5TB+5HXleP+FIH3
O58vR39cw/unG5eHXk8b3uc+vDz7M+F93WvKMz6e4P3UDnBkRCreN/4OHF4f
7383hfrAfvEe3ke/0of5djK+T3DGh+uzFd7n/saH/uyO943nq8D+Xkp/dmsF
5o/GeH/2yQrcT27i/c6vKnB9T8f7nfNU5Pq9hPc7163I+DwK/8Yo3ob3476o
SH/vwPudc1XifCzG+6lrVWK8lxa7w6S4nrAxsRL7+yNsyV6Z9vV4f3Z1cpUO
Ynf1rsz9e7Owdn5l5p8YvH86SxXGN97X69RXYb7D+441Pauo9QH9c2hvT/0H
Wd8/l7Db1xfzWfwc3p/d3Zf+7wL9M3053q+Ij32+nL/XYrc/8OX6/Yj3T3fx
Y74pLf2bp/vR/zkR37v9uP68oP+uH+P9lrDGoyr7x/ukrVOrcr4v4P3JO2k3
oD+3syrzYWkZv+5PVeppiPVZTk//fML7k7fpuX8OwvuHb9KeGon3O6fquX7Q
v7m0P/uvCv1t/LkePOHfa7SXwvozfSennsH7v0tW4/rG+7kdrapxfG2hf2w1
+j8b4uMr7Suy4f3Pxasz/uYgPppX53rYgPgeXZ35TYf43sDyIyPxfvUiNRgP
oxCv52pw/fshHzSqSX/i/fD2/8j5DOgvuSbjzQfrZUgt+mcX4nFFLa639njf
+GnaPfB+eM2bWsyfJ5Cv8tbm/hqDfLWsNve3N3if+4na1F9d2tMl0R7nRL7K
XYfrPR7xWKcO55f56ngd+nsd3s//nPZSw5Cvctal/iR8H6FmXfb3DfmqT122
Vxf5KoH2iB3IV9nqMb6fIl9Vq8f2y+D7CL1oX4LvYejm1eN4x+P7ApnrMz6m
4fsNVcGxKcvw/Yng+ir/Id/Ork9/2vG9jwP1OZ/43o/GN4D5oxq+R9ItgOXx
vRHTDHJ4AejfG8D5wvddHPcDmJ/wvQxj5waMNx98fyKc3GwQ9O9qwPmaju9n
3GnA9RYA/f8acL87iO+RTAlkPkP//5tF6sP3yDTOQK7H0sL634GcD5uwqWxD
zmeSsHtrQ/afLKy70ZDrEd8vM/4EB2abKWwpZWC+zS5sb21gPvxnE//GGRjv
+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
fzHqI+yYwXpVfstC2ZPv9+FLF8qff5D/Ti6UPaOof+/EFS+R/7IuUnwHyX9/
LpLekuSPY4vUn+3JH28WqR468Y/Mi1W/WuDf1RcrP6HH2Wex+qcN9+svFyt+
Y/HvDEuU76+h3x7HrM/l7rlE+eMT/v3PEuXLvMRf2qW6fv5Piay8VPHJ/ZM3
QrztDPpnL5Xeseg/uFT5aCrxV8GjfE+993fxKL6boH8m7NjtQf8+2HcmAv2P
tP/zkuSPjsvUX27yx/Rl6g/uB+y7l0nPcvTHavvd/6A/qVf2bk/+m+JVPJCf
nTu8it/n6L/nlb1ZL86faLn0nEB/8eXyvxXYNxo2Nef+LPq2trd/Jn/8vkLX
N5P4LCbORr6yt14h/z2IfW+sUDxlwb6/rVS9KIh/FF4pfdH4Rwu1F36NfvdK
9f8b7BtvlY7P/U54gVXq/ynk76arZJ/p5O/RYn8U9l+7Sv77L/bNu5rjveF+
2xu+WvnBT/4esVrXHyR/r4Yd5/k/Kuyi9m9ZhP+xGqyR/bj/CQ5dI/uyHpt1
hdojmnP/f26N8nU499ef4cAD3T8NXqv4y8z/ZMtgX7tUPL+cFtfl/sv7Ya30
2Hh+yb6O41dn/TbnknU6Xhj3/yfWKb9wf+8Pwp6ErdCfZT36u7DembUm7LvL
+nPRR2HT0w7c/71W+5IB6M+0QXoi0F9tg66f57/I3rBvan2er15uUD4ajn3T
b9T1TUB/FdizZSD6e6h9xyT0/71R19sM+6bZpOP3x76V4EDHQejvtkn+NAv9
Udp+CeuFestvVj6Zgj07w7ZTK9E7Ezb55qJ372b5nwf7Obdw/AmHsd+0LfJn
1osL37VF18v/fO772v7NGfQl2Sr7s/6bffJW9f8l7LcddpnZ33t3q+JN6wP+
Ea34oD/MxaN1PfzPGLUVdrn539F/K1r2ZL26YIJtsp/+hywKW3qPQH+rbcqn
9Efs9W3yX/o7JP522t/RP/ZC25UvsH9k8+3yB/zLO2a74ov9w0w7sMeNJfR/
ftjxeRf6m4gbnED/qB3Kh3vQv0b713yHffPslD/yv2V0o53yh9Ss9zEcdoTG
Y72PVTtlX9avtV/YqfyXk/9N6+9S/1j5n3PoLsVPGP9zLoctR1mf13lWvIn/
MaM+af8hCRlvNWi38gfnD/fAvpIP0H9K7WtZXzD6PWyrzfiu2Gx7dP3fse9i
2DXyJ/Y9vkf+nR39b/eoP/OhP8texU9a9NcQj6vJ/7JHYFN61vcNvhK7CqI/
4z7Vz/Tor7pP18t6wu5e+6SH9RtDXuxTfKfgf990+xXf2DfSBluyXEF/9/2q
X7fw7zlqL/wE/0h9QP6NP0RVPKDjsV6yv+sB1cc7+Mcstc//hP06HZT//sJ/
ZxzU9X+j//eIj8q+Dw4qvrGX2fmv/OkD/jsVtixKTP/vFBfOTP8HxONyY9/E
PtmL9ZvDJ/lkb+zr3uZT/KTBf+/4dH2s3xyb8BDtSfG/kDDYZLuO/bYc0vXz
v3LMzUPSx3rI5gR++Qf1KKyIX/FNfne2FCdmfevgNW3/4R/yg/mw6i3xHl4Q
tiRoS/83gz0ZOX60CzZd03jGX3Hbsx5oZL4jnG8y+cfb+Ijidw36Rx5R/jqN
/jWwIwXr+0aFHlV+OUL/N4RtOcjvwWFqzzcH/SuPyn6sBxx+Xttv24Z/1Dum
/luFfwwRH+V4du8x+dND9J+BXT3wd+9Hbb8JDht4XPmxFP6x9Ljil/6OOqn2
yfKPd8d1fMZvBrOeUL5m/U/3ohOKZxf+cQy2LeuJf7yBXQU24x+ZT4q3E3/V
T8p/+b8+5rDa7bPw71di81X0Zzil/HMW/fZTqocx6O95Sv39jPzw/JTy2Sf8
O+1p+e9r9Fc+LXsxPjQ6AvbdfYD+2XBgltbzDDnD9d7m+N4K4iwmxjd1OSN7
MT7UPAsODGN90bB9ccz1+MueVf1kfadgR9g3kOuzTj8rezK+M3z3WdUXzu+O
1f6pEjGeocM5+V8KxpNOgR2rvqF/xznlw4SMz7p3Tv4Vjf0TnVe9+4B9J8K2
Dqz/ExV9XvWG9bn8t88rf9VkPMbvF5TPWY/IWgx2PO7GeN3NF2TPPownvXFB
/uZF/28Xld9ZX8Ve+KL64w7jy1pc1PFYT8p87aLi5Rn2jRej63vO+LICMYrf
T+hvGqPjZ2G8zug4Tsd4l5/a/kYmxrvkvaTzV2O8S7g4G+uxxY64pPhPzHid
1Zdkz1vYN/dl+csj/KPBZfU/4znNw8SzRjFeZ4W2f8V4Wuc52NWkFuOJ6l5R
vS7HeJ3BsON8avQvuyL/YXyQ+/QV9cc77P9B+z+twniiAVcVD/UYr7MEdh0o
yXidE1eVLxg/GxNUu5n1WsxZr3G+M6y/FbUQdlVkPTv/Udixm/Xvgq+v6Xz0
pzXTdfgN/Rde7bquB3vF+q/Lv7BXyEttX7Mb+tPfoD0n43Ujq9xQPnChv8cN
2XMa9n2m7b8y3teZ5ibXdz8346Eq3VR+Yr0ff7eb2p71boNRN+UvrL/kTnVL
+b0S/lH+lvrbiX90hh1lmB8gZOYt2e8t/r1XPIfxYTFlbqs+MP7K3PG29LHe
Tdi02+of5h9w7hIXYL2SqPu35Z+sp2V13FF+uIl/TL6jehfC+L7td5T/GA8b
fVft1eej/4+7qjczsO8E2HaK9cy8W+/K39ag/1bc9gPR//s9nb8Z+ovCjhmM
V/Nvgl2XWY8ieP2e4qcx+uMHZH/WbwovBJtsJuzfHHZ0Yb3ikKsB6aM/7ab7
ymeMr4vMf1/tudDf5L7q7zHic9R91UPWK3P+EKciXqLyxLL9VOLP3yhW+luh
fzhsMs1G/yq1VxyLfXM94PzFPdi3/gPtz3jCkKFq78D+9uUPdL656D/7QP4d
i33rPlT9fYh9B4kXfcQ/PA/VPzfQf+qh4pH1nfzvH8qf4zN+sv8j7c/4Tffi
R9q+FOM/j8OuNHUZX/n2kfqnKuMrszyW/9Rm/OcC2DS3DOM/jzxW/mN8vPn1
Y/VfLcanZnyi641ifG1V2PWD9YmCh54ovmi3vniifL0d/en+k31od9vieBX6
u/+neGW9C/tTOG59m8jUT5VfWK/FWxF2+dk/putT1WvWizBHwaa1rEcRlfKZ
/Pcx41fLwZ75rJcT7AQHymn87Qy110zH+OA9z+SPWs/C+ZzjX6vGfCdTYUco
66FG7nyu/BHOfC0Bsd3CfCztX6h/ajG/1yTYsqkJ60Vsg31LZrNexB3YM2Eq
60UkfMn+jTyMVx4PW7IsY7zyFti3YxDzydzU9g8WoT/BK9l7FfqLwKb0rG8S
s/GV4m0y45Wvqz0f+sLMr+WPqdFf8LXswfpGUc3UnuAR/nDltfyV8c7hv2Bf
XdbHcud7o/MXR39j8dMN6B/5RvmQ9S4iv8OehFmYbyj0reyfn/mSGr6VvZgv
zTxcPD8V8/msfKt8zPxs/pxB2o9bmW+oHux6npf5hobApgjaw71B9Vcf5vM5
AzuGVGe+oTrv2L8J6/PaB75TPI1F/1LY1475i7wn3yl/Lkb/u3eKx+XMNxT5
XvV+GfMNLRInZr4l/zHYkYL5moJv1H7/Pvozf1B+1frO8z/IXlrf+bDaE69A
/6sP6l/Wh7Zn+Mj1jJyLfvtH5a+W2PfQR52f+ZPCnn9U/PRAf9pPHK9NPvRX
/qT62wn9EZ9k7w3Y979P8rd72Dfks65H+it8ln0So7+L2k9pfepZ4g5fsW+K
L2pnfq2Ysl+Ur9IzP1wn2NGgIPNpTVd7lvLMV7UbDuRsynxapb4qnjMwn1YH
2LbMzHxaU77KnzIxn9YOcVEH88Xd0/5pwpkvrt035ZeJzAc28ZvyJ+the6O/
qT5NQ/9tONCR+cnMCb/LfjbmKxv3Xf7Wn/nANouHpEH/je/yt2To/+0Hx5vF
+twh134of2Eve7yfyrcR6CvwU/3L/HXepj+Vz1lfO+yyOP2/2O8n7DtzEH15
fyn+bqEvHHYd2Ia+Eb+Ur4Zir9z/uzP+/+TWZn6/2Aaw70ND9A6DA43mondF
3Pb3sZc1Hu1fmS/QXA927P6O3sGwrQPruziXxbWvQu9p2FMzC/aqbYYTEl/h
A2DX81v46xKz9me9s+gTcCAV+SM2qP1rkl8i+8Vn/4qsB+RdKB5ZmHxwFA6U
u0Q+fgM7UtQm3jL99pT4WkQ8zRMnGE4+8It7M9+k9aX4dgX0p09gsGluHfRX
gW2JS5MPfLCn6AfqxTPYcX4U9S7N7xzv1Wr0V/pd16f1DLvBrjQtqBdPYN9U
6kdUqoRcX84N1OfysOsH84MFO8OOMoXRP1PtZhP1Ivkfsk9l6kUZ2LJoIPWu
I2yKGI3+abCrx2L07xIfmI99SyXi+pdR/8IcsCO0Mfonw767rHcetR12rWd9
df9dbd+gOPZtmxh7bGmIfScklv4O+MfWxDof6+3F3oIdQypj/9+TsP+NYuSz
v5LI3+n/mE1J1F9v0H9D7RcT4B/xkyoe5qK/UNL/Y8/g+qSKp7zY92pSnS8N
9z+mZHHxx/1G/mQ6/lrs3ySZrqcO9r0E+5Kewr4/1O4/gH/kSc7xM57HPxol
V3xkpp6MSK7+qUW9+Ao7PnP9/lwp1F+sJx+sn0J6ilLvhqZQfP6B/ZfHcWvi
L0dK9ddX/KOu+Hlq6t2glPLvGsSnJ6Xs8xP9p8TtvuMftVLhXybiydkf9p2Z
if7FsOfNdvQfh11u5nMMvk2leGX+VnffENovM99s9IIQ+S/rZcUegW2TZ+Af
r7V9GtbXsmdMLf/Zhn/MTa14uot9/al1PuaXDHsBeyY8R3+6NNhzFuuBRdnS
6HzMZ2n9N43yG+uDhT/V9qm+oz91WuWnHeivKN7N/LGxXWGXnfubyMewb+Aq
/DtlOvnfW/SXg33ZQsjfncXtUpO/Z4jvst6XP1l6jt+E+TaDpdPr+BzP6kyv
fG9H/9T08g/m+3XvTK/4+oZ9S2bA/mupl/b2GRSvf1IPJ8G+HZ2ph9u0fT44
5k4G6RlAfWmTUXqYbzNqfEbFYzf0b1F7O81HfDOj8qnmU06QSf5+lPo4FnZ0
OUJ93JhJeh5RH6/Dtv6sf2Y3Z9bxUjK/a0HYson5Ys3rM6u/mS827Iq2z8j8
uc5f4uOhzPecL4vilfla/Y2zSF855p+NgU1Pmb/V/R22jOvK/K6hWRV/zLcb
2zCr6g3zOYcMzyo9g5h/9ktceyTzu+bMpv1HoL8+7Hg8G/1D1N6E+WqdXrWH
dmC+X0t2eNVe5s+tk13xfgP9A7PLX8+if2l22esq+k+Kj15h/tk/LVz/3i/Y
N9Iif3uH/kVqf5CN+baPWRSPBZhv+624TVLmM++TQ/pLMB/4fDjQsQLzgR+G
bTnqMn/9K9hkY/758AxWXU8S5gP/B3YVWIB9D1l1PZPQ/1zbn7mF/rQ5Ze+V
6K+cU+fDfmEHc6r+zsW+/+XU/szPHxWSS/nuPv5RIZfiLRn6u+RSfsvMfOaP
tH2P6sxnniK39HJ9sWVzy95DmM+8k9rnzGM+8+niy/uxb9JQ2eMo9i0dKj3z
mc+8g9qfsr6dc0qo7LUR++8I1fV2Rd/EPJz/9gX0RedRvbiEvtt55I+sd+Ad
l1f7Z2T9jc15lV9YX8B8M6/iN4T1Fn7Lh570h+hvt3jueey1IZ/yw1X6+xrs
mLGK/o6Xn/a62Vk/pEB+2a8Y89evEx+ow/z1l/MrXiswf/1P2LatEPPX5y3A
8ZbkQH94AR2vtcHOi7CjAeeL+gZbXqVj/v3cBaWX9TSCDQqqvyoz//4w2NTc
ynoLn9VursH8+9ZC8i/WNwmpB1uyjEP/4ELKZ1rvYhns8j/CvpbCqkc3sW/t
wrq+W+gfoPYZrL8StaSw4vc2+k8U1vl+sT5AzSLKp6yf6O5XRPpfo38hbCnM
ehqxR4vIfqyvGPKmiOplIdZ36l1U9bsO63HMKyp/rMF6HIfFa7OynsjLotJX
kfVE0heTPVnPMPh3MfkL60NZfcWU35aj/xns6Vse/WnC2L/iG/y5Upj88zTx
dEA8azzrMzyBTabD+Heq4rDvBvFWvrj6qyz271Jc+R7/inoIu0Zyfn/yEvCP
e/h3mRLqnyL4d0fYMWQP/j2thOr9NuItSUnljxT4RynYVrsg/uEoqf4vg39M
Lqn4PoF/b49rf4d/FC+leNiAf7Qtpf49hf4Jan/gQf/WUuq/t/j3rVLKbwlY
r6VVacVLRtZr+au0/G0c/rGptPp7Gf5xI4730f8byrD/etbHCrsqvvyG/jeV
5XrfPcZ/85eVfxVk/aa1ZXV961gf6VJZ7b+d9bN+lNX1RbI+Up5y8q/arI/U
qJzq7ybWb7pQTv68mvWRvmr7Rl1YHylXedljM+s7NSiv+naL9Z2Gwr5srMfl
/yS+y/pt1roVlD+ys97XINizpQTrOXkqKL5ZPzAke0W1d2Y9uFqwrTjrCUb2
ryj/Ks76hYvFTT6h93hFXX9po91ZoxLnX5ST9S37wp6WjVi/cEEl1ZOyrF94
ROyqw/qFryvJXqx/Gd2rsvLjYdYjm1tZ9fs5+v2w7X5pYz1G+wtxh1Ssb5nO
puspz3qQ/4oTd2Y9yKew43MT1oNMXUXtpw32V4Q9N1jfMny/2k/lZT3Lx1Xk
D69ZDzKlnf5IGsZ6nOXssocfvZ3tul7W+/Q+gD0ZM7GeZbKqHM/+k/UNy4j9
JvQ7YVO+teifCgeWt2O9zcTV5B+dDLaWrKb80QH97aspfyxA/yRtvyOLwdHb
YNsy1u+0h1WX/q/Ys4143HaDveOrK18NRf8Wtbd5y3qct9TeqCbrhbasoXyZ
jvVCx8KWTZHo36h2+xT0X6+h+i/7m2vqeH0NjnWJO04zOGR9TdmL67FfqSl/
uon+X7Cl90DWO833J3x0EeudrvlT8bCW9U5jYF/JLuj/ru0XXcE/QmupvTT6
G9aSv/hZL/R8XPsf2PdLLfnPKPwjZ23apyY1OKS++EMT4nFIbdknM+uFfqyt
eLDgHznqcP05PawXWqeO4r8Y8TiwjuzXm3hcWkf5MAnxlq2u6jHr5Yb/WVf1
siX5IhL2vNlBPC5S+9ysxOOxuuov8lVk9XrKD2H4d596yqfx0D8fdjxmfTnz
kbh28l/Yq3qqP8pvPetz/gmvWV/vn/qqlyb0H4IDw+qi/3l92a85+tM2wB7V
GxN/cxoon1XEvgfFFVkfMfI/bV84BfpDGur626O/QkPVo6vYd594TgD7Pmoo
f8qHf6RopHq2gnxXFnbsPor+To0Ub0mxb6y273ue+pE0XPbKgf7S4dJfFP0d
1P65D/qnqP1ALeybuLH8kfwcVqKx/HEu+tvBpms1yH8TxenJp/7oxoqXSNbD
LdaE4z/vgX+3biK9Lcl/42BH6Aj8e3MT+ftG/Pum9nfvIH+0aAr3CJI/3E21
fWIjXswbYV/d1MTnNW3/g3hyxmum/rITf6NhX7tQ8se6ZtJXkPxxGQ7MCiP/
/VT7FvJjdN7m8ucI8sdq2DEkh8GRF5sr32Yif3yDTRHFDI7J3YLtuyj/NWyh
fHwG+55rIX/Cnv7PLXS9XoOD1pby3zmsR1yvpfSzPnH44JbyP/Jz7Afx+lrk
P0srHT8f+mvDjjKN0T9A7TdOYP8lrVQPqCdhWVsrH7F+srMm7Ck6G/391L5k
MPoXtpZ9pqD/qLjLX/hHtTbyL/JddG/YMaMD/jEPtmTpin8cbqN4eYd/v2yj
/thP/PVoK38nvs3/iBucw799beVP7fDvZ21VXycTn2nayb67ib/Z7VSvZpA/
DsCelj3IH0/aKR8WQH+q9rJHU/SXb696eJD6sre99C7Gvg+1/RsX/p3cofyA
/5rLOpQ/fsO/OzqUD8tRH+9r+zb4ZzBJB10f/W0t1UH+NRX/dnSQPT5j/8kd
tH9S/CORU/40i/ul4k7li3Xob+tUfZX+Cdq+6AH0b9X26xVvmzrSPp/6aL3R
UfuP5XwbOql/dT9xtZPi5SHnM3VW/GEf8+jO8u9J+ONa8Q/d71yCfTu64I8/
Oitf5cAf83Qhnt7lJl5WwZYEJbDHBbV3mE6+/dpF+aAI9SxXV9WbD6xn2qCr
9Gi927NqLzqe5/lPXeX//Xhes3ZTfmU9uLC63dSfK3keGtRN9ub5J/i+m+LR
y/N89gj5p9YHrRUhf+R5290/QvWP5/XoxRHqjzKsd5ulu+K5Bevd1oBNNq1n
2lft7n/Rv6C76hHrMZqPwp6arNcZVbUH9prcnOe1Xj0Uz6V5Xp7bQ+fnedrq
76H9WQ85/EUP1Q/WS43t3lP5hf1D/u6pet8K/f/Clk08T0Y+7Sn7fEZ/6l7a
/h+eN6N6KZ+wHrNzv/hzLZ7nHvfS/k1Zbzhlb8Wr1mctB9ty8H7FvUf8jvc1
0Q/EiWfxvJysj/wvM8/LZfoo3rQeoLOP/LUfz/MBcZqivD9L0lf+NgL/KNlX
9eo478/a99X1dOL92STxY9YPtP7RT/WQ98fhYXCgI+9L3W36Kd/z/jV6fD/p
2cz7x5aR0s/5Y8ZGKl+1RN8m2JGC9RPDrosfL+V9WrP+si/vM4Iu2NXEhv+u
76/8MhT/vaLtdzfFvr/6S28P7DdqgPI98WFfAwe+9qf/YwYof1Wh/7+rvRHr
Q8aEDpQ9ed/iXDlQ/s/6uFHnYV9S3n/4vwyU/xam/3MOQt953i9a6w9Sf+2j
/88Mkr+68d+P4rp/oj/HYOln/Up7ncHSx/VEDhys/P6G+HovbpKM9xHZhqCn
Oe/bnH/CgYu58NdF4nJjiafMQ6VvKu9Hqg9VfYvg/UifoYr3FbwfmT80rv+I
tyPav0Br3p/Zh8nfh/P+rOcw5bc5vD+ZC7sqsn5u2KFhsuda3p88F099Tz6I
GK56V5b3EXNgk+sc+g/Crssu9P8nbrIE/SEjdHzWT7fPGqH+ykc+2ydey/tA
76O49qHoTzFS/TED/eVg26nd5IPdI1V/Hdg3Vu05eqA/6Sjlq5Lks9KjpJf3
h+EdRslfZuMP92DbsqX4Q+LR6g/8115itOLrK+//2o1W/imHP08cLX8hP4cl
dHG8+7Xwh2KwKd9U8nFr8VP8zz/Opf4kPoKbXYo/4tddeAz2HHiA95Mtxii+
J5LP3GNkP94/hmwco3pennx2Te1P05IvmrqlN4R84XKrv9fzPWMd7OrB+qHO
y+IDF/me8dOt+ujie9HIsapn38hnq8URHvLZxbHSHySffVO7iePH5v5L8ZiI
7y0r/pL/s96v9xxs23aI74mftX27JHzvyjmO/qg+Gv31YMcq1uv1nx4n+2Qg
330YJ3/KTz62jKc9PfYMrz1e58uL/QeMV77NhX3fwY7Q83wvyjqB9jM/0V9T
nI3vU95+E1QPWH82ZqHaB37Hvpkmyh/5vhZVbaLOP4h813ui8u0y9M+bqPw4
A/2Htf8q2qOrTJI/X8Q/esC+u+TPkH8mKT+kwz98ai+JPSKfwZYEhfGPiMny
Zwv1ZPZkxddk9B+YrOvfiP4n4g9tsH+qKfKnY/jHzCnKV/Pwj71TFE9H8I+H
UxT/W/GP5FPZfnIa9JedKn9Bv3eX+Iz8+z7sGIL9zEmnyV5V0V9qmurNBPQ7
pine+D8qeFfbHxiMfyeaLn9uif7i0xU/dvS3na78bEX/BLU/aIV//D5D8c/6
pZFFZyje6/G9vNUM1cuHfO//S+09nvC/wuY4/sX38kIzFW/6f6w57JmwHf1j
Zqq/V/C9fIPaE2o91Kva38X/a7FNZqkebeZ7/+hZ6v/j/E+xVu1NNvG/wqVZ
8i/9f/pjVlz953+KEVFsb2Y9ROeqKG1/jv+RL8C+Jaxf5v8apXyQnv/Vc83G
ng18jCdaDtv6s75W9NnZ8l/+1479pPZlP/jf3jpH8ZSc8Qx150j/Rv6nPyU2
sx6V+cMc9S/je8Ky/01/pLrFeKNafyseVzOeqz/sWn+c8XJBbb/8FePlsvwj
vddY36UG7NlygvEuff+R/ybgf/sFsOPzcP6nzzhX+crLeICqsC3xEv737jVX
/VuY/73nzZU/n0W/X+0Da2Nf2zz5xzLs2x12zWE9G+vf8xQ/SRnP8O88xWM+
9D/V9hW7YN9u85VvGQ9mj5qveGN8WuT++cqnrCfjfQzbijNeOiblAtmb9WOc
Mxaof05h3z3iHhcYj/ZA27vgYLKFOn9Z9JdZqPitiH13LozL74yXC8TxNsb7
JVmk67mG/pJwoNxl9LdfpOvJyni/u4uU/1gvMeyPxZw/y3rGY4QtVjvrn0W1
ERdfynij8YtVrxivFp5gCee7WBj7Flmi+jwU/S1hW4dOjDcaCzu6zMH+m9S+
rQXjuQouVbxmx7+bLdX+aRnf1NhD+22tBznKI32nON93j/yd9dXsw5dhnx+D
8ceVyxSP8sfz4iGM/4r5skz6WW/JnMur/KfxV16v4p3xdf4zsOcN60UGP4pb
1mB8YY7l7L/3DfFUB/bUZLx67Em152Q+gJD3ar/Bep/2bCtUn5mfIPLPFfIn
5lPwRq7Q+TW+9+0KxdNj/DHzSm3PePOo6rBj9yr8sc9K9b/Gf89fKf1Bxvdm
WKV43cz4Xvsq1cN06O+p9lNT8ce5q1SfGG9qP6T2Zaz/GVN5tfylHPmq+2rV
w/mMP52zWvHGeEnnQdgxozTx9J/271iR8Zqz1qB3PvMNuPetkT7GP0c/Epcc
zHjfFGtV75i/KnL6WtU7H/Ph7F6r+GS+opjYtbIf81mak61TvJ1lvpPScGBY
QuaT2SHO+Z35hu6tUzxfYb6hxOsVX52ZT6bEetXLu6yP1E58kflCQ+7AjhTX
mR804QZdX1vmSyq2Qf4/B/2tN+h8/6F/XFz7A+Zj+W2j6iPz+UUV3ij752E+
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
9H+hfxnset4F/adhS4Km6P+o7ZtXJf4GJOb4JbFn7BLYdbkm+k/Cgb2j0P8u
sfyT80VmTcL266nv5kViN+Ohw44lkT/yv4/zTRLZ38r/e5mSwtVL8z9LtaS6
3jb8b3M4qeJlAP/bvIQ9W1rxP0v6ZGw/lf8dY6vALjPjjUN6wqZrZ/kf5Jm2
L/ma/0HSJIfPXOF/kMqwybSG/0EiYE9NxnM6Z2v7dif53yZVCvTfPsP/NhVS
KL5+or9LCh2f/6/cM1NIf33+P9wL24o7+Z+sbErFUzv+L+wIO86P5X+yaWq/
xvjgmF3iiKr8fxgLWxZx/ChHKsUf/zP7J4srJuR/su2plF8YD2q9B1uy8D9v
eKIQ2Zf/JWMniJOu4n+46BDZi/HT9ttqP7Ma/b+npn3tPfQXTS3/9/E/3GbY
8Tkf/8PdgF0jLeiPn0b9H4P+Qml0fYwPDjaHHbtz8r/hVW3fIT//G5rSKn+1
5H/J/GkVv5X5X7Kp2vOV4H/E0Wllr3b8b/gDDnQcyP+GedMpnzJ+OCw8nfyh
G/9Ljohr78v/iKvg/90f8r9h7vTK993537AB7PqxEv1Dxc8Xon+5tt8yi/8j
62ZQPJbj/8hBsCdjBfR6YMeQxug9rfaiZv6H7J+R4x+oh/0Ww56W2MN6Ag5c
zIy+oLhjdfRlyST/w94hC2FHipP0/9FMinf+p4x8DXuOL0Jvxszyr+XorQrb
tsFOf2YdbxX2e6H2/k/Qny6L8us69NuyKH9gb2sPtff4B/s9VftR7BmbOqvy
w2z0V8qq679G/3dT+5x36I/KKn8+iD1TZeP6htFfYeWz6fwpjf9hnZ2zKR+m
MDhqhto3ZWS8255syj9FGW9cJrvqWX/GGzuzKz4XMt54anbVw3mMF9uZXflo
A+MX7mdX/jjN+IX2FsXLQ8bvThIn/o/xxtstyq8fGY9316J8/RL9f+RQvjEz
nm18HM/nf9+tOWSvf9B/Szw/E/oTWJW/bmL/IlbFUyqj3b4JDjTqxnjC61bp
KY1+c044WzL0FxR/4H9jc/Ocskdi7HsFtrz6gn/8gk2+7/hHvlzqv1v4R5Nc
qpdz8e9RuZRv8O/Y77n+T74JyZNb+esT/0M2El/j///I4bDtvon8tjK34v8P
8luuUF0P40Gc9UOV70aQ34aEyr/nkN+8ofK/tOg/A1vaWIm/OnmkLxP2HQh7
+qZD/1LYEUq+CDklbjAG/34vPp8E+0bm5XxNEmLfxXm1PRx2PK/itQj+8Tav
4ln2z5yP9gTF8I8F4tu58I8j+ZR/iR/3q3y6/kT4d4b88Ixn6LfDttocP/IQ
7LkRSf54ru0bjCZ/pC2g/NYI/bYC6s/RjCcNKSj/3o++irDt3Qv0dYUdZRj/
7p4F+wa2YjxmykL46/KujFcrV0j5ivGokZ0Kyf/O4r/TC8lfL2Df3bDJVo3x
aqULs/24IPbrEMf1GD8/pbDqa03ib0dh6U3NeLZAYV3/c+zXrgjtk5k/IHYi
7FjVgvywDfZMmED83YED5Q5i34RFle+d2G98Uem5SH7bUlT+/4r8fBP2vDGj
/7diiqdTxF/hYqo/34ivjcUU35/p/2vFVM9Goj9eGOfrjf/EFghTvHjx32aw
J+FR+v9ymOrLBvr/Z5js+y/5OV9xXR/jG8IaF4+LX/SPLK78sZj4+qbtc24k
P4SWwJ6n5L8NYVea0+gfpvbix4i/FSXUX+Qbe86Syu/YK7JeSfnfQPxjcEn5
a2/8Y5m470v0n4FtHbB/VO1S0nsY+w4oJXth/+CSUtI/Cv8+WUr1A/8Lf1dK
x/+GffuVln8y/0PIotJqZzy0/Zi4aEL8+01cO+PnvJnKcL69z8gP88vI/pXI
D4fVnvN3/OMl7LvbkfqXviz6DhRGf5Wy6u8S1A+f2p9zvdHPxOszoD9NOeXD
kvh35XI63zD8O0LccQn2fVJO8bEF/w4pr3y7A/0Vyqs+N0F/F9iRIh36Z6r9
6Ef8I0UFjv+V8SrhZSuo3jB+w91RPFfzxUyDXf7kPJ/sUns+/n+PLFWR41fP
yfsNR0X5W1aeXyeLe/B9z7yjovxZ/1PfU/uBXrw/altJ/T+e9wMTKsl/uvP8
HV1J8VuB5+/blVQfY/k+8Xtljm/i+2PIuMrK9x14v7+5svxT7/dvVJZezb8Y
36b+uMD3iULiYcy/7NwgTsX7xKirNvU331/8pirK93yfC+avonrn5P1j0yqq
V16+r15Se/FR/J/xo4rqC/Nzh+S1K/9lRX+4Xfmd+aYjR9iVv6vzf8M3u45/
gf9LcleVv/E/tbNBVcXHbf4vGVpV9ub7uH+52H2U/xus1VT/8mDfutXkb4fR
P6ia7F+W78MeccmC6D9dTfWR+cu9taqL7/N/Rv/qik/+PzAvqS5/YX7JsBPi
OQn5vhKsrnrN/KTWhTU43w4H/5McraF8S3+7X9dQfCfje0rGmqp//D9gnyeu
zXyJkX7YZX6KP7yoqXqA/8Wk+5PjXWP+X3OVP9V/vN+L+vdP5TfmV/Q/1fYR
fO8Jpq6l/syIP1eqJf8az/vobrWU3/heE/u4luJrNe+jU9VWvDJ/oL18bfmj
i/dJndV+7RDvY2bUVn+f4n1G8jq0N//B+64yddTfvF+NctaRv/I+1j8VthT+
QDzu1P756vO+q2Rd+QPfo6Lb11V/1kL/pLrKX7yfD9kOO87z/t5+V9snXIt9
29RT/3bAvhPqKR4L8b5uq9rbYD/nLdhV4Cb6E9SXP68h3v6qr3zwGH/eVF/5
lXh2X6+v/NgIfzY3QF9oCfy5YAPl/wHE2/oGiq9++MeVBoqP1byP/iW+dgL9
+Rty/fd5/xzWpKHs5cO+MbAp/U3s+x0OXJyKf+RppHqF/4U3aiT7BvleOLyR
/N+Jf3xtJP+bj31zhaPXPh3/rh8ue+L/3iGwbwn5KcYbrnzJfOfOHI11fOW7
Oo3VX8SLf6B4wlL8e2lj+Qv/s1hPiV995PtrZBPVk3joXdxE/j0Fvceb6PzX
0ftW3JL5wMMWNEX/LN6PO4/Avqn3iL9XsOvHeeyboZnyM/4VPhcOlOP7lfuQ
+Cvf76KfN1N8/MH75rTNlc9y8j7R1lz1gvFK3oNic13ed/7XXNfL9ztz6hbS
G0P8VWyh/kjJ+7iuau/4G+/jHrVQfzAez5qyJf5YJjXv48q1VH1hPJi7UxxP
oV5Pb6nr6cPzXrJW+F//gjzvlW4lfy3H+8QOcGD5dd4nTtH2y37xPnEn7Frf
m+e9Eq3hyz153mvXWvmP93/BiWr3M17duq216gPz+4XfEX/Ixfu41m2UX8N5
Xh3fRvmK8aP2LeI3nXkfd7ON9m/P8+pvbeWPeh83FvbVZXyyc2Nb+eN39F9T
+13eB/rjtVM9nY/+Au0UPxe4H1oHe+Yf4n3n5XayzxP0/2wnf2C+uZB87ZVP
eH9kbwz72iXifv+ieCDP5+bv2j7LU97XhjrEzHfnbOhQ/oxG/zCH/DGAfb84
FB8fsG/ODupf3p+563VQPV3N/ejgDvKH/3heXdZB+eYD9/sWp/wtyPNKbafs
Px39A+BAI8Zrm5c65c+8fwg76ZT/cn5/zY6KN84f7Ac7HvN+zLqoo/yjGfej
x9Qeqvkk3nSUv/H+IKRPJ9pXzcS+82FPTd5PRh5WewoX/vGyk/QNxn6+zurf
c7yvf9ZZ+ZX5OYNpuqh+MJ+EtXIX6d1FfB3oIv+8z/3wky6qL7Po/5Cu8se6
+G+FrrIn/RnZBfZl4/24+VFX7T+c/k/RDY44SH4oK3Yxn0BUx27S0xj/ndZN
/cH5w5NGSF8E/uqIkD+Wwl8nq71vKHp3RCj+GF/rLd6d4w1bSz5oC7sOkD/M
E2FHA+afDYvuLv2MR3Xe7q78x/yNwVY92P6z5ocYJ04Rj3y2uYf65w3fn270
UHyvIB/H7yn7Mf7Z7oZtifV9ckNPxWdO9F+FTb5p5GNTL67nAeO/zQV6yZ8P
8/1prbjoNr4/Xeql+s345eCPXvLPiXx/ytub83fg/47wcHFtL/c7F3rL31tR
377Bji6NuF/L3Uf16Sz3aw366Pr4f8M7tI/iMUi9+wz7kup+zdpX/pkK/XXF
I6lX/kGwZdFX7ic8feVPfD9zZ++nfN0N+9aCLW2YDzi2v9pzfKbeLYnj49j/
BGyyMX44pkak6hf/+5j7wZ4tn9G/MFLX24R6fTRS+Ynv51GvtX1N6qG1d3/l
Uwf+Ma+/8p3mC/CLz6wgHl/AjhkTiMd0A5Q/E1Pv/h6g+qv5mf+FXU1C8e+n
A1Q/S+LfaQYqn1JvwyqJMy4mX+yHHbtX4t+PB6p+bkV/qkHKt1mIx/KDZJ8u
5LPOsCXBY77vPdT2TTifPflg9ddH/LsMbBn3O/7tHKz42In+qYPlX8wH40wy
RPE1iHxRcojiawD5ov0Q1R/V60mwKT350LpdvPYi+SNsqK73d+pFG9j2TvPj
TFB7aCny8dah6m++R0XeUvsM5sswtxrG9Wz6Qb3+a5jsU4l6vWmY+pd8H3V9
mOKrCfXEPBy+z/wc4WOG63jMr+FeP1z5cCv17spw5QPmH4n9pfZZudGffwSc
qjz1bs0I1ccJ1LuYETo+8/+Yf2j7WU7qXZ6Rij/mB3Y2gm2n+L4VPK/2y12o
d1/Fc9KgP9coxQv2ctcfJX/4hf4ho5T/ed9k/wTbthXi/WeO0fL36byfqwN7
JjDfYczA0bIH7WbPaMXze94PZXPp/LyP9f8Zx9t4vxUJu/x3eT+3WDzyDu/n
jrtU75n/Mbb6GPTm0/xUfcdIH/Mr2hfALndP9B9RewLef3lfjZE/8X0prJdb
9Zn3Yc65sOX2JPQ+dys/wMG0Y+G7j3gfN0dccjjvaw+OlX3svI/7b6zydW70
pv5L9u2HvSv+peu1Yc99fyn/tcWej2FLdd5XhqUcx/mmxqK33DgdPxnzu3US
L7+MPR9o+6Qe7JlsvOyfAP2lxTd4fxjdYbyOZ0H/lLj2ytgz8QTZPyf2LDFB
+WEA+tvBtmVt0D8Jdq1nvt+wbRN0vMPYt9hE9h+C/YOtJ8ofLqJ/vPgy9gnf
MlH5iffP7psT5b+8Tw9pOUn7m7DvWNiXLR76N6r9+QHi8Zq4B/MLxcSbrP4L
JV+4JqteXyJfrJus/PMb+i/Dvh183wz+jGuvi/58UxQP07DvatiTcAT2vThF
8bgC//g+RfmZ+LKHTtX18n0ysuFUXS/fI83n1V6S+UzDvoizwc6c0+Qv2fCP
erBtMvOh+ger/Uxb5v/7OE326c73Hst05beVzBdXe7ryz0HicQAc+LqY9+VL
p6s/N/A+POsMrvfNduYvrDlD+ekR8xdGztD1vEf/Im2f8TP6j82QP15Gz+GZ
ys9P0PNypvI78yN6fbPY/7iT+fqeifvWZX69tFFcbzsH8+fNjlI9Yn48/4Eo
+VsK5nN8EqXryct8lCGzxVmYX6/CbPlLTuZD3Dtb9bQY8zk+gk1Pv5GfUsyR
PyRh/r+yc1QvmW/U23GOrjcd8//FzlE+qsb8f0n/Vn+nRH+pv9WfmdHvEOdg
++Bk2PF5K/P/JfoHPab5zOdY/B/VmzXobws7GoxF/8R/lD+wlz1a23dk/5ii
c6WX+WDNrefKnm/oz3GwpTD+4dw8V/HP/M9RN7R/zod8v2sxD/sfuIg/umFP
0Rf0/wY48CA7+q/GtZ/HH03zlf/X8n1m9Hzl9zP4x9r5qr9/ov8S7HhcFP/4
qe1nLUV/3gXqv5fEy6oFOl9b7HthgerPRvR/WyD/ob/Dcy9Uvq+I/RssVP7E
f0LOLVT9xx/snxfK/ppP07pI+YH5tb11YcvR+My3OmiR/JH5XJ0fYFvtoszX
nH2x8kE25tOstVjXY2X+yv5qbzeM+SuXLFb/dGc+2CxLpL82863WEJ9KwvyW
/ZbIv6owv+XCJbI/87VGHoU9LZ9g32pLZW+uL6z3UtWH4/j3PNiUvhf+7df2
Dfpjv789qr8J0fevR/mJ+aZjn3rkn8yfGZJmmdqf0f9Ry1QfX5GP9i+T3iv4
75Nlql9u9KXyiv9FX3mv7G+j//fEtVvIDw+9ym9m8kPy5cr3DfDfMsvlj8xP
He1crvzOfPH2+8vlT6Xw3yQrFO/SX3JF3PHw3/YrlB/mYd/JK1T/xmO/P1Yq
vx4iP4StVL16it4JcZyR+VO3rpT/7KW/i6zieGm20N+tVim/fqC//4IDN7P4
DL2bYEeNnAZ7r2v/OgUMDmu+Gr0rYecY8fRaBketX63rbWqw/wrseN3C4OCv
1cpfXQ12j1qD3mdjDY5es0b1Y6rBsTFwoN9ag0N+rFF9bmCwPc9a5asyBses
hB2r2htsviDuMxP9X9fKPn+iP9c6na8b+uvDrh71DbaeXSd/L2xw+Kd1qpfF
0Z9jvfzdjP46sOO8F/sPVHvz7Nj3vdqvl8W+2TYo/6ZA/5+wpfp55tftr/aO
S5lfd/EG+du/5IPMG9F7Jwn2rQ7bDoWgv694MvrCF8CBYZpf94j2r0i8hlTd
pPzKfO72XrCvLvUkcu4m2Z/5fr2HNik+S5HPnsOOMunJZ903s/3zIuSzOZsV
f4/x54NwoNHfxON/m5UvmD/YmnqL/EXzL8/aouuxYN99avcNxb8fb9H1ufHv
lFvRf+Yu80eXg13OxPjHHtjTNS3+8QB2jP8N/0gWjd429F9Uadg1Bf/xd4BN
J6tj3wDsmQC7E29j+6wV8Y8S2xQvbfHvdmofWRL/niQekAn/SLid6xmbA/8o
tl35Lg/628CW7/nQP17tbXuhf8t21Zce+EfhHap/xJ+15Q75D+cPHyuuaEX/
xh2qd5XRf0375yHe7c120u5pjH+7YNv9PuhfBztSDEf/ZdiSuw36f6n9c0fs
O3KX2ptj39VwIH4p9F+EXduJR+t3tb/tgv7Q3fT3qL7YdwVsmz0U+56HPTUz
ov/LbsX3Hfwj5x7lv3jorycOXU38nRG/Zn/nxz3Kv+/xb8texSf7+2vvVf/i
X8EBar9Cf7nf7ZV982PfrPsU/6PRX3Of+mcu+iP3KR5g+6J9Ov8S7Jtpv+pF
DPatDnuGnsI/+ogT3kX/fG2f/hv2P7xf53uLfe0HlO/vYN+eB5QPXqD/H9hz
AY72qT0pHPvsgPLRM/wj4iBc/CT2nQ0HZn1G/4GDup6b6A35l/OPuIY9Z8K2
U8ex595/1f870PsIdrTwojeFj+uJ/YjesrCte+JDhj13w54niQy2x/qUv8IM
jkx6SPauabC31CHlv5IGxzhg39SGBjvvwZZFjQyOSuRH396hBvuLw5ZXPQwO
toU9DScbbJ0I++5ONTj698PobTzJ4NiisCXBUvS3hl3W+egfd1j+twL9m7X/
s7kGmwsfYfvFqwwOa3FE+Wge+t1HVC/XoH/DEeWf/ei/Ks65z+Dwpkd1PScN
do8+qvyxF/1rj8rem9F/Se2X76L/51H113/Yd8Qx7L3rN79h31XH5H/v0X9R
7Ym+oP8bbEv8Ef25j7P9uHjG/sHlsOdLPoOt545r/9wGh39W+8yqBrutJ9Cz
uanB0XXFq9oZbD99QvW/jcGRH2DbtvgGe7OfVH/exD9qiYceRP8A2FXiGfYN
wr6/P2DfLKfkf2fxjxqn1D/Y09rvlOJ7EfZfCAfK0b+xGU9zvuOPsG812DGD
89t7w6bAK/xj3mn5W3n0+9WenusLq3IGjpiIPZ/Cga17sVe3s1xPmjUGhzw5
K/9kf3uqc8q/vejPGecUT90NNu+FPRlncb6HsOv5VIOdyc9zvHNdDI4qA/uW
uOjPXeK0s+nP+7Ctihd9SS4ovs2Hjf4sCQdufjXaY9uLhyU02iPvwrZ3X7DH
HxdVv+IZ7TFhsCX5d/S3FY87j/4JsMvcwmB/ghjlAzv2KxKj+t4e/a3EbSug
/y/xgfro3ySuWAj7FroE29/Sn83F7y/Rn2MuqZ6cI57Ww7baabD/lUvKD/mx
b5PLit9c2HcU7HKORf+ay+ov7BmMiWs/iP4fl5XP7xkcPfwK3OE29l0JBx7c
Qf8F2PH7XYPtX2Ffz5MGR+a6qnhhf/Ny2DHkI/Y9C/s2vEX/p6uqVxwvKsc1
zp8f//TXESd+hX1PwYF+NbHve7XPZvvobNfVf8vR/+d15UM4pD9scpAvvG/F
vgzYN/MN7PmI/jLXuKH8FiRf9Y1rJ36dC24oH2wh3jPclD7i01oVdtRIhv5e
4vHZ0D9XnCIv+g+Jh1TGvrZb6i/OH9n9lvqrIvrniGsPQP9BOLBgIPqfwo55
e7Bv19vyt7XYd9ZtxdMhg4P7YMum0wZbH99W/jiH/pR3VI9fY9/pd9T/xG/I
HtjSeRL6H6i9IPkhMtld2qsPRn9p8cpiBoftvKt8yvU5A3elT/k28T30PA1D
f4l7andgv4QB9CXxoa8Y7MiwAn1tYFPzVegbr/Zj5LuY3+6jp3B/7Ffkvvpn
N/pa3lf9xV5RG8XmddirYKz8aRH2agYHDo+kv12xqkfz0LsuVvXnMHovw549
O7FX4weqD++w10jYVDoZ+Wy12ovB5pgHik/iL+w77JtK//mHPVT+J56DK2Db
5EvoPw87Xr9B/5eHynfkS3fOR2wfL41xvhDvI/lHuMH2M3HcnXz88ZH6M8Jg
r+Ux+/eHY2rDLm8Pg50nH8vefQyOevdY9a29wf6sT+CmHQ0O1oRtz3oZbI18
In8fQ71480T1fKrBsZn+o73LP+iv/p/qS2/09xG3RF/kfG3fpw32zfAUvT/q
GRxmf6p87UB/z6fKX53R/4/aTZPR73uq+oe+8MrP4IHs7454pnzH+aNnP1O9
r47+A2rvH4r+/7T/3wWwb5fnbD+pBPad+Vz5qTn694m9rdH/SNvvwh7OFC/k
D9grOA02JWqJfXe/kP3ToT8W9mTMi/6kL+GZ+Fd0KdhV4L7B9h2wbUxm7HtP
7du/Ge3eRK+krwr6i8OeN0nR307tZvwx6vYr+fsxg/2/v5b946O/KOw5zv7W
1uKEOdA/TtvHu2rsHxv/DdeX9l+DQwrDngs30d8CNl3bb3Ck+43qPfcD3g1v
1H8/qBcF3hJvqe5TL5q+lT+Tz6NGw5YEV7h/XCsesZp6cgk2reX+3h0eZP92
1JfoEbBl/07uH1fBnr6fuH+8qO2ncj9u/yau6+f+dug79K5LbrSbV8CBnNxP
hp2DTbXIz87Paj9Mvoyyvv8/+dq67L2uV/dzp2Fbat1vflD7zS34R/YP6K05
HPvX+iD7j8a+J+DAWO5nvEHY5aaexGT5yPaVzqK/JmzL8RP9/T5q+0TE32s4
ED8F/pHxk+L9E/qrfdL5g+jvDQeWv0T/PG0/8wb+kf6z/AN/t1eBTYMvoL+H
2Mf9jfdvbZ8yJ/79L2xbBjsrfaE/jyYmf3T7ous/YOzvj1L7d44X3P9F/ou9
rU9gRw3qb3Tnr8rfXbHvDNgROgb9e7/KHo3R//Cr/JvnGfO0bxz/0Hf8eRcc
yPQv/nxf7etm4c9Jvsve/+DPJWFP1/w872z/rvpVCn++CwcWVMCf//jB9l8O
8P4h7Ify3WHen7SFXdZa3B/fUvv93/HnBD853rDW6C8qTjUI/a1gz+r16P8L
djyeRryZf2Hf+h25fysEOzIQX+HNf+l6DqB/DOzqwfNe9Hpt36c09sxvem5s
fyMV/tAEtlR4gv5RsOsA8RWzRry9ocHmS7DtGc+7UY3iGex4zf2rfzgcGFsX
f1gpHkb+sV6AbVVSGu3hX7X/kBD8YYjZYF9BPZ8shwNVh6D/LOzowvNa5CfY
8n2cwd4c8WmvwfNZmAe2HM2CP5+CAwvs+PN72HO8LfGY7Tf27zOcePwT9vUc
RT05DtsODTQ4+q04cVeDYzMn4HyPhhocUgP2bahosL0v7JixjXh7pfZRM6gn
GX9H300L+qvCrjuKx15qr1oV/XPV3pZ4tKZLiJ545MtwGxx4u9Fgd3fYVJr7
z+g5sGdCPvQf1PbDshocWfEPjne/msHerrAleQfs1SkR+8/U/c902HGM+wF3
ssTSF4I9porn0H/2neLLo+jPAGxKP5f+TJyE850rhb1KwCbbdaPduQ22vcuE
Pe6o3cX9nj9hUtonF0RfMdhSf57B1jawK/YW/Xkzqfwv3hHDHr8l0/X9YXBI
Edi1OKvB9paw43wHgyPHwrZTZww2m5PD+dMfNfqzoLi232h3NoMtI54bHOVK
rnj6bLB/HWzK98Dg8Hwp1L+hxvHcjWHP0OoGR4+ETWsbGBy7OoXit67BITFw
oFgRg70NU8qfLxnHjxkmfmYy2s0rU6q/4bDzar/U2GDnF/G2CIODg1PJPk0N
tnpTyT41DQ4/k0r90w39H9X+eQT6LSHoa/S3wfalsG/gAYMjT4rvxqL/Heyy
PjI4Jmtqjjcv+zFD/5+p5V/VDI46BlsK1zLY/yaO/zA4mCkN9ixa2WBr9TSy
9xCDw/ukUX/NMDj2pTj5UoNDMqTV/oMMttth38/kxw39PeHA1iQGe/9JK/+u
ZHBY2nTw7cMGOyunU/7pYnBUBOxy1jLYPzud7F/R4OAB2LF5rMHuCunZ/nl5
g6O7wI7rkQbHzkwvfylocMg+8bUcBtsfpZf/FjY4pmMG2WOhwebpsC9te/Tv
hj1b+qI/NoOul/bwHRnR49+Ivnuw5dUY9CXKhL4yXH9s8UzKHwVOGPaLjuOM
Bntvw74z99H3e2ba1z9AXzHY0rsP+lrDnpaX6f8b2v59WewXP4vit5HB1sJZ
ZM9C6G8R1/7I2N/tzqL+SYX94mVVfsP+9gLiy7RHNoUtbZoY+3tHZ5W/tDfY
mTcbx3uxFX8Nz6b+wJ/9I2Bb6gL466psqn818deL2VQv7hoc3SC76s8Z/HUo
7CrRDX9dAQf2cjz7Odj0dLbBkZ/VPrY18TTYAudcaXDYMti2LpT+Pg1bKuTC
Xz/Arjr4lz97DrYfk5r+P5FD+XU7eoNx/AO9WazoOXkOvTXFT2tjv6Ow4/dm
Bse8FnexoDdTTuWfeuitBvvqhmLv3rBt9l3y1wu1D1xE/kqfi+tZSX4Kr5JL
/myi/3uIO1rR/zfsq8Tx7GlyK18MIH9Vyq34iSJ/dYvjfuSvKNgRuon8ewD2
JZ1pcFT5UNU/J/7QGbZUn4I/zIBty7riD3tDZU/6O/yh9i8diX2deWifv5L6
MC2P9DrQvyuPzncV/ffzyJ82oj9JXtWT+dSHybCnIfXIuV3tHW9S3+7CjlU/
qG9/5JM/DsP+YbDnQkbsu1VctDf2vQXb+o9Cf4L8iq9J+EdR2NYhFn9uBft2
4P8x1/Mrvz7HP+IXkL+swz8Kwb6mLvyjeQHl9xHE4xjYsycf9jUV5HzF5+Ef
+Qsqn8RQ35oUVDxTn6JHafvZ36nPa9Q+Kh3xlqeQ9LXEvxvBpkQO9A8vJP/Y
i/5VsG+qB/0XYFv3fvhH/cKyP9cXHFJY9Ts5+pfDlvrN0H+2sPpvLPo/af9Z
+G/IoCKqB+3wDw/s+9AI/zil9tR3jP71vocdGRzcX2Qrin3sxw4b9l1cVP7I
/VzUcdiR4oTR7n+r9l3jDQ5mLqZ4zm0cz1oDDlTlfiz6iHhvIu7fXhVT/phh
7B+SMUz5wmOwvWqY6mMo92+9YEuChUa7+YW4/kGDw9IVhzel4P7NBjtmZMe/
u4vLvEX/HNhz/KjB4alLYK+7Jw12V4Q9KR8bHN0VDiz4YnDsrBKqN1/Rvx92
pWlnsLdcSdqr8L4wphPsarLVsKd5BuxocMzgsD1w4GKEwc4H4qovDA52KMX2
x3iesk4tJf/m/X34TrWX4XnfHYBNniiDoxOXhifx/c4+CbZ05n1g5LbS8k/e
/3nviIvzvBSTsIz2/wv7h5VRvt5tcNQW2PbsMPa9qe0juJ8P/lZW8cbznLVI
WcX3Guzfsqz8bT/2vQZ78tzEvuZyqrcX8Y+C5ZR/f6G/WTnV25H4t0tcPS35
7xfsWp+B/JevvPw/Fv9oDAe+5jHa/SNhVw+2D65We6pixF9oBeWjjuSPhhWU
P+DYYWpfUpj4XCm+W5X4PA8H4g+ivtSrqPyVnfoypKLiMS/6vbDjdT30n9H2
DVNQfz5WVH89I/4GVmL/xS94PlkKW8b1Qv9J2POlK/rfwY7dq9CftbL6cxf5
Y1Fl9cc66ssx2PezFfrfwJajF9Cf2cb5nVnIf9Vh233ym/+w2rOWJ/+9tMle
P6nvGarQbr5F/rNXUXsI+nuKk/L887+nDbZPIvumtdN+5jr5o7K40hb8IwI2
Dd5G/psNexKGkT9CqspfzuLfFaqq3kVQH7tUVT2PNDg4s6ry4xfsv0+cYTf5
r2w1jhfrIv91hE2OETy/Tq+m+H/H82mH6qpX5wwOm1Jd/leK/t8B28Z8o38n
1lD/pTXYHV1D9snJ+W/XkD3fEV+/11Q8jiS+itXU9VYg/jfXVLwXJf5viHe5
iP/f/kTPsAHk38KwJyPvy50tYJeX9xnBq3/qfHzPssarxf6ZAgaHFxBfbG6w
u2kt5dNtBkePhj19eV9h/1lL9ew34j9vbdmzCPrDxRF10T8Cdp3m+5V5NWxJ
zvubqNx1OP6b5OSvBnUUL3xfCw6to+Pxf4N1hdo38f0//Fwd+XNOg2Pr1lU7
//OEDIZt25rzPX+Z2lfyfTjyNOzok4H3fR+0/aGxvI8cUE/56BvvI5fAlunX
eJ96op7qE+8D/UHxRd6XB7PUV31thn0X1pc9orHvUbGzE/pfa/vHvH8MydSA
9gNljXZ7Ndixao7BMf4Gur4p2Peltp/D/xdh6Ruq3mXAP6rAvg9JsH8PcVr8
zfqsoeIzI/UhTSPZn+/77kqwa8oP9HdrJH+Yhv4o2DOzOP6RKpz2HGPxj/Lh
8scu+Edn2LV9NP49M1z+zPfKsL3hqld98I8yjbFvI+p70AmbTBzfOk08eDb6
d8H///vGyU043ucG6NsOW+ovRd/dJur/Qej7o6nOp/iaANsS4+9RW5vK33if
6L+l9ipn6P8EzWT/xQZbizaTPfh+H70J9o16iv2uw5b9KckP8Zsrn/yN/kKw
7dJO9DeHTSeXYb+rzVUvjmA/Uwv5Wynya/4W8v9W1N8mar/D+zr/KNh30E5+
+yEumJn8lqeljsf9ZHSjlqpX3G/GDhfPzkt+XQVbRnD/6M3VSvmJ+7+Y+mIn
70vNQ2GTJQz9y2HLK/rPebaV6mcN+r9Oa9UX3kdbB7VWPl5C/3tg01reX7tP
qT0F74uj38O2/n2x5+I2qh+N0Hscdi3m+3fMWzjwFn8wZ2mr/M79Z9QC2JK7
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

         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], FontSize -> 13, 
         CapForm["Butt"], 
         AbsoluteThickness[1.6], 
         AbsoluteDashing[{}], 
         GrayLevel[0]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             GraphicsBox[{
               DiskBox[{0, 0}, 
                Offset[{2.75, 2.75}]]}], 
             GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                 PointSize[
                  Rational[1, 360]], FontSize -> 13, 
                 CapForm["Butt"], 
                 AbsoluteThickness[1.6], 
                 AbsoluteDashing[{}], 
                 GrayLevel[0]]}, StripOnInput -> False], TraditionalForm]], {
          0., 0.}], CompressedData["
1:eJxUnWVYVN3XxnHsRMfEhDGxwMEOxLEVa2xFxbHFHBsLx24dMTBx7NbBxOIZ
W7HGVlQcFQNzFAPr/b/rvvcH/OL1u9aOe6+99trn7Dmc42MabuyX3sPDw+Dl
4ZHuf/9rPOSfZsGqlw3+939cfKGooP/9b80WJezhUUrYUTWK9g7C7p6KQ4R1
c1V52I0x4OioMcKuKqvJfsLaEHBo/9+r/p/N+xX/ELY9BAcFpJPy+q5r2N9t
sZumr2F72aF3j7JfFLvjnuIbwu50a9l+uLAlYi3rlxa271zL/ioIu26v5Xj6
Cmv/qfKNhQ2+69h+F2HntnVsP0RY41RcV1j/W3Fx6C+znu35Clvbrmf/XYV1
15W9obDxp+I+0F9yA8uvhP5WigdA/7gN1FcU/v22gf3ngp4N0eRh8FexjRzv
dvS3diP7yyz+tZzfqOpj/hrb2F9OYcNwG+u70F+Ujf3vxHyeUeXvwV/vlT1Q
6puGbCJ3w3yu2MT2zIi/OMW5Vst8vt3E9rIK6/Jvpr2osH3ZZrZXVdh1cjPL
dxTWvt7M8QQJG7RbyAWEzXW3sHx6Yc1xZW8trH+pOFjY5LmV/vIRttZS3FDY
0Wcr9fUUNroU9xW25NjG9spDf3XF3aA/VHEj6J+/jfU7Cduybqe9mbAzYHsa
vZqe26mnDvTPUdwY+u3b2Z4e/vXfkaY/XfcdtE+C/pk76J9e0L9vB/29Fvof
qPp34d8uO8kZ1oh/LTtZ/w3071ZcWuzOuzupr7OwJt0upUfYOnUX7W2EHTt2
sf5CYfctVX6SsO6vsi8TNpbbzfE0E3Zt3a3Wn7D2prJ3Ezb82s3+6kF/6T20
/4X+NnvYn1bs+mt72N4X+PeHsmeBft1e+is39Afvpd0N/4/dy/o+Yrek7GV/
8Ke9xD6WP4v4aL6P5W8iPkbvY/kE+H+94lOIj6L7Wf4Y4qPpfo7vHuJjpLLv
gf41+6k3CfF9bj/7f4L4aHSAXBj+HXaA7VWC/lUH2H8i9DsOsP1n0P9O1feG
f8Ps7I/+XW5nffjXedrO+vURH29V+Q6Y/xMxLN8C8/8qhuX7QV+eg9TXG/rq
HGT9Jpj/WMU1Mf8vVPkS0JfrUBq21TzE/goJm54dUvsX5jv74TTx4ah2mOUD
obfXYZbvDr3zDrP/tsL2LEdUvkC86o+o/Rd6exyhno7QO/sI26sFvQeOsP9P
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
k6Ls14T1JdzU/xL6m7vZXw6pbx0FjvYKFnasU/ZvUt5Y9Av9917Y0uQL24c+
+4gvrL9Q7K7Vyt5HWHtO1X8k82Fr+JX8TNg59CvL94T+VV+pdw30O77Sn0Og
/52q/xXxMTiF/n+A+FiewngIQHycTqF//BEfb1LYnlnizZ73G+tvEDZYFTeU
8uYT3+iPEoiPpG/s/wT05/7O9lKFNXW+s/9bwtZjtAcjfhzPv7P9LMLunD+o
bzz01/zB+n1Fj9H0Q+UTrL9EVb6O2LXZf7J8DalvqPaTejJAf6+fLN8M/p/7
k+0VF9ZnSaW/PeBffSr1fYf+kFS1fqF/lipP/ftZ3qss4sPvF+czn7C96y+W
r434mE67xzbEx95f1LMT663Tb44nCfEw7Tfbv4d42KXsu6D3DjmpPdbjP5aP
aoT1NuUP/T8N8bz9D/sbB73OPyzfDHp//2F71aC3zF/2Z4M/t/xl+cvw5/W/
HG8w9P9k+aSi0F/qH+cjN/zdWnFhYUe84kCZT/e3f+xvIvY/H49X4JPI1y3B
/7s/Qr4eo+zthbVfFXsinoune8X9Hvm6WTrW14jdZlZ8Bfl6reJM2E+KaMje
2E8aa9heJWHHcLCHx3Psh1GqfDL0n9VQzzHsh4b05JuI5yHgoIAsiOeV6dX4
oP+/9OzviLA5WdmvYD8ZnIH1P2E/jFScT+ymUxlYfo+w9XUG6v2K/UabUfWP
fLEUHJpUDPFxnNwf68P+UpW/I+VdnpnAMfURz7Uzsb9eyBdHwdFeIxAfLsXd
ER85Mwt7N86P+K6Rmf31lvZNvTOzvePId08zs/9w5ItsWWAPro74rpqF/sJ6
s/TMwvEYoH8Oy8fvRb7InBX+iMB4zVWy0l4K66lyNvoL69PRJRv7i0B/9xRj
P3F1zM7yDbB/RWTneLNg/9qp7F/R323ao87BX3+zs3/sJ/rJOWgvg/W+jeyF
8Vpv5qC/qkDfrxz0D/Znd+mc5PHwx+acrO+AP67lZH93sd5/5KQ/VmM+S+ai
fRGuH1rlYntTMJ9XaA+GfzTfcrH9BOj39qTdR8ZvauHJ9kOw/45W3E1Y98WT
83VA2FgsN/sDW5rmZnvrsP+OpD1mEfy/JjfrH8X1QeE89N82YVsjxdeEncPy
sP+LwpqoPPQn2tefUbwT1wcNtGo94vomTEt7XrvoX6GlnvTCxjiW93oJ/W+1
nP9XiI9BeVleI+UNy/Ky/d/Qf1JxqNhtr/JyPjoLO/Pk43g7CpuW5GP5PcLW
WMUrhR0v8nG8RmF3rvzU3wj6a+WnntXC9iO0JyUIu57RHvBVWJujAOv/hf7q
BVg/SdgcWkDllxjx79MC1OMrrM9akO23EzYFFKS9orC1h7J3FHbMLsj2Dgkb
MxWif1cIW/wLUc9FYXs3ZU8Vds0oRP9vEdbuY/mky8K2Sl7kq8LOzl6MtzfQ
b/FS+8tB0b/bi+3VETbdVeVnCbs7FGZ7z4R1UwvTPyeFjTto779M2HKrMOvH
CZu3FmH7P4RtN4pw/B+FnanKvkdYU7qoim9h66ai7L/EIfHf1aKMnz/Q971o
mv50umKsvwj6gotRXyFh1+Vi1D8P/ksBR+xaLWwoUVw4MfyrsLk5OHrEF8y3
G+yxwwF/FS0Be+YR0NukBPUNFXaMACfWNkDvanBE5Fz4y8sb9fc/FrY3JHc9
AL1DwUHPPGT82lXg0JqfxW5wgBNL5hG7M8gH9R88gT/DfOi/HGLXLwcnps4S
tr4Bx1U7IawbqMP4fC8IG63goBY5DoveE+DETWax25PAEYZBwq7cJcH5/hO2
HQNHX7gGfc9pd7wX1uQqRX/fh76apbi+a0p/jsPkgsuE3Yml6O8IYV320tA/
Jhz6eoEjbpcR1j4BJ7ZbKe0bspQBL70nbNaDvUNaSXlbCDjUs5Owcxbta5sI
mzKWhZ64AsJWP3DcIZR3dKX9DfVOBwdtfAu9e8ERYR+E7RXLwe5T5Ij4r1M5
xltWYe008gOtsGEX2Su3sPlOOc5XA2FNB1/o6VlcWD/Fl/PdTNi0nVxysrDV
CfY+N0TY8duX+noKGyeW5/xMF7ZsAUc3vS5svw6OqJcA/T/B3hmvQX+pCtDz
JP1R8a8N7D2siLAznjwzv7DmOzgx9gn0+1SEf0bthP6WFdn/MmH3pYrMH3/g
36/gCE066C9eif5/jPhoVol6fsD/ZnBE8mdhw+dK9McUYXORysxXkxAfjcER
Fg/Ex/DKXA8LEc+rK3N9XsX6KuQHfUF9kb8MfsxHkcgHQ/w4X4Wx/lb6MV+8
Q/76j+WTmmJ91fdn/miLfDDYn/khDvEdCfYYlID4PuVPPSOwHl+zvqUC8v+A
KqxvRj5bWoXr8zfy2fEqjP/hyGcvwR73zko+dHvqUX/eNOxfi8CJz59h/z0K
Dr1+BPuvS8/1PRj5N2cA2q8cj/23RgD9dRvXB4cC6J862L8Sab/3Efk4W1XO
537sv1XBER3m4/qhJzi0zDRcHzymfbI39t/M1eifp2K3VCH/+An93avRX/Wg
fyY58huubzJUZ//tcH1WuTr7e4rrsy7gxD7dpb5menWOr4ywfk91tncT12cV
aiC+P1XC9U1HsHdjF64vI2pQTziuL3eSJ1twfXy7BtdDCu7H2tdkfpyB+4XJ
NRmvdXH9vq0m97OPuB++SfYdIfWdv1g/uATuZ8JrsT/cj1s312J+sOP6/Vot
rucnuH7/AY7L4Qf9JWszf83F9e/G2lwPOB9zXQEn3vyC68tvtZlfduH+w7sO
139/+L9FHe4PfXD9ewkccfIZrn+/1GH+aIHry2J1Ub4zrq+tTesyXs7B/yPB
ccXr4/r3U13OZxTio3A97m+9ER+NwKFH3yA+hoGjo67g+jKK9povcP1bMJDz
HY34bhDI/bE64mMIOChmKOJjRSDXUwnojwOHbgW7A+szX+1DfA+qz3zXE/qX
1ae+btB/Ehy9/zj0v2L5Z364/ukfxPGvwfXPkiDOR09cX8bS3rMtri9fBLG/
41ifng0YD+mQPxY24HjW4/r3CO2xuL53P2tAPe2hP4eB/o2B/uoG5sNt8O9B
cFzKIPj3qYHzifVlyNoQ/thbA9fvAQ3Zvg7+79GQ+Rzzr09g+QTcH5kyNWJ+
eoL48G/E+EF7jm6NmM9GQf+MRtSXH/5N3xjtfdgN/1YCB/V+AP2daT/XGf4r
34R8EP7r2IT5ZBvy29QmzB+4XtUZm6J8yAzsD5PAHm9m4npyKzhufUNcn90g
V7uC68lUlr+XG/vDhGaM1xW4Pt9E9mqL6/Or4Lj4htD3A+wR5w99uuaM71DM
bzS5fyz2h8vkMjehP4XsWRD6S7TAfO8qBf3NW3B9I/60F1vQ/2MRn+4W1BOO
+CzakvvHOcRnk5bc/17DvyNaMl7KYn/72JLx3ATx6RVMf1fG/tYwmPnwMfQP
BUc/uAP9q4I5X/dxf1agFce/CfdnQeDoruWgP6wV+zuB+FzeivnmFeLzNPlk
Ifg3sDX0LPCEfwe2ZjyjPZO1NfPdZexvJ1pzvbxHfCa1Zrw5sH76taF/YLcs
Bocungj9x8htzkP/8zbMT1jv2lxtGe/ID7YF5Db7kb8Og70znkX+etaW89kV
+St7O+afJshf1dpRP8bvjmnH9XkQ6/9JO+5XK6A/i5HzORL69YqtWF8hZN8l
iI9HRu4XuD82Z2zP/JQE/X5g72GYT2fX9lwvy+H/Ge2Zv5Jx/67pwHjF/Doq
gqMzByA+OoGDfLDeddPAEYbf0L+LXIH5y7cjODkH/NuhI9fjD8THlI7MT/mg
fzvtK/WY/4mdYG/RD/q2gL0bn4C+6524PuOh7yftlTNgfY3vTH9hPdhtnWlv
g/wQr+yBwtrv4AhNPdxv+nRhfJdEftjQheu7L+43L3ehvqeI36+Kcb1pKt6V
68GE9dcMHBHWEvfvF7pyPc1Bfvjclfn4OfQX6Qa9a19Af+NurH8X+ofTXhT3
w+YP3Rjv6XD9W6g782Fm3I8aurO/49A/tDvzzWpcH68k98b9uCN/CPhLR1y/
1w/h+KdB/+AQrocI6D0F9giqBn/W64Hy43GeYxgAjv6kw3nJUnCEJQj5+Dg4
cdMo+PtlD+aDJfDfop7M18injqPkEeWgzwWOuP0I+StnL+6/iA/7/F6047zI
dYhcbx3iM1HZZyIeq4YyH+A8RBNDLoN8qn8cynzUHfOduTf6e479yVqlN8ff
CXq7k8vwvOZhb+Zj3B9ZMpi4P+M8w17ZRH9mxP1QF7JHKdwPTQcntquO+U7X
h/2FYL4r9GF+Ams69WG8FMT5Q0Qf7ofXoX9nH8bLIfizXF/OP+7PdO3B0bNx
nmWcDPaeqZH2LNv6Mr4GYj++CY7LsRj3a237Mf/8RLyGg0OT3kH/5n6M/9vQ
f60f5/sV9P/sRz2ZcB4xrj/jLx/OIzb253o7J+XdV8jP3+J+81t/5qsvOO/x
HsB4BLvWD+D+9AP+vTSA63kU9H+hvUIZ6C82EHrfJCB+mw5k/j2F+Dg/kPGJ
+Td9YnnfgYiPwoO4Xnl+1mgQ5xP5zT1sEOPjPe433w+if7IiPgoO5vpAfLoa
gON6/kM8DxnM9W3G+lsxmPFhxX6QLwzlg5G/NPXJT+Ygnw0K436F6xPTsjDu
J5mh/6TiPoiPukM4XzjvM/YfQv/MR3wvGcL+h0F/LMs/wHmh6wU4sSTOY819
hoJTEY+2hUM53/HID0dob1cI8eECe3TOifjOMQzlQyriPGLeMMYvrgfdB2k/
h+tB3VNwXPFz0J91OPevxtAfMJzxfR/5zQ6OW4D+DQnD2Z8n4iPTCPg/Bnab
/wiu77qI7260fwkTNj0YQX81wXlK+pH0lxf0VxrJ/Ss79Hceyf3gKPRbRjKe
j8C/Hmb67xX8Wx4c4bBBf0fFY7HfTWX5pTHw/w4z/YX50ZQbxfw8DvFtHMX5
RryZJo3i+sZ5u3XrKObTYojvG7QvwP5sbDOa/sD+aJkwmvGA+bZvGs35fQP9
V8GhbSpgff4YzfUMto0dw/WB9emMBseN+QD9V8YwXvdBf8oYrm/s56YSY9Ff
bexH7nXg6Ka4XtddHMv52Q/9blV+F/QXHQc9k6dAfxOwR9x7+PccOLT/Rfj3
I8s7cF5t8xpPf3xBfDccz/zVH/E9bDzrL0d8vBvP+IxEfBSYwHjaifgImsD1
fBT5L4y8Pr3kS+PyCZy/wsKuvOGMH0+cJweGc/8MxHnhwHDG2zCcF1rDGe87
cV54Ipz5foOwvs5E+vc5zpP7TeR+kR/nsYsnMp/ifNhxbCLrB+K88zk49EdD
nMeaJtEfx3GeuWAS8/Vh6D9Me2ws9D+bxPzXHOfJ2SfDnqeJsHMuOOiZB86T
D5KzZcF57BOwx71KOI/NMgX2gCrQr59C/a+EdQfA0f5/cR77aArzSy4577Vk
nIr2Vj7HebIfONQzCefJXclJN3HefX8q+/sobNNEoL8/FXCeXDGC8dUF58md
I+jvc8L6aRGqPWHHP5bf8VbY7TuN+4f2mOjvMI3rPUTYOAWc2GdKrPizrAX1
Bx0SNrQDB827KmyeCI6IvCJs22JhPq98XPzXejrjvafYreOnM15jpT+HbTrn
p7+wO57lk1tA33dwXMokqW8fM4PxlFPad20AewQlQ+9lcOh1D7Ebvs5gPqwg
bC4+k/k84wnx3zpyUjdh/YWZ3A+iof/zTMZHjLC1yCz686KwozE5rq2w8ews
zldeYcuHWcyfUdBfaDb361rQbwAH+dwV1g4FR0etFrYlK46R+s78c5jf5old
EzSH/kwP/YPnMD/GCpsiwd5r850U/2rnMr9GiF1Xby7Xw2SxGweAvYteFbYs
JTcudkr0H5/LfH5c7Iba88DxCcLmvvM4nhfSvm3RPPZnELvz6DzG21phzXPy
heXC1t7zad8q7Jg/X+1v0H9oPvODVvToElX5+9CfbQHju7bYXXMWUM8msWtj
FlA/9Boes/wHPylvzryQ6zfradFfBRyduZCwfj/5Qllh08OF1BMhbM2wCPHg
ESDsqAwOLZNT2N1lEecL9S33FnH/ywn/plvMfOgSfa4K5DHfxJ/aTuSUDdAf
sZjrpbjUd/4FB/WOE9b4LuH4pgrr2y/hfjBW2DR5CceTS9i6bQnz/W/4t8xS
7m+3hY1tl7K9X8KWcNodR6F/81Lma/jXdY3cZx/io5VVrT9h2zgr48eE+Nho
pf9tWJ/xtFcrIHb9NyvzI8o7Ri+jP0MQH+uXcX1qhXWXljG/5EV8fFnG/OuF
+C4WCf23K8O/ayOZv/IKG87TPrmosPkTOO6QP+K78HL2n4L88B4cYRkhdkfB
FSrehN0NVnD/qob1N2QF4xXz68q3kvM5HfFafyX9fQN6Bq1k/w+hZxk48eZg
rCftKoy/4Cfkg7qrmK+hx9Qf7J1wA3qXgBPDu0NvLDi6aT9hY60oxm8RYUsf
sucVYfvCKI63AvQfIUfmhD9dUVw/rZDPQlczfpGfnfPA0fs9kc8OrWY+sku+
0z9l+ScG5OOsa9B+hyNid89ew/keKHadnXbDdeTjBPKuc8jHmdYyXgdCv/9a
zl8urKd9YO+M8J/5wVrG52nMd/p1nI8xws5K67g+OyJeu4CDLrcWtt4FR3s1
g3891kPvm76Ih/Lrmd8OIx46ruf6jIb/p66nPzvAv39ojy8O/5bbwPxcB/Fh
3MD5P4H9bhI4MXYV/L+V9kGNhPWlo9G//yj4t00052cO4mMCOXgR9rtNLP/p
Gfx/lTzCJWwJ3kj/6aW8fSw5xBv7XfRG6qmC/e7KRo6nLvbrFJY/NwPxMcrG
fIH9ULPexvzYE/ov0v4jCvrdNsbjX+gvuol6o+DfNeCgmEzIB+c2cT4+IL4/
ghOXnkd8eG1mPqiJfNZwM9ePE/Hh2Mx8ZEV8vNvMeNiI+CiwhfsB5lvTYAv9
5Yn1GbaF/r0P/74h9yyA+Mi7lfvbG8R3IDhoFK4/jAO3Mp/0QXxbwR4rsR60
ebbRf5fg3zrbOL+vEB/9yIdqQ/9ilv+BfOE8Bk5MXY38UXM719MmxLcJ7D1s
PuJ7AbnxMug/rOzD4P9nrB8WBP/22gG9nUsgvufuoD/bIb4P7uD+hPKGJzu4
vgPh/yw7wRXQv2b2To53F/x7gNx/CvQ/2sl8Uwj6M+7ieg2Gfr9dHN9+rL+9
4NDF+bFf3N/F8T2Ffs1u2JMw366Kuzmeq9DfGRyUrQf8e4c8CvuN8x/Lxz1F
fJffw/ExvjvsYX6fi/iesof5vLOw+/cejgfXv7qye7lfpUd8tAMn1h6K9TmR
9uTCuB7dAvYI6oDr+1L72N4MXN+33kf9qG8bv4/5fz2uR237mE/3C2uuguOK
L8L1fsv9HM815IsN+xkP26D3Mu2T3wkbv4IT+4wXdpkPcP4L4fp+3QHuR3mg
98IBrs/Vcr9g/nyA/TUQthWxc31lxH6y2s7xPhe76Szth6YLWz/YOb4muD8p
FEO9j3B/YojhfN8TtvwXw/0pQdieTPt1K/TnP8h4DIH+IHLScOgfDPbemwP5
7vVB5p9ciIe8h5gvtiAe6oET8yxDPAwgb9qPfLf0EOMT+USX+zDHn4h4qH2Y
+W8X8kVfcoAJ+XoR2CPCD/n66GHGwxnEQ40j3M86IR56g0O3Vof++Ue4/yC/
aw4f4fyugf8TwUEtQoUdPY8yv12Ff+ccpf+zIT5ijjLeh+H+9PFR7r9n4f/M
x8CVs8C/s44xn5eDf/cf4/p9hvh4CE5sdx7xkSEW+jq8wP115VjWH4H42BPL
8WZBfNyjveB7xEe644ynJ9BfARzkcwT3r52UvSTW222w90zcX7v+0r6yFfT7
nsB8VUM8GdqDPe61hP7JtAcfx/3/b9qDvuH+v8xJ6G3aBvrbnuT6HCh2a/hJ
xntNnA9sPsn8GCZsH3cK7fkeFXZtPMX4ei6sjQd7r/WR9p2jTzM/LYWeDae5
v+jErr90mvP3WuymL+DQNh9wHjEyjvn7h7BubRz9kwHzfT6O8b4f5ymf4ugf
rG974f8w3szd4K+o/7gew+GvM+DE5zhfsL0HB/X+A/0FHfRPsrDG4GA8/sJ8
xzm4f+dFvL4lDzIgn+U7w/1Cj3itT57cFPls0Bmur7KY71dn6B+ch2i1Zzmf
7RGvdc8yn83Heut/lvnBH+ttyVm29wH+9TxH/7zAfNc6R3+URv7tc4792RGv
C88xP71DvB5R9XtjPVU/z/jfDP+Gnud6Wyfsmnee/kV8aQ+d5/hPw/9PyYay
8G+PC5yvZvDvnAvMbwHQbwdH/LmC+EhQPBPxmuki99PjOG+beZF6K4nduI8c
Hoz4eACOqBeEeE5/ifOdjPO2SmDvjJ5iN+9W9mZ4fvPuJeafBcgHHpcZ/xsR
3xUu0z4R660jOCKsLtbTLdoXr8d55p/L9F8L6C93hfujDeexRnDQFzzPaZl0
hfHTH+eZv2hv4YXz2NLxXJ8rcB7bhlzwG86TJ8RzfDhfdm6K5/xsx+8NuqvQ
96Mnfk8Lvsr50eP52LFXuf6O4fneaNqDv+P50ytXqfcczmObX+P6wfPKrlHg
uDEHcF6/Huyx4zF+L7lI7rwQ+t3goGcGYc3I62hPsxznyWuuM/954Tz2HNm3
Ps5jP16nPjP857iB+pF+OG99d4Pt50M+K3CT8V0a+azBTfqD562nbzKeNuG8
+A156TucF+dzYn354zxXH+jk+BBfpoFOxl8J5LcksmU84rXOLY6nMeK13y3m
v0vQu/gW83cqzq9z3cb41r/F+XBNcOhRPI9sM4GjP+2D3gW3uR/yeeMj5Ix/
4K9qd5hP9mO+e91h/B9GvM4FR4/IgHx88A7zRTHof3KH6788/BlylzwI/px9
l/vZFGHDAXJQU6y3R+DQpFlYbxnv0b9tsJ5mgCNuYz2a9pI7vIb+++DQmlHQ
r7nPfAP/uyuSK7xHPOwin/RBPrhzn/uzCfr/3ed4/aG//APqLQf9HR5wffD8
3fmA7Wnh3z/g0DK7EA9lH3I+niIe2oG9Gy+G/onkyngeXpcKDsr2Hvmg1CPu
Pzrob/2I9q9Yb+PJvcsgn9nA3ueqIT58EuDPdrkQHy3BQZfv4XnuMeBor0tY
b9EJrN8e+i+zfG88j+5o9hj+iHgM/5rJ97ZD/7rHjMep+P3jwmOuj+HQ/5ns
lYR8NuIJ+kvAeA2rn1DvUeSDs+C4+B34fenDE65f5EdnoafMD+Xg35VkB55/
t/73lOvxLn5fSgbH9QxFPsufCD37kb90QYnM5zPg31PgxFj8nuV6ncj4KgH9
eZ+xP/y9h6Ge4grQP+AZx4e/19AkPaM/opHPcrvIL/H7WG1wYu0r0N+X9qZL
oX+Ri+MfgPjI+ZzxYMbz/jWeq/wC/b0Vf8DzDfOfs705yMeHaZ9cC/tF1Rec
/1bYL3qC4w4twe+Pc19wfbTB7+sx4Ihk/H2O6THLF++P30+7v+T67YzfT2eB
vYuG4vfT/S+5nvD7q+XhS44Hv//bMyQx3vB7t2E6OHR8cfy+vgccfeEEng+4
x/Iex/D7abpXKN+/PH7/rfiK+aARfp/e+UrFI54nu624C/T/Zfl8R/E8ke9r
xk92PE/f/jX303A873bzNfNJIJ5vK/OG+SwPnt9u+4Z6yuH5+XDaU/Pi7y9/
vmE+Xoa/Hy35FnoemPD8eSty1DL8Pfa4t9w/8X4L98a33G9X4O+tvZO5fhdK
eXuLZO5HRvw98Ghw4qa/eP/EhmT6uwv+fvRSMvPZbfz9aNN33B8X4+9HzeCg
gBvQv/Yd11sHPF98nnafs3i++NM7rrfZeD5++Hu2vxjP90eBI8LG4+8vz7zn
+siI5x/fv+f4hsHfBT+w/Tx4vnTFB+7X6M8Wp1iL5zffkm+WwvOb+T9yPvH8
s77+R+bbjXg+/uRH5qPseH7z1UfuN/j7Tp32E9vD8+/Gup84P2F4frP/J+YL
/H2H9iXtXasiPjw/c/5PIz5qfeZ4rkN/H8VFoX8hOLQN/h7VlMPN9bQMz8dW
B4du7YPnY0PdnA88n+me52Y84u9XdIfIeSrj+biAL/QH9Lp6fOF8G/E80Zwv
9E9XPE9k/8L9eBGel0v4wnjC87Wa7l+5nhrgeYuZX7nf4Xll0z7aM+P5I+sD
cNA8PB/iSJ/C/osjX1hSmF/wPKFldwrHcwb674KDvuB5VZfHN67fZtBfAezx
ZjKej93xjflsEp6HusXyf/h87F+Wj8Pzevpy39F+i5XId8bv1I/nSd03vnP9
Qr/uF8uPKgz9pX9gPIvhH0sbcFyO/tA/4QfjvxL8+4P85wr8q/tJ/+6D/uCf
XE/joX8s7SWbQP/Gn9wf8fyWbn0q4+kP8tfFVM4Pnp80rPnF/cUPz6ecI7fg
8/Iff3E/PA9/DPvN9YC/BzWt+s34GY386iBX2475fPeb8ToE/irwh/PbFfl/
Odjj3iX44/Qf7gd8XvsNOQDj1eb7y3yaE/oD/3L/1CD/nwBHnMTznppXLH8U
f4+sz/OP88fndeuQR+ihvx84aCOf/3kB9s6I54mNuTxeC89MwHzWBAcF4Pk9
u4n2tXw+bwE41BN/n2zOnu418hPGY6sG9ohDvDp7kQfxefN54Lj1+Ptt/UFw
0JfnWO96Dcp7BOP5wRBw9AU8X62bTe7aFPN/AOx9bij0P6I9Cu1ru6UXjnBk
RjzOAMflWIt8u5f2enge3HYfnBjrRr7SZIA9ci6eh58GDpr3D/lqVwaO1wf7
7x2w+vsK9z/Wz4d415XPSH/Af/bt5HuT8XyYExyxC/Gl/UM2bEF8lM2E8Q7b
gfhuB45bgOdZNTcysT6e59SngkOvr0F8lMoM+x/0Z20NjnuyFvE9HuxdFM/r
Gb+Dg7Lp8XysTxb21wnPx7YEB8V8hf4xYO+9eN5bG027zzesv+JZwb3xfKKz
GdhjZS5cn40ie6C+fh3Lt8iP579GZKM/TyN+V2ej/zZi/Z3Nxnji9dcHcPTs
BfDf0Oyo36Eu/LcS7BGE9WL7D+wdshT6ksFxKbz+KpAD/tyK5ymtkTm4XibB
f6fIz54iP7zOQX8h3+jy5qSdz0/Xy0n7ZvjveE6uJzyvrk0CR3s1g/7cuWAv
iXxnrp2L8XQK669vLvqXz78+J2fD31uYcnpS7wHEa29w6OK+iNf5nlxPWqyn
bLkZT7kRr1Vzsz+8X8HVk7xyM/LZ3NzUj/3AEJOb8YH156ySh/bhyGcheTif
x6B3Fu19bkDvfnDQqCPYXx/mYf+7sZ66ahnPs5APpmuZr5CPLHvAHhE1oP+e
Yvy9jitdXsZnSeSzCPK83vDnzrxc/9Wh/zY4Lj4P9P8jp+DvDfW++cDBTuSz
bfkYj/j7VvdN8mVc7+l+g0Pb5Mb1V5n8zMdVcP3VllwZ7+vQXs/PfPAef1/5
E+xR8C+uv0oWQLz4r8f1V6sCjJex+PvWcbQ/uI7r829kr4m4vvUuSDv+PtbR
Apx4U4P3j4wuyPW9HO972gAO7T8H73cpVgjjr4b3d7magkN/DMb7Xcy050iP
6/O1hZjPNuHvW8+z/OLi+PvQxl7MX7lwfTvci/7E+85MUbSXKY/7izNe3F9s
+PvW9+DozNNxfT6kMNc/3v9iWUF24P7GHleY+RvvR3O9Lcx4KQD9+Ytw/nV4
f84ysHfGpfj725NFWD4v3k/2Gpy46SfeR6Utyv0iA/TXLcr+B+B9VLFg74S7
eJ/TS5bfMQ7vY/Qshvba9cb7D2uBI5Ij8P7IPsWYP/H+RoOrGP1ZFu9zylGc
+acV3kdVHRzd9LW05wwFhyZVFNbMByemrpL2rFlLML6z4v2bASVY/xneJ9mj
BNdzXrzvck4JxvMpac9oB4ce7Y33Ufl7M56n4P2M3clh5/E+yZnezO/Zhc37
vJk/NuH9kg+8me/wfkh9Fx+U7/wL79Oy+HB+RuJ9WruVvSbeR3XXh/E/E/73
0FHva9x/TiXvXYz3M+5QXEDKu24pPgf9f3X0XxT0lytJf6fD+762luR60sO/
N8mpC/H+2F8lGV9n8D7R0qXoj2p4/2mbUtyf6sC/18DRI/B+V+OPUvRHK7Fb
dKXJ6fA+sGBwxMnjeP/p2NKMDwPez5pSmv74IO9ftZUow/mxCzubl+F8DML7
e0eDoz9NkfcV69eD48Z8wfuRi5blejiL9zs3KcvxmPG+65G0e5TG+5HXlOX+
FIX3O58rS39cxfunG5WDXk8b3uc+rBz7M+F93avKMT4e4/3UDnB0VCreN/4O
HFEP7383hfnCfuEu3ke/3Jf5dhK+T3Dal+uzJd7n/saX/uyG943nK8/+Xkp/
dmt55o9GeH/2ifLcT27g/c6vynN9T8P7nfNU4Pq9iPc716nA+DwC/8Yq3oL3
476oQH9vw/udc1XkfCzC+6lrVmS8lxK7w6S4rrDxWUX290fYkr0S7Wvx/uxq
5Mrtxe7qVYn790Zh7bxKzD+xeP90lsqMb7yv16mvzHyH9x1relRW6wP6Z9Pe
jvoPsH5ALmG3nx/ms/hZvD+7mx/93xn6Z/hxvF8RH3v9OH+vxW6/78f1+xHv
n+7sz3xTSvo3T/On/3Mivnf5c/15Qf8df8b7TWGNRxX2j/dJW6dU4Xyfx/uT
t9NuQH9uZxXmw1Iyft2fKtTTAOuzrJ7++YT3J2/Rc/8ciPcP36A9NRrvd07V
c/2gf3OpAPZfBfpbB3A9eMK/V2kvifVn+k5OPY33f/tU5frG+7kdLatyfG2g
f0xV+j8b4uMr7ZHZ8P7n4tUYf7MRH82qcT2sQ3yPqsb8pkN8r2P5EdF4v3qR
6oyHkYjXs9W5/v2RDxrWoD/xfnj7f+R8BvSXXIPx5ov1Mrgm/bMT8RhZk+ut
Hd43fop2D7wfXvOmJvPnceSrvLW4v8YiXy2txf3tDd7nfrwW9VeT9nRJtMc7
ka9y1+Z6T0A81q7N+WW+Olab/l6D9/M/p73kUOSrnHWoPwnfR6hRh/19Q77q
XYft1UG+SqQ9ahvyVba6jO8nyFdV67L90vg+Qk/aF+N7GLq5dTnecfi+QOZ6
jI+p+H5DFXBcylJ8fyKknsp/yLez6tGfdnzvY389zie+96PxC2T+qIrvkXQN
ZHl8b8Q0nRxRAPr3BHK+8H0Xx71A5id8L8PYqT7jzRffn4ggNx0I/Tvrc76m
4fsZt+tzvQVC/7/63O8O4Hskk4OYz9D//2aR+vA9Mo0ziOuxlLD+dxDnwyZs
KtOA85kk7N7cgP0nC+uuN+B6xPfLjD/BQdlmCFtKGphvswvbWxmYD//ZxL/x
BsY7vn9o/mbgfOP7qzbvhvRPNXyfsQU4bn1fsWvGNOR6PC9s/cLy9YbBv8Ua
MV6rYD9r2ojjG4bvwZgb0T9d4f+1jZgPqiM+CjemP/F9H23jxszfq/B9kuGN
GV9lEB9Rjekvf/j/TGPGC75XpDc0YXsfRa9pSBPqh/+tK8gxtRHfcU043rzQ
/7YJ4/0Evq8yqCnzw2fEx7KmzF8boP8k7QH4non2tWIt4lvbDP5J6o71t4S8
+AC+T3K8Gf1ZCt+zeNmM+SQPvmfh2Zzlt+F7Gq7mnC8f5IccLZg/6mK/rd6C
7a3E9UIo7WMqIj88bcH9Li++V5G1Jds7hu9tBJDz/YaeOS0Zzx2QzzIF0z4P
+cw/mONLwf7aPZjraSLy2Uywhy++32HZF8z17IX8XrkV15cb+axLK7aH76GY
LWTPBFx/7W7F/IHvYzjvtmL7YFPH1vRfY3wvZSo5oRK+T7KjtcoXuH68BY4I
w/We7i/tO3Jiv5jUhv4vBH9ubcP5HYV8fLMN/XEd+n+Rww5Bf+m21NMK+8Xm
toz/z9gvrrVlPt4C/T/acn3nxv6qa0f/nIb/g9txvobh+uWKslfC/ppC3jsH
1y8ljMwnt7HfNTcy/5XB9x9GG6n3P+x3biPnG9+LcBZtz/y9G9cvTcnBN3B9
MLI9139PfF9hjSrfCt9/8OqA/i68wH7XqAP16fB9imEdOH5eP65i+RFGXB84
aG+H6xNDg46cb19cv4R1ZD5YDv3LO3I+UN95muXvtYf+tx2ptw2uvwZ2Yr7g
/aeVnIzvP7hPdGL8fMX3K16R986H/jydmX//4PprcWfmD3wPQhvbmflnJL5f
8aIz18c43B/l6sL4yIjvQ9Tswvlohfu3I104H3vh32dd6P930J+9K/2N+XBU
60p/9oD+Xl3p/1r4fsWTrtwf8b0Se5ZuzBcXcf+m78b1hvs/bQ/y0fq4/5/d
je09xvcrMnZn/lyN63P/7iyP71fou3Xn/PXC/eeM7qyfGfefe2kPz4Lr20oh
nN+CuL7tHEJ/hEH/tBDWx/2tfVcI99ef0H8nhPP1Cv7t0IP5r7/ot03pwfH1
xvcttit7N3zf4lYPro+H+L7EH7JXrLBjYk/mry44n9jSk/7/C/03elJ/dZyv
pJI7N8f9c6letNcS1m7qxXhPgn+v9uJ4nuD7HN97Mb6m4nzCJ5Tt4fsUzpah
9I8fvn9xOZTjG4XvX3wN5f6QD9+/KN6b8b4R+pv15n74GPf/o3ozPw3E+c9n
8vrxwq4iJubPB9DfxMT+nNA/wsT8VRPnK6tp758C/3r1Yfx5wL8Nydm2Ij6G
9uH6uov4XqnK/0Z8/0eO+Yn1F9SX+8E3fN9mcF/m65HIH5F9mc/xPRnXqb5c
f/j+j/YN7R6Hsf4G9EM83oxCfC/tx/ZqIL5P9GN7sxDfSf3o3wAZjyl3f/qn
OPy7qD/jdTP8ewwcYQAbn7O870vER84BjIcv8H+NAZzvCfDvYfKOa4iPRLLv
D8R3toHcnxojvqsO5HiN8H8vxVgv1seqfDjiO/Mgrp+MeB98lUHMn4E4PwwZ
xPU8HOdvs8ip+N6KK8Ng+rMB3mfvN5jxWQffR+k6mPGQHe+znz6Y/VXA90f2
DGb8LcT74CuGMT80wvlbpzDGb0mcv0WEMV6a4X32O8mVw/D8x+0wzs9OnL+1
H8L94RDOryYP4fxuhv5ttEfOwfmbU5UfgvO330M4v6Ox/sKHsj98/0WzZSj9
Ux76rw9lfsB5nekn7anwj7XkMPSf1BDfd7GR+z/E9wLih3F/d0D/t2Fsvym+
f+E9nPob4/ywxXDms/Q4n700nPrx/QHbl+Hcb3LgfLnYCM7vA+hvNoLrqzS+
72IewXgth/PNTyOYH5vgfLPwSI4vQFjXeCT3P3y/wDh8JNdnPWFL1Ej2Nxrv
pyxkRn/P+L0Ag5nzOQXv/68/iuvhGd7/P2gUx5+K/l6PYrz1w/M8/Udzvmfj
eZ4lo9n+LDzPc1zZ8T0Nw8vRjL/V+D6E5xj6JxTn7YvGMB/g+xz6o2Oopybe
h+kaw/jG+/itOcYyPi7heaTqY7kfe+J9+4fAEcn4fo3lKcsPyobfO7KOYz7E
7w+ugHFqfeD3gp7giNv4noctgfa93ngeKdN46sH79jVVyPXwvn19d2X/B/0z
x3P9H8L3CdJPIF/H9wkqT+D+E4PvK3SZwPWH751YLOTIHvD/7gmM7yj4t0I4
4vOHBr/HdAyn/3NB/9Rw5q/C0L+D5bd6Qf/tcO6/dvjXOJH+i4d/J4FDj2I8
7q0T6Q88v6W7CY6eXQn+/zWR8e1EfEyYRH9gvrSbJzE+K0P/tUlsrzri48ck
7odt8L5U3WTGY1/Ex8bJnK/d8O+Vyczf+H3GmjKZ6xv+dZSYwv2hNN6X2nwK
109xxMdFcMQffB/B7mZ5L7yv1VV0KtuDv7VNyUnTsJ5GTuX6W4H1/nEq88k5
rPfCEZzPBOSrRuTIkVh/wyI4niTkq1XguOC7yFcFpzHf6JCvGkxjvPsgX4WR
SxbF7x3Lp9G/F/B7zWnyDvRvDrRw/Rjxe9JAC/NXI+i3WjheH3w/5KSF87kD
+eoVOQDz4+g3nbwR8bF4OudvKOIjdjrnz4D4fgEO9eyO+T8yg3qvYf6fgYPm
dcX8Z5+J8jWb43tC1WYyH07H/B+cyfGbEb9PZjKfxkJflln052jo0ys+DH09
yOszY/4fzeL6x/c+XBlnMx6w3rX+s7lfnoH+buSb7aB/xmzGuw75Lf0c9gd/
6SvNof8rQX/nOfTfEOifNofrbx72g13g6KbDke/Lz6U/8L0aS4e5XD95sV9N
mUt9EZj/7bQnPMP1wq257O8w9qt28xifHfB718R5rL8a8bt1HuM5CPN/g/ZN
f7HfptK+9yOuB8bPJ+N7ZrpN8zk/+H3OeHU+8y/slu/zGZ9W6PdZwPw/Gesr
egH9a8N+e3kB9w9/xO/XBZy/UMRv8YXMd6sRv80XcvxfsL9dWMjyfRAfnxdy
PWN/cxdZxPHWQXw0WUT/hyF+R4DjiiMfuz6Qgx9gv/VajPJRZRAfDRfTn/he
m3noYs4v4sO2khxZH/FRYAn1lUd8BC1h/toP/YOXcP6ciI9I2r1aQ/8p2mO6
Yf+ot5SM7zHZByxlPrkC/UsV70B+O8Hy2bCfG5LI8+ph/fW1sjz2a81iK/Pf
TcTHMSv9fwj57TnLp5yA/pzLuH9tR3wsIIcPRnwfXsb2piI+EpcxnsYgPrJF
Qk/vXLgeqxrJ+c2O+IiJ5Pq/hPh+zPIB+H3ZmXk59bRAfOiXq/0P+TlkOeMR
17OOh2Dvyu0Q3xlWcHzxyM9+K7jeTyG+u65gfPaB/ukruF6xfrWalSxfCfFd
cSXXE/SYO5HDn0J/xErmy7fQ/39UvXV0U9n7vh3CMAwOxT0EKG7FPQQbHIp7
CFqc4h7C4F6YwSEEdyiuE4I7FPdQbHAI7r/Pe66771rfP6+1j9zn2Y8c23uv
i2vPTvzlmye9l3kebTxP/poK/SPnKX4O8Lyxep70zOF5I0btX0dyv95wvtof
c78+bL76+x336ythkykrzxvn52v/tNSXL3H7cz9uHrJAeoZgX+8C7T8I/WcW
qL9ZfzHqI+yYwXpVfstC2ZPv9+FLF8qff5D/Ti6UPaOof+/EFS+R/7IuUnwH
yX9/LpLekuSPY4vUn+3JH28WqR468Y/Mi1W/WuDf1RcrP6HH2Wex+qcN9+sv
Fyt+Y/HvDEuU76+h3x7HrM/l7rlE+eMT/v3PEuXLvMRf2qW6fv5Piay8VPHJ
/ZM3QrztDPpnL5Xeseg/uFT5aCrxV8GjfE+993fxKL6boH8m7NjtQf8+2Hcm
Av2PtP/zkuSPjsvUX27yx/Rl6g/uB+y7l0nPcvTHavvd/6A/qVf2bk/+m+JV
PJCfnTu8it/n6L/nlb1ZL86faLn0nEB/8eXyvxXYNxo2Nef+LPq2trd/Jn/8
vkLXN5P4LCbORr6yt14h/z2IfW+sUDxlwb6/rVS9KIh/FF4pfdH4Rwu1F36N
fvdK9f8b7BtvlY7P/U54gVXq/ynk76arZJ/p5O/RYn8U9l+7Sv77L/bNu5rj
veF+2xu+WvnBT/4esVrXHyR/r4Yd5/k/Kuyi9m9ZhP+xGqyR/bj/CQ5dI/uy
Hpt1hdojmnP/f26N8nU499ef4cAD3T8NXqv4y8z/ZMtgX7tUPL+cFtfl/sv7
Ya302Hh+yb6O41dn/TbnknU6Xhj3/yfWKb9wf+8Pwp6ErdCfZT36u7DembUm
7LvL+nPRR2HT0w7c/71W+5IB6M+0QXoi0F9tg66f57/I3rBvan2er15uUD4a
jn3Tb9T1TUB/FdizZSD6e6h9xyT0/71R19sM+6bZpOP3x76V4EDHQejvtkn+
NAv9Udp+CeuFestvVj6Zgj07w7ZTK9E7Ezb55qJ372b5nwf7Obdw/AmHsd+0
LfJn1osL37VF18v/fO772v7NGfQl2Sr7s/6bffJW9f8l7LcddpnZ33t3q+JN
6wP+Ea34oD/MxaN1PfzPGLUVdrn539F/K1r2ZL26YIJtsp/+hywKW3qPQH+r
bcqn9Efs9W3yX/o7JP522t/RP/ZC25UvsH9k8+3yB/zLO2a74ov9w0w7sMeN
JfR/ftjxeRf6m4gbnED/qB3Kh3vQv0b713yHffPslD/yv2V0o53yh9Ss9zEc
doTGY72PVTtlX9avtV/YqfyXk/9N6+9S/1j5n3PoLsVPGP9zLoctR1mf13lW
vIn/MaM+af8hCRlvNWi38gfnD/fAvpIP0H9K7WtZXzD6PWyrzfiu2Gx7dP3f
se9i2DXyJ/Y9vkf+nR39b/eoP/OhP8texU9a9NcQj6vJ/7JHYFN61vcNvhK7
CqI/4z7Vz/Tor7pP18t6wu5e+6SH9RtDXuxTfKfgf990+xXf2DfSBluyXEF/
9/2qX7fw7zlqL/wE/0h9QP6NP0RVPKDjsV6yv+sB1cc7+Mcstc//hP06HZT/
/sJ/ZxzU9X+j//eIj8q+Dw4qvrGX2fmv/OkD/jsVtixKTP/vFBfOTP8HxONy
Y9/EPtmL9ZvDJ/lkb+zr3uZT/KTBf+/4dH2s3xyb8BDtSfG/kDDYZLuO/bYc
0vXzv3LMzUPSx3rI5gR++Qf1KKyIX/FNfne2FCdmfevgNW3/4R/yg/mw6i3x
Hl4QtiRoS/83gz0ZOX60CzZd03jGX3Hbsx5oZL4jnG8y+cfb+Ijidw36Rx5R
/jqN/jWwIwXr+0aFHlV+OUL/N4RtOcjvwWFqzzcH/SuPyn6sBxx+Xttv24Z/
1Dum/luFfwwRH+V4du8x+dND9J+BXT3wd+9Hbb8JDht4XPmxFP6x9Ljil/6O
Oqn2yfKPd8d1fMZvBrOeUL5m/U/3ohOKZxf+cQy2LeuJf7yBXQU24x+ZT4q3
E3/VT8p/+b8+5rDa7bPw71di81X0Zzil/HMW/fZTqocx6O95Sv39jPzw/JTy
2Sf8O+1p+e9r9Fc+LXsxPjQ6AvbdfYD+2XBgltbzDDnD9d7m+N4K4iwmxjd1
OSN7MT7UPAsODGN90bB9ccz1+MueVf1kfadgR9g3kOuzTj8rezK+M3z3WdUX
zu+O1f6pEjGeocM5+V8KxpNOgR2rvqF/xznlw4SMz7p3Tv4Vjf0TnVe9+4B9
J8K2Dqz/ExV9XvWG9bn8t88rf9VkPMbvF5TPWY/IWgx2PO7GeN3NF2TPPown
vXFB/uZF/28Xld9ZX8Ve+KL64w7jy1pc1PFYT8p87aLi5Rn2jRej63vO+LIC
MYrfT+hvGqPjZ2G8zug4Tsd4l5/a/kYmxrvkvaTzV2O8S7g4G+uxxY64pPhP
zHid1Zdkz1vYN/dl+csj/KPBZfU/4znNw8SzRjFeZ4W2f8V4Wuc52NWkFuOJ
6l5RvS7HeJ3BsON8avQvuyL/YXyQ+/QV9cc77P9B+z+twniiAVcVD/UYr7ME
dh0oyXidE1eVLxg/GxNUu5n1WsxZr3G+M6y/FbUQdlVkPTv/Udixm/Xvgq+v
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
Pmoof8qHf6RopHq2gnxXFnbsPor+To0Ub0mxb6y273ue+pE0XPbKgf7S4dJf
FP0d1P65D/qnqP1ALeybuLH8kfwcVqKx/HEu+tvBpms1yH8TxenJp/7oxoqX
SNbDLdaE4z/vgX+3biK9Lcl/42BH6Aj8e3MT+ftG/Pum9nfvIH+0aAr3CJI/
3E21fWIjXswbYV/d1MTnNW3/g3hyxmum/rITf6NhX7tQ8se6ZtJXkPxxGQ7M
CiP//VT7FvJjdN7m8ucI8sdq2DEkh8GRF5sr32Yif3yDTRHFDI7J3YLtuyj/
NWyhfHwG+55rIX/Cnv7PLXS9XoOD1pby3zmsR1yvpfSzPnH44JbyP/Jz7Afx
+lrkP0srHT8f+mvDjjKN0T9A7TdOYP8lrVQPqCdhWVsrH7F+srMm7Ck6G/39
1L5kMPoXtpZ9pqD/qLjLX/hHtTbyL/JddG/YMaMD/jEPtmTpin8cbqN4eYd/
v2yj/thP/PVoK38nvs3/iBucw799beVP7fDvZ21VXycTn2nayb67ib/Z7VSv
ZpA/DsCelj3IH0/aKR8WQH+q9rJHU/SXb696eJD6sre99C7Gvg+1/RsX/p3c
ofyA/5rLOpQ/fsO/OzqUD8tRH+9r+zb4ZzBJB10f/W0t1UH+NRX/dnSQPT5j
/8kdtH9S/CORU/40i/ul4k7li3Xob+tUfZX+Cdq+6AH0b9X26xVvmzrSPp/6
aL3RUfuP5XwbOql/dT9xtZPi5SHnM3VW/GEf8+jO8u9J+ONa8Q/d71yCfTu6
4I8/Oitf5cAf83Qhnt7lJl5WwZYEJbDHBbV3mE6+/dpF+aAI9SxXV9WbD6xn
2qCr9Gi927NqLzqe5/lPXeX//Xhes3ZTfmU9uLC63dSfK3keGtRN9ub5J/i+
m+LRy/N89gj5p9YHrRUhf+R5290/QvWP5/XoxRHqjzKsd5ulu+K5Bevd1oBN
Nq1n2lft7n/Rv6C76hHrMZqPwp6arNcZVbUH9prcnOe1Xj0Uz6V5Xp7bQ+fn
edrq76H9WQ85/EUP1Q/WS43t3lP5hf1D/u6pet8K/f/Clk08T0Y+7Sn7fEZ/
6l7a/h+eN6N6KZ+wHrNzv/hzLZ7nHvfS/k1Zbzhlb8Wr1mctB9ty8H7FvUf8
jvc10Q/EiWfxvJysj/wvM8/LZfoo3rQeoLOP/LUfz/MBcZqivD9L0lf+NgL/
KNlX9eo478/a99X1dOL92STxY9YPtP7RT/WQ98fhYXCgI+9L3W36Kd/z/jV6
fD/p2cz7x5aR0s/5Y8ZGKl+1RN8m2JGC9RPDrosfL+V9WrP+si/vM4Iu2NXE
hv+u76/8MhT/vaLtdzfFvr/6S28P7DdqgPI98WFfAwe+9qf/YwYof1Wh/7+r
vRHrQ8aEDpQ9ed/iXDlQ/s/6uFHnYV9S3n/4vwyU/xam/3MOQt953i9a6w9S
f+2j/88Mkr+68d+P4rp/oj/HYOln/Up7ncHSx/VEDhys/P6G+HovbpKM9xHZ
hqCnOe/bnH/CgYu58NdF4nJjiafMQ6VvKu9Hqg9VfYvg/UifoYr3FbwfmT80
rv+ItyPav0Br3p/Zh8nfh/P+rOcw5bc5vD+ZC7sqsn5u2KFhsuda3p88F099
Tz6IGK56V5b3EXNgk+sc+g/Crssu9P8nbrIE/SEjdHzWT7fPGqH+ykc+2yde
y/tA76O49qHoTzFS/TED/eVg26nd5IPdI1V/Hdg3Vu05eqA/6Sjlq5Lks9Kj
pJf3h+EdRslfZuMP92DbsqX4Q+LR6g/8115itOLrK+//2o1W/imHP08cLX8h
P4cldHG8+7Xwh2KwKd9U8nFr8VP8zz/Opf4kPoKbXYo/4tddeAz2HHiA95Mt
xii+J5LP3GNkP94/hmwco3pennx2Te1P05IvmrqlN4R84XKrv9fzPWMd7OrB
+qHOy+IDF/me8dOt+ujie9HIsapn38hnq8URHvLZxbHSHySffVO7iePH5v5L
8ZiI7y0r/pL/s96v9xxs23aI74mftX27JHzvyjmO/qg+Gv31YMcq1uv1nx4n
+2Qg330YJ3/KTz62jKc9PfYMrz1e58uL/QeMV77NhX3fwY7Q83wvyjqB9jM/
0V9TnI3vU95+E1QPWH82ZqHaB37Hvpkmyh/5vhZVbaLOP4h813ui8u0y9M+b
qPw4A/2Htf8q2qOrTJI/X8Q/esC+u+TPkH8mKT+kwz98ai+JPSKfwZYEhfGP
iMnyZwv1ZPZkxddk9B+YrOvfiP4n4g9tsH+qKfKnY/jHzCnKV/Pwj71TFE9H
8I+HUxT/W/GP5FPZfnIa9JedKn9Bv3eX+Iz8+z7sGIL9zEmnyV5V0V9qmurN
BPQ7pine+D8qeFfbHxiMfyeaLn9uif7i0xU/dvS3na78bEX/BLU/aIV//D5D
8c/6pZFFZyje6/G9vNUM1cuHfO//S+09nvC/wuY4/sX38kIzFW/6f6w57Jmw
Hf1jZqq/V/C9fIPaE2o91Kva38X/a7FNZqkebeZ7/+hZ6v/j/E+xVu1NNvG/
wqVZ8i/9f/pjVlz953+KEVFsb2Y9ROeqKG1/jv+RL8C+Jaxf5v8apXyQnv/V
c83Gng18jCdaDtv6s75W9NnZ8l/+1479pPZlP/jf3jpH8ZSc8Qx150j/Rv6n
PyU2sx6V+cMc9S/je8Ky/01/pLrFeKNafyseVzOeqz/sWn+c8XJBbb/8FePl
svwjvddY36UG7NlygvEuff+R/ybgf/sFsOPzcP6nzzhX+crLeICqsC3xEv73
7jVX/VuY/73nzZU/n0W/X+0Da2Nf2zz5xzLs2x12zWE9G+vf8xQ/SRnP8O88
xWM+9D/V9hW7YN9u85VvGQ9mj5qveGN8WuT++cqnrCfjfQzbijNeOiblAtmb
9WOcMxaof05h3z3iHhcYj/ZA27vgYLKFOn9Z9JdZqPitiH13LozL74yXC8Tx
Nsb7JVmk67mG/pJwoNxl9LdfpOvJyni/u4uU/1gvMeyPxZw/y3rGY4QtVjvr
n0W1ERdfynij8YtVrxivFp5gCee7WBj7Flmi+jwU/S1hW4dOjDcaCzu6zMH+
m9S+rQXjuQouVbxmx7+bLdX+aRnf1NhD+22tBznKI32nON93j/yd9dXsw5dh
nx+D8ceVyxSP8sfz4iGM/4r5skz6WW/JnMur/KfxV16v4p3xdf4zsOcN60UG
P4pb1mB8YY7l7L/3DfFUB/bUZLx67Em152Q+gJD3ar/Bep/2bCtUn5mfIPLP
FfIn5lPwRq7Q+TW+9+0KxdNj/DHzSm3PePOo6rBj9yr8sc9K9b/Gf89fKf1B
xvdmWKV43cz4Xvsq1cN06O+p9lNT8ce5q1SfGG9qP6T2Zaz/GVN5tfylHPmq
+2rVw/mMP52zWvHGeEnnQdgxozTx9J/271iR8Zqz1qB3PvMNuPetkT7GP0c/
EpcczHjfFGtV75i/KnL6WtU7H/Ph7F6r+GS+opjYtbIf81mak61TvJ1lvpPS
cGBYQuaT2SHO+Z35hu6tUzxfYb6hxOsVX52ZT6bEetXLu6yP1E58kflCQ+7A
jhTXmR804QZdX1vmSyq2Qf4/B/2tN+h8/6F/XFz7A+Zj+W2j6iPz+UUV3ij7
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
BsOm9H+hfxnset4F/adhS4Km6P+o7ZtXJf4GJOb4JbFn7BLYdbkm+k/Cgb2j
0P8usfyT80VmTcL266nv5kViN+Ohw44lkT/yv4/zTRLZ38r/e5mSwtVL8z9L
taS63jb8b3M4qeJlAP/bvIQ9W1rxP0v6ZGw/lf8dY6vALjPjjUN6wqZrZ/kf
5Jm2L/ma/0HSJIfPXOF/kMqwybSG/0EiYE9NxnM6Z2v7dif53yZVCvTfPsP/
NhVSKL5+or9LCh2f/6/cM1NIf33+P9wL24o7+Z+sbErFUzv+L+wIO86P5X+y
aWq/xvjgmF3iiKr8fxgLWxZx/ChHKsUf/zP7J4srJuR/su2plF8YD2q9B1uy
8D9veKIQ2Zf/JWMniJOu4n+46BDZi/HT9ttqP7Ma/b+npn3tPfQXTS3/9/E/
3GbY8Tkf/8PdgF0jLeiPn0b9H4P+Qml0fYwPDjaHHbtz8r/hVW3fIT//G5rS
Kn+15H/J/GkVv5X5X7Kp2vOV4H/E0Wllr3b8b/gDDnQcyP+GedMpnzJ+OCw8
nfyhG/9Ljohr78v/iKvg/90f8r9h7vTK993537AB7PqxEv1Dxc8Xon+5tt8y
i/8j62ZQPJbj/8hBsCdjBfR6YMeQxug9rfaiZv6H7J+R4x+oh/0Ww56W2MN6
Ag5czIy+oLhjdfRlyST/w94hC2FHipP0/9FMinf+p4x8DXuOL0Jvxszyr+Xo
rQrbtsFOf2YdbxX2e6H2/k/Qny6L8us69NuyKH9gb2sPtff4B/s9VftR7Bmb
Oqvyw2z0V8qq679G/3dT+5x36I/KKn8+iD1TZeP6htFfYeWz6fwpjf9hnZ2z
KR+mMDhqhto3ZWS8255syj9FGW9cJrvqWX/GGzuzKz4XMt54anbVw3mMF9uZ
XfloA+MX7mdX/jjN+IX2FsXLQ8bvThIn/o/xxtstyq8fGY9316J8/RL9f+RQ
vjEznm18HM/nf9+tOWSvf9B/Szw/E/oTWJW/bmL/IlbFUyqj3b4JDjTqxnjC
61bpKY1+c044WzL0FxR/4H9jc/Ocskdi7HsFtrz6gn/8gk2+7/hHvlzqv1v4
R5Ncqpdz8e9RuZRv8O/Y77n+T74JyZNb+esT/0M2El/j///I4bDtvon8tjK3
4v8P8luuUF0P40Gc9UOV70aQ34aEyr/nkN+8ofK/tOg/A1vaWIm/OnmkLxP2
HQh7+qZD/1LYEUq+CDklbjAG/34vPp8E+0bm5XxNEmLfxXm1PRx2PK/itQj+
8Tav4ln2z5yP9gTF8I8F4tu58I8j+ZR/iR/3q3y6/kT4d4b88Ixn6LfDttoc
P/IQ7LkRSf54ru0bjCZ/pC2g/NYI/bYC6s/RjCcNKSj/3o++irDt3Qv0dYUd
ZRj/7p4F+wa2YjxmykL46/KujFcrV0j5ivGokZ0Kyf/O4r/TC8lfL2Df3bDJ
Vo3xaqULs/24IPbrEMf1GD8/pbDqa03ib0dh6U3NeLZAYV3/c+zXrgjtk5k/
IHYi7FjVgvywDfZMmED83YED5Q5i34RFle+d2G98Uem5SH7bUlT+/4r8fBP2
vDGj/7diiqdTxF/hYqo/34ivjcUU35/p/2vFVM9Goj9eGOfrjf/EFghTvHjx
32awJ+FR+v9ymOrLBvr/Z5js+y/5OV9xXR/jG8IaF4+LX/SPLK78sZj4+qbt
c24kP4SWwJ6n5L8NYVea0+gfpvbix4i/FSXUX+Qbe86Syu/YK7JeSfnfQPxj
cEn5a2/8Y5m470v0n4FtHbB/VO1S0nsY+w4oJXth/+CSUtI/Cv8+WUr1A/8L
f1dKx/+GffuVln8y/0PIotJqZzy0/Zi4aEL8+01cO+PnvJnKcL69z8gP88vI
/pXID4fVnvN3/OMl7LvbkfqXviz6DhRGf5Wy6u8S1A+f2p9zvdHPxOszoD9N
OeXDkvh35XI63zD8O0LccQn2fVJO8bEF/w4pr3y7A/0Vyqs+N0F/F9iRIh36
Z6r96Ef8I0UFjv+V8SrhZSuo3jB+w91RPFfzxUyDXf7kPJ/sUns+/n+PLFWR
41fPyfsNR0X5W1aeXyeLe/B9z7yjovxZ/1PfU/uBXrw/altJ/T+e9wMTKsl/
uvP8HV1J8VuB5+/blVQfY/k+8Xtljm/i+2PIuMrK9x14v7+5svxT7/dvVJZe
zb8Y36b+uMD3iULiYcy/7NwgTsX7xKirNvU331/8pirK93yfC+avonrn5P1j
0yqqV16+r15Se/FR/J/xo4rqC/Nzh+S1K/9lRX+4Xfmd+aYjR9iVv6vzf8M3
u45/gf9LcleVv/E/tbNBVcXHbf4vGVpV9ub7uH+52H2U/xus1VT/8mDfutXk
b4fRP6ia7F+W78MeccmC6D9dTfWR+cu9taqL7/N/Rv/qik/+PzAvqS5/YX7J
sBPiOQn5vhKsrnrN/KTWhTU43w4H/5McraF8S3+7X9dQfCfje0rGmqp//D9g
nyeuzXyJkX7YZX6KP7yoqXqA/8Wk+5PjXWP+X3OVP9V/vN+L+vdP5TfmV/Q/
1fYRfO8Jpq6l/syIP1eqJf8az/vobrWU3/heE/u4luJrNe+jU9VWvDJ/oL18
bfmji/dJndV+7RDvY2bUVn+f4n1G8jq0N//B+64yddTfvF+NctaRv/I+1j8V
thT+QDzu1P756vO+q2Rd+QPfo6Lb11V/1kL/pLrKX7yfD9kOO87z/t5+V9sn
XIt929RT/3bAvhPqKR4L8b5uq9rbYD/nLdhV4Cb6E9SXP68h3v6qr3zwGH/e
VF/5lXh2X6+v/NgIfzY3QF9oCfy5YAPl/wHE2/oGiq9++MeVBoqP1byP/iW+
dgL9+Rty/fd5/xzWpKHs5cO+MbAp/U3s+x0OXJyKf+RppHqF/4U3aiT7Bvle
OLyR/N+Jf3xtJP+bj31zhaPXPh3/rh8ue+L/3iGwbwn5KcYbrnzJfOfOHI11
fOW7Oo3VX8SLf6B4wlL8e2lj+Qv/s1hPiV995PtrZBPVk3joXdxE/j0Fvceb
6PzX0ftW3JL5wMMWNEX/LN6PO4/Avqn3iL9XsOvHeeyboZnyM/4VPhcOlOP7
lfuQ+Cvf76KfN1N8/MH75rTNlc9y8j7R1lz1gvFK3oNic13ed/7XXNfL9ztz
6hbSG0P8VWyh/kjJ+7iuau/4G+/jHrVQfzAez5qyJf5YJjXv48q1VH1hPJi7
UxxPoV5Pb6nr6cPzXrJW+F//gjzvlW4lfy3H+8QOcGD5dd4nTtH2y37xPnEn
7Frfm+e9Eq3hyz153mvXWvmP93/BiWr3M17duq216gPz+4XfEX/Ixfu41m2U
X8N5Xh3fRvmK8aP2LeI3nXkfd7ON9m/P8+pvbeWPeh83FvbVZXyyc2Nb+eN3
9F9T+13eB/rjtVM9nY/+Au0UPxe4H1oHe+Yf4n3n5XayzxP0/2wnf2C+uZB8
7ZVPeH9kbwz72iXifv+ieCDP5+bv2j7LU97XhjrEzHfnbOhQ/oxG/zCH/DGA
fb84FB8fsG/ODupf3p+563VQPV3N/ejgDvKH/3heXdZB+eYD9/sWp/wtyPNK
bafsPx39A+BAI8Zrm5c65c+8fwg76ZT/cn5/zY6KN84f7Ac7HvN+zLqoo/yj
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
3iv475Nlql9u9KXyiv9FX3mv7G+j//fEtVvIDw+9ym9m8kPy5cr3DfDfMsvl
j8xPHe1crvzOfPH2+8vlT6Xw3yQrFO/SX3JF3PHw3/YrlB/mYd/JK1T/xmO/
P1Yqvx4iP4StVL16it4JcZyR+VO3rpT/7KW/i6zieGm20N+tVim/fqC//4ID
N7P4DL2bYEeNnAZ7r2v/OgUMDmu+Gr0rYecY8fRaBketX63rbWqw/wrseN3C
4OCv1cpfXQ12j1qD3mdjDY5es0b1Y6rBsTFwoN9ag0N+rFF9bmCwPc9a5asy
BseshB2r2htsviDuMxP9X9fKPn+iP9c6na8b+uvDrh71DbaeXSd/L2xw+Kd1
qpfF0Z9jvfzdjP46sOO8F/sPVHvz7Nj3vdqvl8W+2TYo/6ZA/5+wpfp55tft
r/aOS5lfd/EG+du/5IPMG9F7Jwn2rQ7bDoWgv694MvrCF8CBYZpf94j2r0i8
hlTdpPzKfO72XrCvLvUkcu4m2Z/5fr2HNik+S5HPnsOOMunJZ903s/3zIuSz
OZsVf4/x54NwoNHfxON/m5UvmD/YmnqL/EXzL8/aouuxYN99avcNxb8fb9H1
ufHvlFvRf+Yu80eXg13OxPjHHtjTNS3+8QB2jP8N/0gWjd429F9Uadg1Bf/x
d4BNJ6tj3wDsmQC7E29j+6wV8Y8S2xQvbfHvdmofWRL/niQekAn/SLid6xmb
A/8otl35Lg/628CW7/nQP17tbXuhf8t21Zce+EfhHap/xJ+15Q75D+cPHyuu
aEX/xh2qd5XRf0375yHe7c120u5pjH+7YNv9PuhfBztSDEf/ZdiSuw36f6n9
c0fsO3KX2ptj39VwIH4p9F+EXduJR+t3tb/tgv7Q3fT3qL7YdwVsmz0U+56H
PTUzov/LbsX3Hfwj5x7lv3jorycOXU38nRG/Zn/nxz3Kv+/xb8texSf7+2vv
Vf/iX8EBar9Cf7nf7ZV982PfrPsU/6PRX3Of+mcu+iP3KR5g+6J9Ov8S7Jtp
v+pFDPatDnuGnsI/+ogT3kX/fG2f/hv2P7xf53uLfe0HlO/vYN+eB5QPXqD/
H9hzAY72qT0pHPvsgPLRM/wj4iBc/CT2nQ0HZn1G/4GDup6b6A35l/OPuIY9
Z8K2U8ex595/1f870PsIdrTwojeFj+uJ/YjesrCte+JDhj13w54niQy2x/qU
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
7XZe
         "]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], FontSize -> 13, 
         CapForm["Butt"], 
         AbsoluteThickness[1.6], 
         AbsoluteDashing[{6, 2}], 
         RGBColor[0, 1, 0]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             GraphicsBox[{{
                GrayLevel[1], 
                PolygonBox[{
                  Offset[{0., 2.975}], 
                  Offset[{-2.5764255762587047`, -1.4875}], 
                  Offset[{2.5764255762587047`, -1.4875}]}]}, 
               AbsoluteThickness[1], 
               Dashing[{}], 
               JoinedCurveBox[
                Line[{
                  Offset[{0., 2.975}], 
                  Offset[{-2.5764255762587047`, -1.4875}], 
                  Offset[{2.5764255762587047`, -1.4875}], 
                  Offset[{0., 2.975}]}], CurveClosed -> True]}], 
             GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                 PointSize[
                  Rational[1, 360]], FontSize -> 13, 
                 CapForm["Butt"], 
                 AbsoluteThickness[1.6], 
                 AbsoluteDashing[{6, 2}], 
                 RGBColor[0, 1, 0]]}, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}], CompressedData["
1:eJwllHs41Gkbx0ehnGq8Hdichg46jlHZwl6au5OKN0KJZSsU1RZZLCqNzS5K
dt7SlOpdgy1RNClUS2ZEY7WieqXkZZad3zEZig4bdtwz1zV/fK77+X3v730/
3+uxD4v22z2Rw+H8ov3raf8TOPjjvi5Qg1dSh03N17lCLYuPF6sh32HTLH7i
hXH2nVGuhpsfJisrzS+Os+pllRoclOpNGZOQZXOa1GCVsiCtfPL5cRZmPVWD
qktvCmuFLF7VpYbw61m5M12RWzt71LDEvWu06Tqy1KNPDZKwKWyVCfYTVn9W
Q8ArZ73pMy+Ns0htQsAWi7FVJt/koR/PmQTYTUu4y5BS1Eu1I2CPYltiYA6y
6tw8ArbWbNldX4WsMV5EwA91zJSKpfnjzDF2IwBcUi51R2FdkLyKgNTM7end
fyLL0zYR4PZQ9ebiHezHOeZNQOHq89WPHbEuE/oTQDZn1C5crOs/L4SAqLZh
PuWn+37+PgIUIV+H72/A74WGCQQknVu3vdAI+8tijmq/925ob49DlsaeJMDy
0davfnNEFvNzCLAP0wu2PlSA8zOXCLBxyIt3DSrEfrelBDS4iidN3Y+suVBM
APuqqHD6iK7eW0rAx8fDUeJeZHF8JQGnznK69RuQpSdrCJh99FjGtbJfUX+W
koDsSX/I5+RfHued/W0EOBy8NGHQtXicue//JCCo2LPg0IUSnG+0jwDfR43U
PQMZ9gv+RICniZ/87HJkYZQ+CS1LIlPf95Si3sBUEmImv1phe/sm7ltmQcJN
/6rmgaJbeH6vPQn+oRtvNSVX4DwL55PAKXv28d/GVagfspyE46vzTOeUlKNf
W3cSXljPzn0XhHqiknUkPLhvFe/wB+pJl20hIdA/q26XGTLvUSAJ3b+3xZl4
3Mb9t4WRcO/LgZMjQdjP1+wACYfT+nNqS7EuWJVEwtmktBHTEayrOCISlhme
KaGX3kF/dzNJ8Ohq7HzRVIP5mCkhIfz5ElejK9VY518iQfFubKrYHevc2AIS
qjZf+JYN/Q31K66S4EXv6lBs0p2nb5GwT78oeW7cPWRLBQk2lT84dh68i/M8
aCFhXrZr7/Rw3T6s/09CppVpD59FFqzpI2HbHTZ9eSbug7NjkIR0+/LAzGM4
v2j4AwkBSYnrTB4ga64YULD9Puny7jDOqzIwpyCnbZaFgVC3r/WWFCSsONU5
3wrvU95hR4HmWt/KC/p4n9zsRRS0VLS6h1ZgPgR8JwpIRf0Qd8dV9Ff3JQVh
MSd+/KkP8xQT6EGB3YxvIokFmDdVxAYKrvGjHD6cxrp02JcCg9zNp48qitBf
eKBWb/TzyrQMzFvM36EUtKe57Oy+ew3v60QkBc9KTatampFVA9EUPCyZndr7
Upc34jsKPqrClblbb6Af38MUCObP9uwZRRZkH6fAuEVPGeaFLGvMoqA4eljk
JyjDeZUXKUjK7QsoykE936dXKLjxL4o/8Rme5yquU3D7b5P3h5JxP5yjFRRs
HBpy4jYjS81rtPU9h67Uv9DVB5UUgOfPbFMY3o+mtJWCrdafzaedwDwL/tNB
wVD8Mh8bEe5fNdRLwew9O/PEQ7o8Nw9QYBj/ynqvbSXWzT5SELHYck2vOd4/
19iIhtfFRvLdpzCv8kdTabAzTvMQfoXnxUtm0WDOcN461eB5WeVcGiKO5uSR
7ZgvX68lNORyI09kZmH+duqvoMHbslmZMIQsXetBQ+gaI+rDJsyz5uZaGv6y
8NYvMqvF8wYBNMQP1nsZfncf/fXsoMEl4UmPYQmy1GI/DWe4B+r+4qOecPB7
GuJEvItdY8jy2J+0/kx7JdtmoB/NQQkNPGe3U7EBOH9r8H9pqDFzFfX66/Z1
/jINqppFY2vkuF/R1TIaViQq734hQVbl3aRh356suohm3HeMRkHDu/wj+RIW
9WSC37X7Sp0W7VmN+ZdntdEw8sx5zuRzuC9BQAcNk7baFPGn4r542ygaRm+M
vQ9xRJY+H6ahaoqp8spEZFHdCA37MwZLzwUiCwMMGThSmy5/6YPvhVhhykCD
k9cvB8JwvpjSaQy8+iK23NsM5xftsWFg+6jm9KJafB9iGuYzcMPbb+GBufg+
yLxcGOhR9Lj5pCLzVnsysMW24phGjH5b20IZiNobrXQrQz0VG8HAfuJd7OkD
uvdE71sGmqxE6tB49CM7E8dAP8/944Z56Ed87DADaysfS4JvY39x1HEG7rjZ
5hWmYD9uaLrW//Xp/umXkYVB5xjwNbWT7OzEPIj3ShkgThXxJk7HPMgGrzEg
tXC3XDBXjvM4VjGwK3pMT7gXWRZ5n4GEXF7SmQ/IvPhGBgQB8imF39dhP+cn
DPx4//mI13tk+WA7A048n4GGcmRpVxcDC5OsdgnfKrD/8X4GKsxrx55UY52X
/Unbn++R7hiILPaYxEJi6/9aKkp0+klcFqrssxx2jNSjvsiahfXbZ2Yn2yux
/saBhbd+b4O53g8xD84LWOA31Sa/WYjMlS9lgZ5WXZZy+QHOt3gDC2f5DySc
StRXSXxYSBkJtgg6ovPTvo2FAo/rA462eJ6rCWGhe+Wt5F8XIKu2RGq53iRh
8zNk3wlxLITYGLzeWIj+ZD0pLHD7c65KnzaMM0dygoUcy32fzvjp/Br9zEJt
2ouMrIvI8qazLPivL+r08mkU/gNhWBJL
         "]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], FontSize -> 13, 
         CapForm["Butt"], 
         AbsoluteThickness[1.6], 
         AbsoluteDashing[{2, 2}], 
         RGBColor[1, 0, 0]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             GraphicsBox[{
               PolygonBox[{
                 Offset[{0, 3.25}], 
                 Offset[{3.25, 0}], 
                 Offset[{0, -3.25}], 
                 Offset[{-3.25, 0}]}]}], 
             GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                 PointSize[
                  Rational[1, 360]], FontSize -> 13, 
                 CapForm["Butt"], 
                 AbsoluteThickness[1.6], 
                 AbsoluteDashing[{2, 2}], 
                 RGBColor[1, 0, 0]]}, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}], CompressedData["
1:eJwllHs41Pkexycqugyj23axGaWL+yT1uHZ8TtiKdVBt5ZQmpyjlVkh1aISo
qKH2lMthEOEgEivXIbmsnaKT0tWU5nfdZdqWNnuyZ3x+8zzzx+t5f7+f6/v7
Mw4I8z2kzePxcjX/aZq/Fg9/UmWxCvad7K/dap3lomHZeIUKEud+W/qdQfYU
i1U1KpB/Ej7IO4Qs07uvgj03zz0M886c4r4OhQrKD74rI8yu4/lHgyqY9NGJ
MP+ErAwcUkGsqf++ZRPIoqWsCiKe8tvC3+B9+Ru1Ctx8fN3CUzgen0FAnEfZ
zO9X5k6x8JmAgNPW4Z3nt+dNsWCjIQGZ1e57z9bJML6PMQExvtPeXs5AlhBr
CeiyGNIrliJ7b1lPQNJw2rsLamRB7CYCbnfsfuPVjyySuxIgJOwuDMdw8eI9
CHhhapU6sBpZaOStye81yvw8H1les4uAteKYNZ4rkPuOHSCAX/XHtsBVWJ/o
agQBY8WWo2HdqMtkZwjorSocpEryMb7yHAHi2MjCNktk+bwrBIhySnpdnyOH
n7xBQOu+pvzNLwqmWNqQS0A0v/C1+YbCKa76cpOA9s3/pi/2I0uaygn4blbB
qZa3nG5xhwAtxmz6kV+RxSP1BHxW9SZYjSELtrcToDf2ID4tqAjjp/Vq8nuf
KxYIijGezSsCSrMkDdMcynB+1wgCnoY/u59YXo76Lx8JcH6pf1dx8PYUu6z4
kwBHa1t9kQBZpjWbhCDShj9wuwrnETyPhGj2ck769DtTzPvJkIQlYdf6/tF2
F+d30YQEj53L6xXX6rCeVmsSPmo1uw161mI/WhtJyLhlxiYEVeP5S0BC5rY6
6sR/MZ5gnhcJrbX+7FlBDd6f6UvCN12hlxdFoK4m9pJw8esnqdPfoC4IP0yC
MDpHTUkxP88igoQX4yFVTDOysPafJFx1/RAs1PkB++9OJOHtsIXOY71GrMcj
g4Q1Qf3NdyTN2O/BGyTUWPnchcVNeH51Hgm/7ncYFG1ElgYWk7D9uWESswfv
8/orSNhqs/R4yEgD3tetJ0EaIjqqN3oP5yvpIWFgYKKTtqhH9n1Owv4Z3qGp
dsjiNRQJCn2Htqwhbp5NoySoFJ6ZXy9CdvnfOAlmWrsNoIjr5xKPAsfs4CIv
ipuPI58CD91Twen5qMu9FlKQmFaTd3YE5ytzMKSguuVKR9SrCrwftYqCdfVZ
9rZL0A+CdVYUfC9RpRxlSnEfRrYURJq+t4t6WoK62JGCh+XO2dmTN7H+NS4U
tO5aeKS1A1n9zJOCrMUZM1dZ38L3cHUnBa9PFzXN2o/xpHf2UBAav3ILe4Pz
n2sABSPq1D0r9Tn/TRyjYMbsAhP/GGThzxEUpN+aNeLjU4m66WkKdhxenSjU
Rv9Jc+Io6K0TXcp3QA43T6FAXXj98fF16FeR+CoFPvnNLW7BeF85u4CCZX5G
ocOBqIvd/kPBicbPu56G4X1JSjUFuQrHZOt65L4bDRSMi29OHNuL8/MWtVHQ
/vaDurMSdcGhnyhQqW6LyhbgfkQeAxREpdouPv8V7iPcaoiC2EeW7lciuf34
/ULBvSg/vcFK9L94yRgFOdWvRmt10Y/KTG0aFgYfPb/VBN9L3865NLQ/HrPN
XYTnpeQCGlIDdpT/McHpIcY06DkeljXaor9kFqY0zN4VxzeuRBa3rKPhTpdi
U6k/+lEkdKIBgv0S8g04f1/cTMPzs+PiJYmt2J/nNhpmLrM4Gr+c093+TkNA
5VBnX0IL+ulhIA1z/U8nt2xEXZoWSgPT3K2ut8T4fXskNJjPH9qSuRXZxTuD
hg1zMpKPrcX6hU6ZNFg3bTKpecG9d1kBDTY2gUXb/Lj3PFxCwzcJCtszOjhf
eUEVDY6xX+5aUdx+y5poGO/Pkj5uxvNVaZ00BPmcOfo5Dv0uCO2noWyH5bvo
gzgfXvIzGrq0u9+PEFz+ECUNjTP089yNuPk1fNDkDxmq2uuPLOydoCGp58iM
YDn3vdqgxUD06ziPwC5uPwW6DPx4PaJ6yV/wvcpsDRjgv5581ZiL/UqEixnQ
jYj3ne+E3wOB+UoGzmv/+ETXDr8XSmsRA876g4OqP1EX1jkxMGuHv2HSU4wv
TPFk4K9pzz61DWN+ic9+RuPXYUW/IZ4P5x9mwCfnpLNIjvt1CTvOwJNXpZeV
a7GevvUxDMTuMN43egLrUUfHaeIrgpNNrTG/zC6JgQu/tefvm4P7ExSmMiAS
rmpwnY4s/zabgXunY0IDlnH7fl7EgMEmnaXdg+gPZUA1A567O5pbDeVYX1Yj
A1a3wi9UFCLLXrcxIPxhxeHfo9twfk4KBv42+8NES0U7+q//iSZ/z8sKPQWy
oPklA+5xkW6n4pF5p95r5r3abHPDALI47zfNvPnLHTfVc/xwGgveVyirnQuR
vS35LHxq63E9YNSB+bPms7DAxLhg3vZO1AuMWAh8kDIUG4KsnLWWhd2tVit7
Mh6gf86ZsdCq6Ka+ENz5SGsWDownO2UHos67up6FJ5Ul/L0t97GfXfYsGKTM
mVzzAFl8aTsLH287T0AAsstJPxaUc4fuldgjq+0OsOBapKAflWK9woxQFnrc
/3X9FIn1Sh5Fs5BO35ys1cZ88t+TWLBvk4buTsR6ePZpLHzV2CDxONCF9Wmn
s7A/XrsleW63y/8BLskH+g==
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], FontSize -> 13, 
         CapForm["Butt"], 
         AbsoluteThickness[1.6], 
         AbsoluteDashing[{}], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], FontSize -> 13, 
         CapForm["Butt"], 
         AbsoluteThickness[1.6], 
         AbsoluteDashing[{6, 2}], 
         RGBColor[0, 1, 0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], FontSize -> 13, 
         CapForm["Butt"], 
         AbsoluteThickness[1.6], 
         AbsoluteDashing[{2, 2}], 
         RGBColor[1, 0, 0]]}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], FontSize -> 13, 
         CapForm["Butt"], 
         AbsoluteThickness[1.6], 
         AbsoluteDashing[{}], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], FontSize -> 13, 
         CapForm["Butt"], 
         AbsoluteThickness[1.6], 
         AbsoluteDashing[{6, 2}], 
         RGBColor[0, 1, 0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], FontSize -> 13, 
         CapForm["Butt"], 
         AbsoluteThickness[1.6], 
         AbsoluteDashing[{2, 2}], 
         RGBColor[1, 0, 0]]}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {2.8985508*^9, 0}, AxesStyle -> GrayLevel[0], 
     BaseStyle -> (FontSize -> 13), DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
         StyleBox["\"Price\"", 15, StripOnInput -> False], TraditionalForm], 
        None}, {
        FormBox[
         StyleBox["\"Date\"", 15, StripOnInput -> False], TraditionalForm], 
        None}}, FrameStyle -> GrayLevel[0], 
     FrameTicks -> {{Automatic, Automatic}, {
        Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, 
     FrameTicksStyle -> GrayLevel[0], GridLines -> {None, None}, 
     GridLinesStyle -> Directive[
       GrayLevel[0], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> 500, 
     LabelStyle -> {FontFamily -> "Helvetica", 
       GrayLevel[0]}, 
     Method -> {
      "NoShowPlotTheme" -> "Monochrome", "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{2.8985508*^9, 3.7056996*^9}, {0, 12822.9404296875}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {{}, Automatic}, TicksStyle -> Large}],
   FormBox[
    FormBox[
     TemplateBox[{"\"Price\"", "\"Buy\"", "\"Sell\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 13, 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{}], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 13, 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{}], 
                    GrayLevel[0]], {
                    InsetBox[
                    GraphicsBox[{
                    DiskBox[{0, 0}, 
                    Offset[{2.75, 2.75}]]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 13, 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{}], 
                    GrayLevel[0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {40, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 13, 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{6, 2}], 
                    RGBColor[0, 1, 0]], {
                    InsetBox[
                    GraphicsBox[{{
                    GrayLevel[1], 
                    PolygonBox[{
                    Offset[{0., 2.975}], 
                    Offset[{-2.5764255762587047`, -1.4875}], 
                    Offset[{2.5764255762587047`, -1.4875}]}]}, 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    JoinedCurveBox[
                    Line[{
                    Offset[{0., 2.975}], 
                    Offset[{-2.5764255762587047`, -1.4875}], 
                    Offset[{2.5764255762587047`, -1.4875}], 
                    Offset[{0., 2.975}]}], CurveClosed -> True]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 13, 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{6, 2}], 
                    RGBColor[0, 1, 0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 13, 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{2, 2}], 
                    RGBColor[1, 0, 0]], {
                    InsetBox[
                    GraphicsBox[{
                    PolygonBox[{
                    Offset[{0, 3.25}], 
                    Offset[{3.25, 0}], 
                    Offset[{0, -3.25}], 
                    Offset[{-3.25, 0}]}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 13, 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{2, 2}], 
                    RGBColor[1, 0, 0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Helvetica", 
          GrayLevel[0]}, Background -> Automatic, StripOnInput -> False], 
        TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "13"}], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"AbsoluteDashing", "[", 
                    RowBox[{"{", "}"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "13"}], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"AbsoluteDashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"6", ",", "2"}], "}"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "13"}], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"AbsoluteDashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    DiskBox[{0, 0}, 
                    Offset[{2.75, 2.75}]]}], ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{{
                    GrayLevel[1], 
                    PolygonBox[{
                    Offset[{0., 2.975}], 
                    Offset[{-2.5764255762587047`, -1.4875}], 
                    Offset[{2.5764255762587047`, -1.4875}]}]}, 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    JoinedCurveBox[
                    Line[{
                    Offset[{0., 2.975}], 
                    Offset[{-2.5764255762587047`, -1.4875}], 
                    Offset[{2.5764255762587047`, -1.4875}], 
                    Offset[{0., 2.975}]}], CurveClosed -> True]}], ",", 
                    "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    PolygonBox[{
                    Offset[{0, 3.25}], 
                    Offset[{3.25, 0}], 
                    Offset[{0, -3.25}], 
                    Offset[{-3.25, 0}]}]}], ",", "Automatic"}], "}"}]}], 
               "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"FontFamily", "\[Rule]", "\"Helvetica\""}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False]}], 
               "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.777400690319827*^9, {3.777400729405993*^9, 3.77740076817885*^9}, {
   3.777400902116544*^9, 3.777400908900495*^9}, {3.777400949158965*^9, 
   3.7774009718650713`*^9}, 3.777401887696982*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"2282fa6d-9120-44f2-9583-a1491d18b38b"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1861, 1013},
WindowMargins->{{0, Automatic}, {0, Automatic}},
FrontEndVersion->"12.0 para Linux x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info-136c4867-2782-48d1-b6af-30079f2b3532"->{
  Cell[36559, 846, 10987, 268, 89, "Print",ExpressionUUID->"0edb7e62-49c2-48c7-9543-54a490746bb3",
   CellTags->"Info-136c4867-2782-48d1-b6af-30079f2b3532"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info-136c4867-2782-48d1-b6af-30079f2b3532", 240058, 4834}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 201, 3, 99, "Title",ExpressionUUID->"43b831dd-9380-4570-8c05-05f3288b120c"],
Cell[CellGroupData[{
Cell[806, 29, 166, 3, 70, "Chapter",ExpressionUUID->"ae9a1b2b-8fcc-49c9-802c-32690bff9bdf"],
Cell[975, 34, 3710, 72, 213, "Input",ExpressionUUID->"9ce68d2d-e508-4460-8bed-94bb1ae32a6d",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[4710, 110, 243, 4, 55, "Subsection",ExpressionUUID->"12ca49e4-3935-4b83-8343-d0bb4e5649db"],
Cell[CellGroupData[{
Cell[4978, 118, 139, 2, 31, "Input",ExpressionUUID->"59beb081-dcf7-43c0-8846-e231cb53299b"],
Cell[5120, 122, 10984, 254, 184, "Output",ExpressionUUID->"df75c713-92ee-47e0-90ef-f5f1154427da"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16141, 381, 186, 3, 31, "Input",ExpressionUUID->"cb496632-c25b-46cd-8244-e4e933bd96c3"],
Cell[16330, 386, 20226, 458, 368, "Output",ExpressionUUID->"b1dd4bfa-e889-40f3-aa1c-c0b19d889e35"],
Cell[36559, 846, 10987, 268, 89, "Print",ExpressionUUID->"0edb7e62-49c2-48c7-9543-54a490746bb3",
 CellTags->"Info-136c4867-2782-48d1-b6af-30079f2b3532"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[47607, 1121, 165, 3, 70, "Chapter",ExpressionUUID->"5cc92109-5078-4b33-9581-462906b374da"],
Cell[47775, 1126, 411, 10, 47, "Input",ExpressionUUID->"41a03ed3-cc44-4089-b0af-8fbfee8b287e",
 InitializationCell->True],
Cell[48189, 1138, 1518, 33, 94, "Input",ExpressionUUID->"857b1afa-f812-49ea-9b91-0ec6c50440ec",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[49744, 1176, 178, 3, 70, "Chapter",ExpressionUUID->"5eaae94e-1e68-48c4-8231-1a6f4f2cdf02"],
Cell[49925, 1181, 208, 4, 36, "Text",ExpressionUUID->"e6879fdf-6bf8-4ea1-8fb6-31b0b864bb77"],
Cell[50136, 1187, 2321, 62, 252, "Code",ExpressionUUID->"e39654f6-1f97-45a1-bdd9-1aab9a194383"],
Cell[52460, 1251, 193, 3, 36, "Text",ExpressionUUID->"b71f47ca-977c-4de9-9918-0073eefb754b"],
Cell[52656, 1256, 11646, 295, 1202, "Code",ExpressionUUID->"947ee5d7-ddea-4d5a-89c3-7a87d59871f2"],
Cell[CellGroupData[{
Cell[64327, 1555, 166, 3, 55, "Subsection",ExpressionUUID->"d668494f-ebdd-400b-8f0a-5887330195a8"],
Cell[64496, 1560, 173, 3, 36, "Text",ExpressionUUID->"9ea65954-9d69-4798-842c-832f62a933d9"],
Cell[CellGroupData[{
Cell[64694, 1567, 360, 8, 31, "Input",ExpressionUUID->"8038292a-dc32-4d03-a7f9-bfcc8f8a5d7c"],
Cell[65057, 1577, 10110, 265, 140, "Output",ExpressionUUID->"49abcbed-5c66-440e-ab9f-a30dc61c6d80"]
}, Open  ]],
Cell[75182, 1845, 250, 6, 36, "Text",ExpressionUUID->"2b0bfd9f-f7f0-42e3-99f6-f5c8d8854c08"],
Cell[CellGroupData[{
Cell[75457, 1855, 366, 7, 31, "Input",ExpressionUUID->"5112d94e-2773-4840-b40b-3096684e52d1"],
Cell[75826, 1864, 2019, 45, 59, "Output",ExpressionUUID->"104a3163-1638-4c82-a294-333b60ffcc45"]
}, Open  ]],
Cell[77860, 1912, 227, 5, 36, "Text",ExpressionUUID->"01a23003-ab2c-4d03-98a9-b410a064dfa8"],
Cell[CellGroupData[{
Cell[78112, 1921, 278, 5, 31, "Input",ExpressionUUID->"0cb6c586-ed45-4c30-8db1-7bee9a4cb560"],
Cell[78393, 1928, 1675, 37, 59, "Output",ExpressionUUID->"04f360cb-5526-4837-9a7d-29613da69f38"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80105, 1970, 253, 4, 31, "Input",ExpressionUUID->"faab589d-f5bd-436a-bf20-8789352159a4"],
Cell[80361, 1976, 1204, 27, 59, "Output",ExpressionUUID->"579d3016-dfd6-4979-8fe1-922529fe30e2"]
}, Open  ]],
Cell[81580, 2006, 392, 8, 36, "Text",ExpressionUUID->"29d0404d-2e1d-430d-a662-19cc5b160f0f"],
Cell[CellGroupData[{
Cell[81997, 2018, 811, 18, 124, "Input",ExpressionUUID->"075664e4-f3b4-4b5b-98d6-add2b3eea66a"],
Cell[82811, 2038, 1551, 37, 44, "Output",ExpressionUUID->"0d486f83-5c27-4d3c-99b9-71378c4c753b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[84411, 2081, 160, 3, 55, "Subsection",ExpressionUUID->"45d17207-445e-4fde-85ac-7cf752276e06"],
Cell[84574, 2086, 266, 5, 31, "Input",ExpressionUUID->"5e4bcf5d-9edd-4ed4-928c-e6dddd1d9061"],
Cell[84843, 2093, 859, 18, 124, "Input",ExpressionUUID->"5ad18792-b430-4d39-a456-a44d2497712c"],
Cell[CellGroupData[{
Cell[85727, 2115, 1766, 39, 285, "Input",ExpressionUUID->"63b0f450-60f5-4c21-9565-2380372c2f49"],
Cell[87496, 2156, 152192, 2662, 331, "Output",ExpressionUUID->"2282fa6d-9120-44f2-9583-a1491d18b38b"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

